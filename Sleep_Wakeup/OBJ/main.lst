
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_PWM5RH
                                    1-   27     	extern	_PWM5DUTY
                                    1-   28     	extern	_P5CR1
                                    1-   29     	extern	_PWM4DUTY
                                    1-   30     	extern	_P4CR1
                                    1-   31     	extern	_PS3CV
                                    1-   32     	extern	_PWM3DUTY
                                    1-   33     	extern	_T3CR2
                                    1-   34     	extern	_T3CR1
                                    1-   35     	extern	_TMR3
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_PWM2DUTY
                                    1-   38     	extern	_P2CR1
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_STATUS
                                    1-   52     	extern	_PCL
                                    1-   53     	extern	_TMR0
                                    1-   54     	extern	_INTE2bits
                                    1-   55     	extern	_RFCbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_INTEbits
                                    1-   60     	extern	_BPHCONbits
                                    1-   61     	extern	_ABPLCONbits
                                    1-   62     	extern	_BWUCONbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_PORTBbits
                                    1-   65     	extern	_PORTAbits
                                    1-   66     	extern	__gptrget1
                                    1-   67     	extern	__nyc_ny8_startup
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     ; global declarations
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     	extern	_main
                                    1-   72     	extern	_app_display_all
                                    1-   73     	extern	_get_cap
                                    1-   74     	extern	_is_chg_or_dischg
                                    1-   75     	extern	_get_p_ext_int_status
                                    1-   76     	extern	_init_ip53xs
                                    1-   77     	extern	_ip55xs_read4Bytes
                                    1-   78     	extern	_ip55xs_write4Bytes
                                    1-   79     	extern	_ip53xs_readByte
                                    1-   80     	extern	_ip53xs_writeByte
                                    1-   81     	extern	_i2c_readByte
                                    1-   82     	extern	_i2c_writeByte
                                    1-   83     	extern	_i2c_send_nack
                                    1-   84     	extern	_i2c_send_ack
                                    1-   85     	extern	_i2c_chk_ack
                                    1-   86     	extern	_i2c_stop
                                    1-   87     	extern	_i2c_start
                                    1-   88     	extern	_gpioKeyScan
                                    1-   89     	extern	_io_uart_tx
                                    1-   90     	extern	__dly_us
                                    1-   91     	extern	_disable_breathing_mode
                                    1-   92     	extern	_enable_breathing_mode
                                    1-   93     	extern	_isr
                                    1-   94     	extern	_RESPIRATION_LAMP_TABLE
                                    1-   95     	extern	_DispTable
                                    1-   96     	extern	_INTE2
                                    1-   97     	extern	_RFC
                                    1-   98     	extern	_INTEDG
                                    1-   99     	extern	_AWUCON
                                    1-  100     	extern	_INTF
                                    1-  101     	extern	_INTE
                                    1-  102     	extern	_BPHCON
                                    1-  103     	extern	_ABPLCON
                                    1-  104     	extern	_BWUCON
                                    1-  105     	extern	_PCON
                                    1-  106     	extern	_PORTB
                                    1-  107     	extern	_PORTA
                                    1-  108     	extern	_gSysTick
                                    1-  109     	extern	_timer_slice_10ms
                                    1-  110     	extern	_displayDigit
                                    1-  111     	extern	_displayDecade
                                    1-  112     	extern	_displayHundred
                                    1-  113     	extern	_displayData
                                    1-  114     	extern	_forceDispTimer
                                    1-  115     	extern	_IP_DATA
                                    1-  116     	extern	_respiration_lamp_timer
                                    1-  117     	extern	_gpioKeyState
                                    1-  118     	extern	_gpioKeyWaitTimer
                                    1-  119     	extern	_timer_slice_16ms
                                    1-  120     	extern	_bat_level_buf
                                    1-  121     	extern	_delaySleepTimer
                                    1-  122     	extern	_displayTimer
                                    1-  123     	extern	_underVoltageDispTimer
                                    1-  124     	extern	_indicator_light_mode
                                    1-  125     	extern	_always_light_timer_shadow
                                    1-  126     	extern	_always_light_timer
                                    1-  127     	extern	_moto_work_mode
                                    1-  128     	extern	_vFlag_1
                                    1-  129     	extern	_vFlag_0
                                    1-  130     	extern	_io_led_scan
                                    1-  132     	extern PSAVE
                                    1-  133     	extern SSAVE
                                    1-  134     	extern WSAVE
                                    1-  135     	extern STK12
                                    1-  136     	extern STK11
                                    1-  137     	extern STK10
                                    1-  138     	extern STK09
                                    1-  139     	extern STK08
                                    1-  140     	extern STK07
                                    1-  141     	extern STK06
                                    1-  142     	extern STK05
                                    1-  143     	extern STK04
                                    1-  144     	extern STK03
                                    1-  145     	extern STK02
                                    1-  146     	extern STK01
                                    1-  147     	extern STK00
                                    1-  149     .segment "share_bank"
     0000                           1-  150     PSAVE:
                                    1-  151     	.res 1
                                    1-  152     .segment "share_bank"
     0000                           1-  153     SSAVE:
                                    1-  154     	.res 1
                                    1-  155     .segment "share_bank"
     0000                           1-  156     WSAVE:
                                    1-  157     	.res 1
                                    1-  158     .segment "share_bank"
     0000                           1-  159     STK12:
                                    1-  160     	.res 1
                                    1-  161     .segment "share_bank"
     0000                           1-  162     STK11:
                                    1-  163     	.res 1
                                    1-  164     .segment "share_bank"
     0000                           1-  165     STK10:
                                    1-  166     	.res 1
                                    1-  167     .segment "share_bank"
     0000                           1-  168     STK09:
                                    1-  169     	.res 1
                                    1-  170     .segment "share_bank"
     0000                           1-  171     STK08:
                                    1-  172     	.res 1
                                    1-  173     .segment "share_bank"
     0000                           1-  174     STK07:
                                    1-  175     	.res 1
                                    1-  176     .segment "share_bank"
     0000                           1-  177     STK06:
                                    1-  178     	.res 1
                                    1-  179     .segment "share_bank"
     0000                           1-  180     STK05:
                                    1-  181     	.res 1
                                    1-  182     .segment "share_bank"
     0000                           1-  183     STK04:
                                    1-  184     	.res 1
                                    1-  185     .segment "share_bank"
     0000                           1-  186     STK03:
                                    1-  187     	.res 1
                                    1-  188     .segment "share_bank"
     0000                           1-  189     STK02:
                                    1-  190     	.res 1
                                    1-  191     .segment "share_bank"
     0000                           1-  192     STK01:
                                    1-  193     	.res 1
                                    1-  194     .segment "share_bank"
     0000                           1-  195     STK00:
                                    1-  196     	.res 1
                                    1-  198     ;--------------------------------------------------------
                                    1-  199     ; global definitions
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     .segment "uninit"
     0000                           1-  202     _vFlag_0:
                                    1-  203     	.res 1
                                    1-  206     .segment "uninit"
     0000                           1-  207     _vFlag_1:
                                    1-  208     	.res 1
                                    1-  211     .segment "uninit"
     0000                           1-  212     _moto_work_mode:
                                    1-  213     	.res 1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _always_light_timer:
                                    1-  218     	.res 1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _always_light_timer_shadow:
                                    1-  223     	.res 1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _indicator_light_mode:
                                    1-  228     	.res 1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _underVoltageDispTimer:
                                    1-  233     	.res 1
                                    1-  236     .segment "uninit"
     0000                           1-  237     _displayTimer:
                                    1-  238     	.res 1
                                    1-  241     .segment "uninit"
     0000                           1-  242     _delaySleepTimer:
                                    1-  243     	.res 1
                                    1-  246     .segment "uninit"
     0000                           1-  247     _bat_level_buf:
                                    1-  248     	.res 1
                                    1-  251     .segment "uninit"
     0000                           1-  252     _timer_slice_16ms:
                                    1-  253     	.res 1
                                    1-  256     .segment "uninit"
     0000                           1-  257     _gpioKeyWaitTimer:
                                    1-  258     	.res 1
                                    1-  261     .segment "uninit"
     0000                           1-  262     _gpioKeyState:
                                    1-  263     	.res 1
                                    1-  266     .segment "uninit"
     0000                           1-  267     _respiration_lamp_timer:
                                    1-  268     	.res 1
                                    1-  271     .segment "uninit"
     0000                           1-  272     _IP_DATA:
                                    1-  273     	.res 4
                                    1-  276     .segment "uninit"
     0000                           1-  277     _forceDispTimer:
                                    1-  278     	.res 1
                                    1-  281     .segment "uninit"
     0000                           1-  282     _displayData:
                                    1-  283     	.res 1
                                    1-  286     .segment "uninit"
     0000                           1-  287     _displayHundred:
                                    1-  288     	.res 1
                                    1-  291     .segment "uninit"
     0000                           1-  292     _displayDecade:
                                    1-  293     	.res 1
                                    1-  296     .segment "uninit"
     0000                           1-  297     _displayDigit:
                                    1-  298     	.res 1
                                    1-  301     .segment "uninit"
     0000                           1-  302     _timer_slice_10ms:
                                    1-  303     	.res 1
                                    1-  306     .segment "uninit"
     0000                           1-  307     _gSysTick:
                                    1-  308     	.res 1
                                    1-  311     ;--------------------------------------------------------
                                    1-  312     ; absolute symbol definitions
                                    1-  313     ;--------------------------------------------------------
                                    1-  314     ;--------------------------------------------------------
                                    1-  315     ; compiler-defined variables
                                    1-  316     ;--------------------------------------------------------
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1034:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1035:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x101A:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1033:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1031:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1032:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x101B:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x101C:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x101D:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x101E:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x101F:
                                    1-  349     	.res	1
                                    1-  350     .segment "uninit"
     0000                           1-  351     r0x1020:
                                    1-  352     	.res	1
                                    1-  353     .segment "uninit"
     0000                           1-  354     r0x1021:
                                    1-  355     	.res	1
                                    1-  356     .segment "uninit"
     0000                           1-  357     r0x1022:
                                    1-  358     	.res	1
                                    1-  359     .segment "uninit"
     0000                           1-  360     r0x1024:
                                    1-  361     	.res	1
                                    1-  362     .segment "uninit"
     0000                           1-  363     r0x1023:
                                    1-  364     	.res	1
                                    1-  365     .segment "uninit"
     0000                           1-  366     r0x1027:
                                    1-  367     	.res	1
                                    1-  368     .segment "uninit"
     0000                           1-  369     r0x1026:
                                    1-  370     	.res	1
                                    1-  371     .segment "uninit"
     0000                           1-  372     r0x1025:
                                    1-  373     	.res	1
                                    1-  374     .segment "uninit"
     0000                           1-  375     r0x102E:
                                    1-  376     	.res	1
                                    1-  377     .segment "uninit"
     0000                           1-  378     r0x102A:
                                    1-  379     	.res	1
                                    1-  380     .segment "uninit"
     0000                           1-  381     r0x1028:
                                    1-  382     	.res	1
                                    1-  383     .segment "uninit"
     0000                           1-  384     r0x102D:
                                    1-  385     	.res	1
                                    1-  386     .segment "uninit"
     0000                           1-  387     _isr_timerCnt_65536_5:
                                    1-  388     	.res	1
                                    1-  390     .segment "uninit"
     0000                           1-  391     _isr_respiration_lamp_series_65536_5:
                                    1-  392     	.res	1
                                    1-  394     .segment "uninit"
     0000                           1-  395     _isr_led_lamp_65536_5:
                                    1-  396     	.res	1
                                    1-  398     .segment "uninit"
     0000                           1-  399     ___sdcc_saved_fsr:
                                    1-  400     	.res	1
                                    1-  402     .segment "uninit"
     0000                           1-  403     ___sdcc_saved_stk00:
                                    1-  404     	.res	1
                                    1-  406     .segment "uninit"
     0000                           1-  407     ___sdcc_saved_stk01:
                                    1-  408     	.res	1
                                    1-  410     .segment "uninit"
     0000                           1-  411     _get_p_ext_int_status_counter_65536_121:
                                    1-  412     	.res	1
                                    1-  414     .segment "uninit"
     0000                           1-  415     _is_chg_or_dischg_counter_65536_131:
                                    1-  416     	.res	1
                                    1-  418     ;--------------------------------------------------------
                                    1-  419     ; initialized data
                                    1-  420     ;--------------------------------------------------------
                                    1-  422     .segment "idata"
     0000                           1-  423     _io_led_scan_indexScan_65536_31:
     0000 0000                      1-  426     	dw	0x00	; 0
                                    1-  429     .segment "code"
     0000                           1-  430     _DispTable:
     0000 203F                      1-  431     	retia 0x3f	; 63
     0001 2006                      1-  432     	retia 0x06	; 6
     0002 205B                      1-  433     	retia 0x5b	; 91
     0003 204F                      1-  434     	retia 0x4f	; 79	'O'
     0004 2066                      1-  435     	retia 0x66	; 102	'f'
     0005 206D                      1-  436     	retia 0x6d	; 109	'm'
     0006 207D                      1-  437     	retia 0x7d	; 125
     0007 2007                      1-  438     	retia 0x07	; 7
     0008 207F                      1-  439     	retia 0x7f	; 127
     0009 206F                      1-  440     	retia 0x6f	; 111	'o'
     000A 2079                      1-  441     	retia 0x79	; 121	'y'
     000B 2050                      1-  442     	retia 0x50	; 80	'P'
     000C 2076                      1-  443     	retia 0x76	; 118	'v'
     000D 2000                      1-  444     	retia 0x00	; 0
                                    1-  446     .segment "code"
     0000                           1-  447     _RESPIRATION_LAMP_TABLE:
     0000 2001                      1-  448     	retia 0x01	; 1
     0001 2001                      1-  449     	retia 0x01	; 1
     0002 2001                      1-  450     	retia 0x01	; 1
     0003 2001                      1-  451     	retia 0x01	; 1
     0004 2001                      1-  452     	retia 0x01	; 1
     0005 2002                      1-  453     	retia 0x02	; 2
     0006 2002                      1-  454     	retia 0x02	; 2
     0007 2002                      1-  455     	retia 0x02	; 2
     0008 2002                      1-  456     	retia 0x02	; 2
     0009 2002                      1-  457     	retia 0x02	; 2
     000A 2002                      1-  458     	retia 0x02	; 2
     000B 2002                      1-  459     	retia 0x02	; 2
     000C 2002                      1-  460     	retia 0x02	; 2
     000D 2003                      1-  461     	retia 0x03	; 3
     000E 2003                      1-  462     	retia 0x03	; 3
     000F 2003                      1-  463     	retia 0x03	; 3
     0010 2003                      1-  464     	retia 0x03	; 3
     0011 2003                      1-  465     	retia 0x03	; 3
     0012 2004                      1-  466     	retia 0x04	; 4
     0013 2004                      1-  467     	retia 0x04	; 4
     0014 2004                      1-  468     	retia 0x04	; 4
     0015 2005                      1-  469     	retia 0x05	; 5
     0016 2005                      1-  470     	retia 0x05	; 5
     0017 2005                      1-  471     	retia 0x05	; 5
     0018 2006                      1-  472     	retia 0x06	; 6
     0019 2006                      1-  473     	retia 0x06	; 6
     001A 2006                      1-  474     	retia 0x06	; 6
     001B 2007                      1-  475     	retia 0x07	; 7
     001C 2007                      1-  476     	retia 0x07	; 7
     001D 2008                      1-  477     	retia 0x08	; 8
     001E 2009                      1-  478     	retia 0x09	; 9
     001F 2009                      1-  479     	retia 0x09	; 9
     0020 200A                      1-  480     	retia 0x0a	; 10
     0021 200B                      1-  481     	retia 0x0b	; 11
     0022 200B                      1-  482     	retia 0x0b	; 11
     0023 200C                      1-  483     	retia 0x0c	; 12
     0024 200D                      1-  484     	retia 0x0d	; 13
     0025 200E                      1-  485     	retia 0x0e	; 14
     0026 200F                      1-  486     	retia 0x0f	; 15
     0027 2010                      1-  487     	retia 0x10	; 16
     0028 2011                      1-  488     	retia 0x11	; 17
     0029 2012                      1-  489     	retia 0x12	; 18
     002A 2014                      1-  490     	retia 0x14	; 20
     002B 2015                      1-  491     	retia 0x15	; 21
     002C 2017                      1-  492     	retia 0x17	; 23
     002D 2018                      1-  493     	retia 0x18	; 24
     002E 201A                      1-  494     	retia 0x1a	; 26
     002F 201C                      1-  495     	retia 0x1c	; 28
     0030 201E                      1-  496     	retia 0x1e	; 30
     0031 2020                      1-  497     	retia 0x20	; 32
     0032 2022                      1-  498     	retia 0x22	; 34
     0033 2025                      1-  499     	retia 0x25	; 37
     0034 2027                      1-  500     	retia 0x27	; 39
     0035 202A                      1-  501     	retia 0x2a	; 42
     0036 202D                      1-  502     	retia 0x2d	; 45
     0037 2030                      1-  503     	retia 0x30	; 48	'0'
     0038 2034                      1-  504     	retia 0x34	; 52	'4'
     0039 2038                      1-  505     	retia 0x38	; 56	'8'
     003A 203C                      1-  506     	retia 0x3c	; 60
     003B 2040                      1-  507     	retia 0x40	; 64
     003C 2044                      1-  508     	retia 0x44	; 68	'D'
     003D 2049                      1-  509     	retia 0x49	; 73	'I'
     003E 204F                      1-  510     	retia 0x4f	; 79	'O'
     003F 2054                      1-  511     	retia 0x54	; 84	'T'
     0040 205A                      1-  512     	retia 0x5a	; 90	'Z'
     0041 2061                      1-  513     	retia 0x61	; 97	'a'
     0042 2068                      1-  514     	retia 0x68	; 104	'h'
     0043 206F                      1-  515     	retia 0x6f	; 111	'o'
     0044 2077                      1-  516     	retia 0x77	; 119	'w'
     0045 2080                      1-  517     	retia 0x80	; 128
     0046 2089                      1-  518     	retia 0x89	; 137
     0047 2093                      1-  519     	retia 0x93	; 147
     0048 209D                      1-  520     	retia 0x9d	; 157
     0049 20A8                      1-  521     	retia 0xa8	; 168
     004A 20B4                      1-  522     	retia 0xb4	; 180
     004B 20C1                      1-  523     	retia 0xc1	; 193
     004C 20CF                      1-  524     	retia 0xcf	; 207
     004D 20DE                      1-  525     	retia 0xde	; 222
     004E 20EE                      1-  526     	retia 0xee	; 238
     004F 20FF                      1-  527     	retia 0xff	; 255
     0050 20FF                      1-  528     	retia 0xff	; 255
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ; initialized absolute data
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ;--------------------------------------------------------
                                    1-  533     ; overlayable items in internal ram 
                                    1-  534     ;--------------------------------------------------------
                                    1-  535     ;	udata_ovr
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; reset vector 
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ORG	0x0000
     0000 3rrr                      1-  540     	LGOTO	__nyc_ny8_startup
                                    1-  541     ;--------------------------------------------------------
                                    1-  542     ; interrupt and initialization code
                                    1-  543     ;--------------------------------------------------------
                                    1-  544     ORG 0x0008
                                    1-  545     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  547     .segment "code"
     0000                           1-  548     __sdcc_interrupt:
                                    1-  549     ;***
                                    1-  550     ;  pBlock Stats: dbName = I
                                    1-  551     ;***
                                    1-  552     ;functions called:
                                    1-  553     ;   _io_led_scan
                                    1-  554     ;   __gptrget1
                                    1-  555     ;   _io_led_scan
                                    1-  556     ;   __gptrget1
                                    1-  557     ;4 compiler assigned registers:
                                    1-  558     ;   STK00
                                    1-  559     ;   STK01
                                    1-  560     ;   r0x1034
                                    1-  561     ;   r0x1035
                                    1-  562     ;; Starting pCode block
     0000                           1-  563     _isr:
                                    1-  564     ; 0 exit points
                                    1-  565     	.line	189, "main.c"; 	void isr(void) __interrupt(0) // 64us  8MHz 2T
     0000 00rr                      1-  566     	MOVAR	WSAVE
     0001 1503                      1-  567     	SWAPR	STATUS,W
     0002 0283                      1-  568     	CLRR	STATUS
     0003 00rr                      1-  569     	MOVAR	SSAVE
     0004 010A                      1-  570     	MOVR	PCHBUF,W
     0005 028A                      1-  571     	CLRR	PCHBUF
     0006 00rr                      1-  572     	MOVAR	PSAVE
     0007 0104                      1-  573     	MOVR	FSR,W
                                    1-  574     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  575     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  576     	MOVR	STK00,W
                                    1-  577     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  578     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  579     	MOVR	STK01,W
                                    1-  580     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  581     	MOVAR	___sdcc_saved_stk01
                                    1-  582     	.line	195, "main.c"; 	if (TM0IF)
     0010 08rr                      1-  583     	BTRSS	_INTFbits,0
                                    1-  584     	MGOTO	_02034_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  585     	.line	197, "main.c"; 	TM0IF = 0;
     0012 21FE                      1-  586     	MOVIA	0xfe
     0013 00rr                      1-  587     	MOVAR	(_INTFbits + 0)
                                    1-  588     	.line	202, "main.c"; 	timerCnt++;
                                    1-  589     	BANKSEL	_isr_timerCnt_65536_5
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1-  590     	INCR	_isr_timerCnt_65536_5,F
                                    1-  591     	.line	204, "main.c"; 	if (!(timerCnt & 0x0F))
     0016 01rr                      1-  592     	MOVR	_isr_timerCnt_65536_5,W
     0017 220F                      1-  593     	ANDIA	0x0f
     0018 0903                      1-  594     	BTRSS	STATUS,2
                                    1-  595     	MGOTO	_00015_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  596     	.line	208, "main.c"; 	bFlag_gSysTick_Change = 1; // 1ms
                                    1-  597     	BANKSEL	_vFlag_0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 18rr                      1-  598     	BSR	_vFlag_0,0
                                    1-  599     	.line	210, "main.c"; 	if (!(timerCnt))
                                    1-  600     	BANKSEL	_isr_timerCnt_65536_5
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1-  601     	MOVR	_isr_timerCnt_65536_5,W
     001E 0903                      1-  602     	BTRSS	STATUS,2
                                    1-  603     	MGOTO	_00015_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  604     	.line	213, "main.c"; 	bFlag_slice_16ms = 1;
                                    1-  605     	BANKSEL	_vFlag_0
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 18rr                      1-  606     	BSR	_vFlag_0,1
     0022                           1-  607     _00015_DS_:
                                    1-  608     	.line	217, "main.c"; 	if (!(timerCnt & 0x07))
                                    1-  609     	BANKSEL	_isr_timerCnt_65536_5
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1-  610     	MOVR	_isr_timerCnt_65536_5,W
     0024 2207                      1-  611     	ANDIA	0x07
     0025 0D03                      1-  612     	BTRSC	STATUS,2
                                    1-  613     	.line	219, "main.c"; 	io_led_scan();
                                    1-  614     	MCALL	_io_led_scan
     0026 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  615     	.line	222, "main.c"; 	if (bFlag_is_breathing_mode) // 100us
                                    1-  616     	BANKSEL	_vFlag_1
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 08rr                      1-  617     	BTRSS	_vFlag_1,0
                                    1-  618     	MGOTO	_02034_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  619     	.line	224, "main.c"; 	respiration_lamp_timer++;
                                    1-  620     	BANKSEL	_respiration_lamp_timer
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1-  621     	MOVR	_respiration_lamp_timer,W
                                    1-  622     	BANKSEL	r0x1034
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 00rr                      1-  623     	MOVAR	r0x1034
     002E 05rr                      1-  624     	INCR	r0x1034,W
                                    1-  625     	BANKSEL	_respiration_lamp_timer
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1-  626     	MOVAR	_respiration_lamp_timer
                                    1-  627     	.line	226, "main.c"; 	if (!(respiration_lamp_timer))
     0031 01rr                      1-  628     	MOVR	_respiration_lamp_timer,W
     0032 0903                      1-  629     	BTRSS	STATUS,2
                                    1-  630     	MGOTO	_02021_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  631     	.line	228, "main.c"; 	if (bFlag_inc_or_dec)
                                    1-  632     	BANKSEL	_vFlag_1
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 08rr                      1-  633     	BTRSS	_vFlag_1,1
                                    1-  634     	MGOTO	_02018_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  635     	.line	230, "main.c"; 	if (!(--respiration_lamp_series))
                                    1-  636     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 17rr                      1-  637     	DECRSZ	_isr_respiration_lamp_series_65536_5,F
                                    1-  638     	MGOTO	_02019_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  639     	.line	232, "main.c"; 	bFlag_inc_or_dec = 0;
                                    1-  640     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 1Crr                      1-  641     	BCR	_vFlag_1,1
                                    1-  642     	.line	234, "main.c"; 	if (++indicator_light_mode > 2)
                                    1-  643     	BANKSEL	_indicator_light_mode
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 05rr                      1-  644     	INCR	_indicator_light_mode,W
                                    1-  645     	BANKSEL	r0x1034
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  646     	MOVAR	r0x1034
                                    1-  647     	BANKSEL	_indicator_light_mode
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1-  648     	MOVAR	_indicator_light_mode
                                    1-  649     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  650     ;;unsigned compare: left >= lit(0x3=3), size=1
     0042 2103                      1-  651     	MOVIA	0x03
                                    1-  652     	BANKSEL	r0x1034
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 04rr                      1-  653     	SUBAR	r0x1034,W
     0045 0803                      1-  654     	BTRSS	STATUS,0
                                    1-  655     	MGOTO	_02019_DS_
     0046 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  656     	.line	236, "main.c"; 	indicator_light_mode = 0;
                                    1-  657     	BANKSEL	_indicator_light_mode
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 02rr                      1-  658     	CLRR	_indicator_light_mode
                                    1-  659     	MGOTO	_02019_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
     004A                           1-  660     _02018_DS_:
                                    1-  661     	.line	242, "main.c"; 	if (++respiration_lamp_series >= CONST_RESPIRATION_LAMP_SERIES)
                                    1-  662     	BANKSEL	_isr_respiration_lamp_series_65536_5
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 05rr                      1-  663     	INCR	_isr_respiration_lamp_series_65536_5,F
                                    1-  664     ;;unsigned compare: left < lit(0x50=80), size=1
     004C 2150                      1-  665     	MOVIA	0x50
     004D 04rr                      1-  666     	SUBAR	_isr_respiration_lamp_series_65536_5,W
     004E 0803                      1-  667     	BTRSS	STATUS,0
                                    1-  668     	MGOTO	_02019_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  669     	.line	244, "main.c"; 	respiration_lamp_series = CONST_RESPIRATION_LAMP_SERIES;
     0050 2150                      1-  670     	MOVIA	0x50
     0051 00rr                      1-  671     	MOVAR	_isr_respiration_lamp_series_65536_5
                                    1-  672     	.line	245, "main.c"; 	bFlag_inc_or_dec = 1;
                                    1-  673     	BANKSEL	_vFlag_1
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 18rr                      1-  674     	BSR	_vFlag_1,1
     0054                           1-  675     _02019_DS_:
                                    1-  676     	.line	249, "main.c"; 	led_lamp = RESPIRATION_LAMP_TABLE[respiration_lamp_series];
                                    1-  677     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 01rr                      1-  678     	MOVR	_isr_respiration_lamp_series_65536_5,W
     0056 25rr                      1-  679     	ADDIA	(_RESPIRATION_LAMP_TABLE + 0)
                                    1-  680     	BANKSEL	r0x1034
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1-  681     	MOVAR	r0x1034
     0059 21rr                      1-  682     	MOVIA	((_RESPIRATION_LAMP_TABLE + 0) >> 8) & 0xff
     005A 2600                      1-  683     	ADCIA	0x00
                                    1-  684     	BANKSEL	r0x1035
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1-  685     	MOVAR	r0x1035
                                    1-  686     	BANKSEL	r0x1034
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1-  687     	MOVR	r0x1034,W
     005F 00rr                      1-  688     	MOVAR	STK01
                                    1-  689     	BANKSEL	r0x1035
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1-  690     	MOVR	r0x1035,W
     0062 00rr                      1-  691     	MOVAR	STK00
     0063 2180                      1-  692     	MOVIA	0x80
                                    1-  693     	MCALL	__gptrget1
     0064 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  694     	BANKSEL	_isr_led_lamp_65536_5
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 00rr                      1-  695     	MOVAR	_isr_led_lamp_65536_5
     0067                           1-  696     _02021_DS_:
                                    1-  697     	.line	252, "main.c"; 	if (respiration_lamp_timer >= led_lamp)
                                    1-  698     	BANKSEL	_isr_led_lamp_65536_5
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 01rr                      1-  699     	MOVR	_isr_led_lamp_65536_5,W
                                    1-  700     	BANKSEL	_respiration_lamp_timer
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 04rr                      1-  701     	SUBAR	_respiration_lamp_timer,W
     006B 0803                      1-  702     	BTRSS	STATUS,0
                                    1-  703     	MGOTO	_02029_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  704     	.line	254, "main.c"; 	P_LED_R_OFF;
     006D 1Err                      1-  705     	BCR	_PORTBbits,4
                                    1-  706     	.line	255, "main.c"; 	P_LED_G_OFF;
     006E 1Drr                      1-  707     	BCR	_PORTBbits,3
                                    1-  708     	.line	256, "main.c"; 	P_LED_B_OFF; // white led
     006F 1Drr                      1-  709     	BCR	_PORTBbits,2
                                    1-  710     	MGOTO	_02034_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
     0071                           1-  711     _02029_DS_:
                                    1-  712     	.line	260, "main.c"; 	if (0x01 == indicator_light_mode)
                                    1-  713     	BANKSEL	_indicator_light_mode
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 01rr                      1-  714     	MOVR	_indicator_light_mode,W
     0073 2401                      1-  715     	XORIA	0x01
     0074 0903                      1-  716     	BTRSS	STATUS,2
                                    1-  717     	MGOTO	_02026_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  718     	.line	262, "main.c"; 	P_LED_B_ON; // white
     0076 19rr                      1-  719     	BSR	_PORTBbits,2
                                    1-  720     	MGOTO	_02034_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1-  721     _02026_DS_:
                                    1-  722     	.line	264, "main.c"; 	else if (0x02 == indicator_light_mode)
                                    1-  723     	BANKSEL	_indicator_light_mode
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 01rr                      1-  724     	MOVR	_indicator_light_mode,W
     007A 2402                      1-  725     	XORIA	0x02
     007B 0903                      1-  726     	BTRSS	STATUS,2
                                    1-  727     	MGOTO	_02023_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  728     	.line	266, "main.c"; 	P_LED_G_ON; // green
     007D 19rr                      1-  729     	BSR	_PORTBbits,3
                                    1-  730     	MGOTO	_02034_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
     007F                           1-  731     _02023_DS_:
                                    1-  732     	.line	270, "main.c"; 	P_LED_R_ON; // orange
     007F 1Arr                      1-  733     	BSR	_PORTBbits,4
     0080                           1-  734     _02034_DS_:
                                    1-  735     	.line	276, "main.c"; 	if (INTFbits.PABIF)
     0080 08rr                      1-  736     	BTRSS	_INTFbits,1
                                    1-  737     	MGOTO	_02037_DS_
     0081 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  738     	.line	278, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     0082 21FD                      1-  739     	MOVIA	0xfd
     0083 00rr                      1-  740     	MOVAR	(_INTFbits + 0)
     0084                           1-  741     _02037_DS_:
                                    1-  742     	.line	280, "main.c"; 	}
                                    1-  743     	BANKSEL	___sdcc_saved_stk01
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1-  744     	MOVR	___sdcc_saved_stk01,W
     0086 00rr                      1-  745     	MOVAR	STK01
                                    1-  746     	BANKSEL	___sdcc_saved_stk00
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1-  747     	MOVR	___sdcc_saved_stk00,W
     0089 00rr                      1-  748     	MOVAR	STK00
                                    1-  749     	BANKSEL	___sdcc_saved_fsr
     008A rrrr                      3-  109 m1      .banksel ram_address
     008B 01rr                      1-  750     	MOVR	___sdcc_saved_fsr,W
     008C 0084                      1-  751     	MOVAR	FSR
     008D 01rr                      1-  752     	MOVR	PSAVE,W
     008E 008A                      1-  753     	MOVAR	PCHBUF
     008F 0283                      1-  754     	CLRR	STATUS
     0090 15rr                      1-  755     	SWAPR	SSAVE,W
     0091 0083                      1-  756     	MOVAR	STATUS
     0092 15rr                      1-  757     	SWAPR	WSAVE,F
     0093 15rr                      1-  758     	SWAPR	WSAVE,W
     0094                           1-  759     END_OF_INTERRUPT:
     0094 0011                      1-  760     	RETIE	
                                    1-  762     ;--------------------------------------------------------
                                    1-  763     ; code
                                    1-  764     ;--------------------------------------------------------
                                    1-  765     ; code_main	code
                                    1-  766     ;***
                                    1-  767     ;  pBlock Stats: dbName = M
                                    1-  768     ;***
                                    1-  769     ;has an exit
                                    1-  770     ;functions called:
                                    1-  771     ;   _gpioKeyScan
                                    1-  772     ;   _get_p_ext_int_status
                                    1-  773     ;   _is_chg_or_dischg
                                    1-  774     ;   _get_cap
                                    1-  775     ;   _app_display_all
                                    1-  776     ;   _gpioKeyScan
                                    1-  777     ;   _get_p_ext_int_status
                                    1-  778     ;   _is_chg_or_dischg
                                    1-  779     ;   _get_cap
                                    1-  780     ;   _app_display_all
                                    1-  781     ;1 compiler assigned register :
                                    1-  782     ;   r0x102D
                                    1-  783     ;; Starting pCode block
                                    1-  784     .segment "code"; module=main, function=_main
     0000                           1-  786     _main:
                                    1-  787     ; 2 exit points
                                    1-  788     	.line	1435, "main.c"; 	DISI();
     0000 0013                      1-  789     	DISI
                                    1-  790     	.line	1437, "main.c"; 	BPHCON = (unsigned char)~C_PB0_PHB; // Enable PB1 Pull-High resistor
     0001 21FE                      1-  791     	MOVIA	0xfe
     0002 00rr                      1-  792     	MOVAR	_BPHCON
                                    1-  793     	.line	1438, "main.c"; 	BWUCON = C_PB0_Wakeup;              // Enable PB1 input change wakeup function
     0003 2101                      1-  794     	MOVIA	0x01
     0004 00rr                      1-  795     	MOVAR	_BWUCON
                                    1-  796     	.line	1440, "main.c"; 	IOSTA = 0xFF;
     0005 21FF                      1-  797     	MOVIA	0xff
     0006 000r                      1-  798     	IOST	_IOSTA
                                    1-  799     	.line	1441, "main.c"; 	IOSTB = 0xFF;
     0007 000r                      1-  800     	IOST	_IOSTB
                                    1-  801     	.line	1443, "main.c"; 	PORTA = 0x00; // PORTB data buffer=0x00
     0008 02rr                      1-  802     	CLRR	_PORTA
                                    1-  803     	.line	1444, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1-  804     	CLRR	_PORTB
                                    1-  805     	.line	1450, "main.c"; 	OSCCR = C_FLOSC_Sel; // OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     000A 0200                      1-  806     	CLRA	
     000B 00rr                      1-  808     	SFUN	_OSCCR
     000C 0000                      1-  809     	NOP	
                                    1-  810     	.line	1453, "main.c"; 	OSCCR = C_FHOSC_Sel; // OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     000D 2101                      1-  811     	MOVIA	0x01
     000E 00rr                      1-  813     	SFUN	_OSCCR
     000F 0000                      1-  814     	NOP	
                                    1-  815     	.line	1468, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     0010 0200                      1-  816     	CLRA	
     0011 000r                      1-  817     	IOST	_PCON1
                                    1-  818     	.line	1471, "main.c"; 	T0MD = 0x0F; // 8M,2T  Prescaler0 to wdt,
     0012 210F                      1-  819     	MOVIA	0x0f
     0013 0003                      1-  820     	T0MD	
                                    1-  821     	.line	1480, "main.c"; 	INTE = 0x01; // Timer0 overflow interrupt enable bit
     0014 2101                      1-  822     	MOVIA	0x01
     0015 00rr                      1-  823     	MOVAR	_INTE
                                    1-  824     	.line	1483, "main.c"; 	PCON = 0xC8; //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0016 21C8                      1-  825     	MOVIA	0xc8
     0017 00rr                      1-  826     	MOVAR	_PCON
                                    1-  827     	.line	1485, "main.c"; 	PCON1 = 0x01; //  C_TMR0_En;                          // Enable Timer0
     0018 2101                      1-  828     	MOVIA	0x01
     0019 000r                      1-  829     	IOST	_PCON1
                                    1-  830     	.line	1486, "main.c"; 	ENI();
     001A 0004                      1-  831     	ENI
                                    1-  832     	.line	1488, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     001B 2114                      1-  833     	MOVIA	0x14
                                    1-  834     	BANKSEL	_delaySleepTimer
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1-  835     	MOVAR	_delaySleepTimer
                                    1-  836     	.line	1489, "main.c"; 	bFlag_power_on = 1;
                                    1-  837     	BANKSEL	_vFlag_1
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 1Arr                      1-  838     	BSR	_vFlag_1,4
                                    1-  839     	.line	1494, "main.c"; 	forceDispTimer = 20;
     0020 2114                      1-  840     	MOVIA	0x14
                                    1-  841     	BANKSEL	_forceDispTimer
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1-  842     	MOVAR	_forceDispTimer
                                    1-  843     	.line	1495, "main.c"; 	P_LED_R_OUTPUT;
     0023 001r                      1-  844     	IOSTR	_IOSTB
                                    1-  845     	BANKSEL	r0x102D
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1-  846     	MOVAR	r0x102D
     0026 1Err                      1-  847     	BCR	r0x102D,4
     0027 01rr                      1-  848     	MOVR	r0x102D,W
     0028 000r                      1-  849     	IOST	_IOSTB
                                    1-  850     	.line	1496, "main.c"; 	P_LED_R_OFF;
     0029 1Err                      1-  851     	BCR	_PORTBbits,4
                                    1-  852     	.line	1497, "main.c"; 	P_LED_G_OUTPUT;
     002A 001r                      1-  853     	IOSTR	_IOSTB
     002B 00rr                      1-  854     	MOVAR	r0x102D
     002C 1Drr                      1-  855     	BCR	r0x102D,3
     002D 01rr                      1-  856     	MOVR	r0x102D,W
     002E 000r                      1-  857     	IOST	_IOSTB
                                    1-  858     	.line	1498, "main.c"; 	P_LED_G_OFF;
     002F 1Drr                      1-  859     	BCR	_PORTBbits,3
                                    1-  860     	.line	1499, "main.c"; 	P_LED_B_OUTPUT;
     0030 001r                      1-  861     	IOSTR	_IOSTB
     0031 00rr                      1-  862     	MOVAR	r0x102D
     0032 1Drr                      1-  863     	BCR	r0x102D,2
     0033 01rr                      1-  864     	MOVR	r0x102D,W
     0034 000r                      1-  865     	IOST	_IOSTB
                                    1-  866     	.line	1500, "main.c"; 	P_LED_B_OFF;
     0035 1Drr                      1-  867     	BCR	_PORTBbits,2
                                    1-  868     	.line	1502, "main.c"; 	displayTimer = CONST_TIMER_DISP;
     0036 2114                      1-  869     	MOVIA	0x14
                                    1-  870     	BANKSEL	_displayTimer
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 00rr                      1-  871     	MOVAR	_displayTimer
     0039                           1-  872     _02534_DS_:
                                    1-  873     	.line	1509, "main.c"; 	CLRWDT();
     0039 0002                      1-  874     	clrwdt
                                    1-  875     	.line	1510, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  876     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 08rr                      1-  877     	BTRSS	_vFlag_0,0
                                    1-  878     	MGOTO	_02534_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  879     	.line	1512, "main.c"; 	bFlag_gSysTick_Change = 0;
     003D 1Crr                      1-  880     	BCR	_vFlag_0,0
                                    1-  881     	.line	1513, "main.c"; 	if (bFlag_slice_16ms)
     003E 08rr                      1-  882     	BTRSS	_vFlag_0,1
                                    1-  883     	MGOTO	_02534_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  884     	.line	1516, "main.c"; 	bFlag_slice_16ms = 0;
     0040 1Crr                      1-  885     	BCR	_vFlag_0,1
                                    1-  886     	.line	1517, "main.c"; 	timer_slice_16ms++;
                                    1-  887     	BANKSEL	_timer_slice_16ms
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 01rr                      1-  888     	MOVR	_timer_slice_16ms,W
                                    1-  889     	BANKSEL	r0x102D
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1-  890     	MOVAR	r0x102D
     0045 05rr                      1-  891     	INCR	r0x102D,W
                                    1-  892     	BANKSEL	_timer_slice_16ms
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 00rr                      1-  893     	MOVAR	_timer_slice_16ms
                                    1-  894     	.line	1518, "main.c"; 	gpioKeyScan();
                                    1-  895     	MCALL	_gpioKeyScan
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  896     	.line	1519, "main.c"; 	get_p_ext_int_status();
                                    1-  897     	MCALL	_get_p_ext_int_status
     0049 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  898     	.line	1520, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  899     	BANKSEL	_vFlag_1
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 0Drr                      1-  900     	BTRSC	_vFlag_1,3
                                    1-  901     	.line	1522, "main.c"; 	is_chg_or_dischg();
                                    1-  902     	MCALL	_is_chg_or_dischg
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  903     	.line	1525, "main.c"; 	if (!(timer_slice_16ms & 0x1F))
                                    1-  904     	BANKSEL	_timer_slice_16ms
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 01rr                      1-  905     	MOVR	_timer_slice_16ms,W
     004F 221F                      1-  906     	ANDIA	0x1f
     0050 0903                      1-  907     	BTRSS	STATUS,2
                                    1-  908     	MGOTO	_02517_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  909     	.line	1527, "main.c"; 	bFlag_blink ^= 1;
     0052 2180                      1-  910     	MOVIA	0x80
                                    1-  911     	BANKSEL	_vFlag_0
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 12rr                      1-  912     	XORAR	_vFlag_0,F
                                    1-  913     	.line	1532, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  914     	BANKSEL	_vFlag_1
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 0Drr                      1-  915     	BTRSC	_vFlag_1,3
                                    1-  916     	.line	1534, "main.c"; 	get_cap();
                                    1-  917     	MCALL	_get_cap
     0057 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  918     	.line	1536, "main.c"; 	app_display_all();
                                    1-  919     	MCALL	_app_display_all
     0058 2rrr                      3-   65 m1      LCALL rom_address
     0059                           1-  920     _02517_DS_:
                                    1-  921     	.line	1538, "main.c"; 	if (!(timer_slice_16ms & 0x3F))
                                    1-  922     	BANKSEL	_timer_slice_16ms
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1-  923     	MOVR	_timer_slice_16ms,W
     005B 223F                      1-  924     	ANDIA	0x3f
     005C 0903                      1-  925     	BTRSS	STATUS,2
                                    1-  926     	MGOTO	_02534_DS_
     005D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  927     	.line	1543, "main.c"; 	if ((0 == bFlag_charger_on) && (!P_I2C_INT))
                                    1-  928     	BANKSEL	_vFlag_1
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 0Err                      1-  929     	BTRSC	_vFlag_1,5
                                    1-  930     	MGOTO	_02534_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
     0061 0Drr                      1-  931     	BTRSC	_PORTAbits,2
                                    1-  932     	MGOTO	_02534_DS_
     0062 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  933     	.line	1548, "main.c"; 	if (!delaySleepTimer)
                                    1-  934     	BANKSEL	_delaySleepTimer
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 01rr                      1-  935     	MOVR	_delaySleepTimer,W
     0065 0903                      1-  936     	BTRSS	STATUS,2
                                    1-  937     	MGOTO	_02522_DS_
     0066 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  938     	.line	1554, "main.c"; 	DISI();
     0067 0013                      1-  939     	DISI
                                    1-  940     	.line	1555, "main.c"; 	CLRWDT();
     0068 0002                      1-  941     	clrwdt
                                    1-  942     	.line	1556, "main.c"; 	INTE = 0x00;  // Timer0 overflow interrupt enable bit
     0069 02rr                      1-  943     	CLRR	_INTE
                                    1-  944     	.line	1557, "main.c"; 	PCON = 0x58;  // PCON = 0xC8;
     006A 2158                      1-  945     	MOVIA	0x58
     006B 00rr                      1-  946     	MOVAR	_PCON
                                    1-  947     	.line	1558, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     006C 0200                      1-  948     	CLRA	
     006D 000r                      1-  949     	IOST	_PCON1
                                    1-  950     	.line	1566, "main.c"; 	PORTA = 0x00;
     006E 02rr                      1-  951     	CLRR	_PORTA
                                    1-  952     	.line	1567, "main.c"; 	PORTB = 0x00;
     006F 02rr                      1-  953     	CLRR	_PORTB
                                    1-  954     	.line	1568, "main.c"; 	IOSTA = 0x00;
     0070 0200                      1-  955     	CLRA	
     0071 000r                      1-  956     	IOST	_IOSTA
                                    1-  957     	.line	1569, "main.c"; 	IOSTB = 0x00;
     0072 000r                      1-  958     	IOST	_IOSTB
                                    1-  959     	.line	1570, "main.c"; 	P_KEY_INPUT;
     0073 001r                      1-  960     	IOSTR	_IOSTB
                                    1-  961     	BANKSEL	r0x102D
     0074 rrrr                      3-  109 m1      .banksel ram_address
     0075 00rr                      1-  962     	MOVAR	r0x102D
     0076 18rr                      1-  963     	BSR	r0x102D,0
     0077 01rr                      1-  964     	MOVR	r0x102D,W
     0078 000r                      1-  965     	IOST	_IOSTB
                                    1-  966     	.line	1571, "main.c"; 	P_KEY_IPS_INPUT;
     0079 001r                      1-  967     	IOSTR	_IOSTB
     007A 00rr                      1-  968     	MOVAR	r0x102D
     007B 18rr                      1-  969     	BSR	r0x102D,1
     007C 01rr                      1-  970     	MOVR	r0x102D,W
     007D 000r                      1-  971     	IOST	_IOSTB
                                    1-  972     	.line	1594, "main.c"; 	AWUCON = (C_PA2_Wakeup); // OK
     007E 2104                      1-  973     	MOVIA	0x04
     007F 00rr                      1-  974     	MOVAR	_AWUCON
                                    1-  975     	.line	1595, "main.c"; 	BWUCON = C_PB0_Wakeup;   // OK
     0080 2101                      1-  976     	MOVIA	0x01
     0081 00rr                      1-  977     	MOVAR	_BWUCON
                                    1-  978     	.line	1597, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     0082 2102                      1-  979     	MOVIA	0x02
     0083 00rr                      1-  980     	MOVAR	_INTE
                                    1-  981     	.line	1598, "main.c"; 	INTF = 0;
     0084 02rr                      1-  982     	CLRR	_INTF
                                    1-  983     	.line	1604, "main.c"; 	if (!P_KEY)
     0085 08rr                      1-  984     	BTRSS	_PORTBbits,0
                                    1-  985     	MGOTO	_02520_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  986     	.line	1608, "main.c"; 	UPDATE_REG(PORTB);
     0087 01rr                      1-  987     	MOVR	_PORTB,F
                                    1-  988     	.line	1609, "main.c"; 	UPDATE_REG(PORTA);
     0088 01rr                      1-  989     	MOVR	_PORTA,F
                                    1-  990     	.line	1610, "main.c"; 	NOP();
     0089 0000                      1-  991     	nop
                                    1-  992     	.line	1611, "main.c"; 	SLEEP();
     008A 0001                      1-  993     	sleep
                                    1-  994     	.line	1612, "main.c"; 	NOP();
     008B 0000                      1-  995     	nop
     008C                           1-  996     _02520_DS_:
                                    1-  997     	.line	1614, "main.c"; 	INTFbits.PABIF = 0;
     008C 21FD                      1-  998     	MOVIA	0xfd
     008D 00rr                      1-  999     	MOVAR	(_INTFbits + 0)
                                    1- 1000     	.line	1618, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     008E 2114                      1- 1001     	MOVIA	0x14
                                    1- 1002     	BANKSEL	_delaySleepTimer
     008F rrrr                      3-  109 m1      .banksel ram_address
     0090 00rr                      1- 1003     	MOVAR	_delaySleepTimer
                                    1- 1004     	.line	1624, "main.c"; 	PCON = 0xC8;
     0091 21C8                      1- 1005     	MOVIA	0xc8
     0092 00rr                      1- 1006     	MOVAR	_PCON
                                    1- 1007     	.line	1637, "main.c"; 	PCON1 |= C_TMR0_En;            // Enable Timer0
     0093 001r                      1- 1008     	IOSTR	_PCON1
                                    1- 1009     	BANKSEL	r0x102D
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 00rr                      1- 1010     	MOVAR	r0x102D
     0096 18rr                      1- 1011     	BSR	r0x102D,0
     0097 01rr                      1- 1012     	MOVR	r0x102D,W
     0098 000r                      1- 1013     	IOST	_PCON1
                                    1- 1014     	.line	1638, "main.c"; 	INTE = (0x01 /*| C_INT_LVD*/); // Timer0 overflow interrupt enable bit
     0099 2101                      1- 1015     	MOVIA	0x01
     009A 00rr                      1- 1016     	MOVAR	_INTE
                                    1- 1017     	.line	1639, "main.c"; 	ENI();
     009B 0004                      1- 1018     	ENI
                                    1- 1019     	MGOTO	_02534_DS_
     009C 3rrr                      3-   62 m1      LGOTO rom_address
     009D                           1- 1020     _02522_DS_:
                                    1- 1021     	.line	1643, "main.c"; 	delaySleepTimer--;
                                    1- 1022     	BANKSEL	_delaySleepTimer
     009D rrrr                      3-  109 m1      .banksel ram_address
     009E 01rr                      1- 1023     	MOVR	_delaySleepTimer,W
                                    1- 1024     	BANKSEL	r0x102D
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 1025     	MOVAR	r0x102D
     00A1 06rr                      1- 1026     	DECR	r0x102D,W
                                    1- 1027     	BANKSEL	_delaySleepTimer
     00A2 rrrr                      3-  109 m1      .banksel ram_address
     00A3 00rr                      1- 1028     	MOVAR	_delaySleepTimer
                                    1- 1029     	MGOTO	_02534_DS_
     00A4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1030     	.line	1652, "main.c"; 	}
                                    1- 1031     	RETURN	
     00A5 0010                      3-   39 m1      ret
                                    1- 1032     ; exit point of _main
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;functions called:
                                    1- 1039     ;   __gptrget1
                                    1- 1040     ;   __gptrget1
                                    1- 1041     ;   __divuchar
                                    1- 1042     ;   __moduchar
                                    1- 1043     ;   __gptrget1
                                    1- 1044     ;   __gptrget1
                                    1- 1045     ;   _disable_breathing_mode
                                    1- 1046     ;   __gptrget1
                                    1- 1047     ;   __gptrget1
                                    1- 1048     ;   __divuchar
                                    1- 1049     ;   __moduchar
                                    1- 1050     ;   __gptrget1
                                    1- 1051     ;   __gptrget1
                                    1- 1052     ;   __divuchar
                                    1- 1053     ;   __moduchar
                                    1- 1054     ;   __gptrget1
                                    1- 1055     ;   __gptrget1
                                    1- 1056     ;   __gptrget1
                                    1- 1057     ;   __gptrget1
                                    1- 1058     ;   __gptrget1
                                    1- 1059     ;   __gptrget1
                                    1- 1060     ;   __divuchar
                                    1- 1061     ;   __moduchar
                                    1- 1062     ;   __gptrget1
                                    1- 1063     ;   __gptrget1
                                    1- 1064     ;   _disable_breathing_mode
                                    1- 1065     ;   __gptrget1
                                    1- 1066     ;   __gptrget1
                                    1- 1067     ;   __divuchar
                                    1- 1068     ;   __moduchar
                                    1- 1069     ;   __gptrget1
                                    1- 1070     ;   __gptrget1
                                    1- 1071     ;   __divuchar
                                    1- 1072     ;   __moduchar
                                    1- 1073     ;   __gptrget1
                                    1- 1074     ;   __gptrget1
                                    1- 1075     ;   __gptrget1
                                    1- 1076     ;   __gptrget1
                                    1- 1077     ;5 compiler assigned registers:
                                    1- 1078     ;   r0x101A
                                    1- 1079     ;   STK01
                                    1- 1080     ;   STK00
                                    1- 1081     ;   r0x101B
                                    1- 1082     ;   r0x101C
                                    1- 1083     ;; Starting pCode block
                                    1- 1084     .segment "code"; module=main, function=_app_display_all
                                    1- 1086     ;local variable name mapping:
     0000                           1- 1089     _app_display_all:
                                    1- 1090     ; 2 exit points
                                    1- 1091     	.line	1229, "main.c"; 	if (forceDispTimer)
                                    1- 1092     	BANKSEL	_forceDispTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1093     	MOVR	_forceDispTimer,W
     0002 0D03                      1- 1094     	BTRSC	STATUS,2
                                    1- 1095     	MGOTO	_02505_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1096     	.line	1231, "main.c"; 	forceDispTimer--;
     0004 01rr                      1- 1097     	MOVR	_forceDispTimer,W
                                    1- 1098     	BANKSEL	r0x101A
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1099     	MOVAR	r0x101A
     0007 06rr                      1- 1100     	DECR	r0x101A,W
                                    1- 1101     	BANKSEL	_forceDispTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1102     	MOVAR	_forceDispTimer
                                    1- 1103     	.line	1232, "main.c"; 	displayHundred = DispTable[1];
     000A 21rr                      1- 1104     	MOVIA	(_DispTable + 1)
     000B 00rr                      1- 1105     	MOVAR	STK01
     000C 21rr                      1- 1106     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     000D 00rr                      1- 1107     	MOVAR	STK00
     000E 2180                      1- 1108     	MOVIA	0x80
                                    1- 1109     	MCALL	__gptrget1
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1110     	BANKSEL	_displayHundred
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1111     	MOVAR	_displayHundred
                                    1- 1112     	.line	1234, "main.c"; 	displayHundred |= (SEG_E | SEG_D);
     0012 2118                      1- 1113     	MOVIA	0x18
     0013 11rr                      1- 1114     	IORAR	_displayHundred,F
                                    1- 1115     	.line	1235, "main.c"; 	displayDecade = DispTable[8];
     0014 21rr                      1- 1116     	MOVIA	(_DispTable + 8)
     0015 00rr                      1- 1117     	MOVAR	STK01
     0016 21rr                      1- 1118     	MOVIA	((_DispTable + 8) >> 8) & 0xff
     0017 00rr                      1- 1119     	MOVAR	STK00
     0018 2180                      1- 1120     	MOVIA	0x80
                                    1- 1121     	MCALL	__gptrget1
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1122     	BANKSEL	_displayDigit
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1123     	MOVAR	_displayDigit
                                    1- 1124     	BANKSEL	r0x101A
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1125     	MOVAR	r0x101A
                                    1- 1126     	BANKSEL	_displayDecade
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1127     	MOVAR	_displayDecade
                                    1- 1128     ;;102	MOVR	r0x101A,W
                                    1- 1129     	.line	1238, "main.c"; 	if (!forceDispTimer)
                                    1- 1130     	BANKSEL	_forceDispTimer
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1- 1131     	MOVR	_forceDispTimer,W
     0022 0903                      1- 1132     	BTRSS	STATUS,2
                                    1- 1133     	MGOTO	_02507_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1134     	.line	1240, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1135     	BANKSEL	_displayHundred
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1- 1136     	CLRR	_displayHundred
                                    1- 1137     	.line	1241, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1138     	BANKSEL	_displayDecade
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 02rr                      1- 1139     	CLRR	_displayDecade
                                    1- 1140     	.line	1242, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1141     	BANKSEL	_displayDigit
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 02rr                      1- 1142     	CLRR	_displayDigit
                                    1- 1143     	MGOTO	_02507_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
     002B                           1- 1144     _02505_DS_:
                                    1- 1145     	.line	1247, "main.c"; 	else if (bFlag_charger_on) // bFlag_charger_nbFlag_vin_plug_in
                                    1- 1146     	BANKSEL	_vFlag_1
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 0Arr                      1- 1147     	BTRSS	_vFlag_1,5
                                    1- 1148     	MGOTO	_02502_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1149     	.line	1249, "main.c"; 	underVoltageDispTimer = 0;
                                    1- 1150     	BANKSEL	_underVoltageDispTimer
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 02rr                      1- 1151     	CLRR	_underVoltageDispTimer
                                    1- 1152     	.line	1251, "main.c"; 	displayTimer = CONST_TIMER_DISP; // 拨出显示5秒
     0030 2114                      1- 1153     	MOVIA	0x14
                                    1- 1154     	BANKSEL	_displayTimer
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1155     	MOVAR	_displayTimer
                                    1- 1156     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1157     	.line	1253, "main.c"; 	if (displayData < 100) // 充电
     0033 2164                      1- 1158     	MOVIA	0x64
                                    1- 1159     	BANKSEL	_displayData
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 04rr                      1- 1160     	SUBAR	_displayData,W
     0036 0C03                      1- 1161     	BTRSC	STATUS,0
                                    1- 1162     	MGOTO	_02464_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1163     	.line	1255, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1164     	BANKSEL	_displayHundred
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 02rr                      1- 1165     	CLRR	_displayHundred
                                    1- 1166     	.line	1256, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1167     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 0Arr                      1- 1168     	BTRSS	_vFlag_0,4
                                    1- 1169     	MGOTO	_00001_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1170     	.line	1258, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1171     	BANKSEL	_displayHundred
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 19rr                      1- 1172     	BSR	_displayHundred,3
     003F                           1- 1173     _00001_DS_:
                                    1- 1174     	.line	1261, "main.c"; 	if (bFlag_blink)
                                    1- 1175     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 0Brr                      1- 1176     	BTRSS	_vFlag_0,7
                                    1- 1177     	MGOTO	_02459_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1178     	.line	1263, "main.c"; 	i = displayData / 10;
     0042 210A                      1- 1179     	MOVIA	0x0a
     0043 00rr                      1- 1180     	MOVAR	STK00
                                    1- 1181     	BANKSEL	_displayData
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1182     	MOVR	_displayData,W
                                    1- 1183     	MCALL	__divuchar
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1184     	BANKSEL	r0x101A
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 1185     	MOVAR	r0x101A
                                    1- 1186     	.line	1264, "main.c"; 	j = displayData % 10;
     0049 210A                      1- 1187     	MOVIA	0x0a
     004A 00rr                      1- 1188     	MOVAR	STK00
                                    1- 1189     	BANKSEL	_displayData
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1190     	MOVR	_displayData,W
                                    1- 1191     	MCALL	__moduchar
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1192     	BANKSEL	r0x101B
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 1193     	MOVAR	r0x101B
                                    1- 1194     	.line	1265, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1195     	BANKSEL	_displayDecade
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 02rr                      1- 1196     	CLRR	_displayDecade
                                    1- 1197     	.line	1267, "main.c"; 	if (i) // 十位是0 不显示
                                    1- 1198     	BANKSEL	r0x101A
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1199     	MOVR	r0x101A,W
     0054 0D03                      1- 1200     	BTRSC	STATUS,2
                                    1- 1201     	MGOTO	_02457_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1202     	.line	1269, "main.c"; 	displayDecade = DispTable[i];
     0056 21rr                      1- 1203     	MOVIA	(_DispTable + 0)
     0057 03rr                      1- 1204     	ADDAR	r0x101A,F
     0058 21rr                      1- 1205     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0059 2600                      1- 1206     	ADCIA	0x00
                                    1- 1207     	BANKSEL	r0x101C
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1208     	MOVAR	r0x101C
                                    1- 1209     	BANKSEL	r0x101A
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1210     	MOVR	r0x101A,W
     005E 00rr                      1- 1211     	MOVAR	STK01
                                    1- 1212     	BANKSEL	r0x101C
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1213     	MOVR	r0x101C,W
     0061 00rr                      1- 1214     	MOVAR	STK00
     0062 2180                      1- 1215     	MOVIA	0x80
                                    1- 1216     	MCALL	__gptrget1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1217     	BANKSEL	_displayDecade
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1218     	MOVAR	_displayDecade
     0066                           1- 1219     _02457_DS_:
                                    1- 1220     	.line	1272, "main.c"; 	displayDigit = DispTable[j];
     0066 21rr                      1- 1221     	MOVIA	(_DispTable + 0)
                                    1- 1222     	BANKSEL	r0x101B
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1- 1223     	ADDAR	r0x101B,F
     0069 21rr                      1- 1224     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     006A 2600                      1- 1225     	ADCIA	0x00
                                    1- 1226     	BANKSEL	r0x101A
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1227     	MOVAR	r0x101A
                                    1- 1228     	BANKSEL	r0x101B
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1229     	MOVR	r0x101B,W
     006F 00rr                      1- 1230     	MOVAR	STK01
                                    1- 1231     	BANKSEL	r0x101A
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1232     	MOVR	r0x101A,W
     0072 00rr                      1- 1233     	MOVAR	STK00
     0073 2180                      1- 1234     	MOVIA	0x80
                                    1- 1235     	MCALL	__gptrget1
     0074 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1236     	BANKSEL	_displayDigit
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 00rr                      1- 1237     	MOVAR	_displayDigit
                                    1- 1238     	MGOTO	_02507_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 1239     _02459_DS_:
                                    1- 1240     	.line	1276, "main.c"; 	displayDigit = DISP_ALL_OFF; // 个位闪烁 充电
                                    1- 1241     	BANKSEL	_displayDigit
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 02rr                      1- 1242     	CLRR	_displayDigit
                                    1- 1243     	MGOTO	_02507_DS_
     007A 3rrr                      3-   62 m1      LGOTO rom_address
     007B                           1- 1244     _02464_DS_:
                                    1- 1245     	.line	1281, "main.c"; 	disable_breathing_mode();
                                    1- 1246     	MCALL	_disable_breathing_mode
     007B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1247     	.line	1282, "main.c"; 	P_LED_G_ON;
     007C 19rr                      1- 1248     	BSR	_PORTBbits,3
                                    1- 1249     	.line	1283, "main.c"; 	displayHundred = DispTable[1];
     007D 21rr                      1- 1250     	MOVIA	(_DispTable + 1)
     007E 00rr                      1- 1251     	MOVAR	STK01
     007F 21rr                      1- 1252     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0080 00rr                      1- 1253     	MOVAR	STK00
     0081 2180                      1- 1254     	MOVIA	0x80
                                    1- 1255     	MCALL	__gptrget1
     0082 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1256     	BANKSEL	_displayHundred
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 00rr                      1- 1257     	MOVAR	_displayHundred
                                    1- 1258     	.line	1284, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1259     	BANKSEL	_vFlag_0
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 0Arr                      1- 1260     	BTRSS	_vFlag_0,4
                                    1- 1261     	MGOTO	_00002_DS_
     0087 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1262     	.line	1286, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1263     	BANKSEL	_displayHundred
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 19rr                      1- 1264     	BSR	_displayHundred,3
     008A                           1- 1265     _00002_DS_:
                                    1- 1266     	.line	1288, "main.c"; 	displayDecade = DispTable[0];
     008A 21rr                      1- 1267     	MOVIA	(_DispTable + 0)
     008B 00rr                      1- 1268     	MOVAR	STK01
     008C 21rr                      1- 1269     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     008D 00rr                      1- 1270     	MOVAR	STK00
     008E 2180                      1- 1271     	MOVIA	0x80
                                    1- 1272     	MCALL	__gptrget1
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1273     	BANKSEL	_displayDigit
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 1274     	MOVAR	_displayDigit
                                    1- 1275     	BANKSEL	r0x101A
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 1276     	MOVAR	r0x101A
                                    1- 1277     	BANKSEL	_displayDecade
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 00rr                      1- 1278     	MOVAR	_displayDecade
                                    1- 1279     ;;101	MOVR	r0x101A,W
                                    1- 1280     	.line	1289, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1281     	MGOTO	_02507_DS_
     0096 3rrr                      3-   62 m1      LGOTO rom_address
     0097                           1- 1282     _02502_DS_:
                                    1- 1283     	.line	1296, "main.c"; 	if (underVoltageDispTimer) // 欠压关机显示
                                    1- 1284     	BANKSEL	_underVoltageDispTimer
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 01rr                      1- 1285     	MOVR	_underVoltageDispTimer,W
     0099 0D03                      1- 1286     	BTRSC	STATUS,2
                                    1- 1287     	MGOTO	_02499_DS_
     009A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1288     	.line	1298, "main.c"; 	underVoltageDispTimer--;
     009B 01rr                      1- 1289     	MOVR	_underVoltageDispTimer,W
                                    1- 1290     	BANKSEL	r0x101A
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 00rr                      1- 1291     	MOVAR	r0x101A
     009E 06rr                      1- 1292     	DECR	r0x101A,W
                                    1- 1293     	BANKSEL	_underVoltageDispTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 1294     	MOVAR	_underVoltageDispTimer
                                    1- 1295     	.line	1299, "main.c"; 	displayTimer = 0;
                                    1- 1296     	BANKSEL	_displayTimer
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1- 1297     	CLRR	_displayTimer
                                    1- 1298     	.line	1300, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1299     	BANKSEL	_displayHundred
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 02rr                      1- 1300     	CLRR	_displayHundred
                                    1- 1301     	.line	1301, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1302     	BANKSEL	_vFlag_0
     00A5 rrrr                      3-  109 m1      .banksel ram_address
     00A6 0Arr                      1- 1303     	BTRSS	_vFlag_0,4
                                    1- 1304     	MGOTO	_00003_DS_
     00A7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1305     	.line	1303, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1306     	BANKSEL	_displayHundred
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 19rr                      1- 1307     	BSR	_displayHundred,3
     00AA                           1- 1308     _00003_DS_:
                                    1- 1309     	.line	1312, "main.c"; 	if (underVoltageDispTimer % 2)
                                    1- 1310     	BANKSEL	_underVoltageDispTimer
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 08rr                      1- 1311     	BTRSS	_underVoltageDispTimer,0
                                    1- 1312     	MGOTO	_02474_DS_
     00AC 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1313     	.line	1314, "main.c"; 	i = displayData / 10;
     00AD 210A                      1- 1314     	MOVIA	0x0a
     00AE 00rr                      1- 1315     	MOVAR	STK00
                                    1- 1316     	BANKSEL	_displayData
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 01rr                      1- 1317     	MOVR	_displayData,W
                                    1- 1318     	MCALL	__divuchar
     00B1 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1319     	BANKSEL	r0x101A
     00B2 rrrr                      3-  109 m1      .banksel ram_address
     00B3 00rr                      1- 1320     	MOVAR	r0x101A
                                    1- 1321     	.line	1315, "main.c"; 	j = displayData % 10;
     00B4 210A                      1- 1322     	MOVIA	0x0a
     00B5 00rr                      1- 1323     	MOVAR	STK00
                                    1- 1324     	BANKSEL	_displayData
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 1325     	MOVR	_displayData,W
                                    1- 1326     	MCALL	__moduchar
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1327     	BANKSEL	r0x101B
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 1328     	MOVAR	r0x101B
                                    1- 1329     	.line	1317, "main.c"; 	if (i)
                                    1- 1330     	BANKSEL	r0x101A
     00BB rrrr                      3-  109 m1      .banksel ram_address
     00BC 01rr                      1- 1331     	MOVR	r0x101A,W
     00BD 0D03                      1- 1332     	BTRSC	STATUS,2
                                    1- 1333     	MGOTO	_02469_DS_
     00BE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1334     	.line	1319, "main.c"; 	displayDecade = DispTable[i];
     00BF 21rr                      1- 1335     	MOVIA	(_DispTable + 0)
     00C0 03rr                      1- 1336     	ADDAR	r0x101A,F
     00C1 21rr                      1- 1337     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00C2 2600                      1- 1338     	ADCIA	0x00
                                    1- 1339     	BANKSEL	r0x101C
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 00rr                      1- 1340     	MOVAR	r0x101C
                                    1- 1341     	BANKSEL	r0x101A
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 01rr                      1- 1342     	MOVR	r0x101A,W
     00C7 00rr                      1- 1343     	MOVAR	STK01
                                    1- 1344     	BANKSEL	r0x101C
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 01rr                      1- 1345     	MOVR	r0x101C,W
     00CA 00rr                      1- 1346     	MOVAR	STK00
     00CB 2180                      1- 1347     	MOVIA	0x80
                                    1- 1348     	MCALL	__gptrget1
     00CC 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1349     	BANKSEL	_displayDecade
     00CD rrrr                      3-  109 m1      .banksel ram_address
     00CE 00rr                      1- 1350     	MOVAR	_displayDecade
                                    1- 1351     	MGOTO	_02470_DS_
     00CF 3rrr                      3-   62 m1      LGOTO rom_address
     00D0                           1- 1352     _02469_DS_:
                                    1- 1353     	.line	1323, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1354     	BANKSEL	_displayDecade
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 02rr                      1- 1355     	CLRR	_displayDecade
     00D2                           1- 1356     _02470_DS_:
                                    1- 1357     	.line	1326, "main.c"; 	displayDigit = DispTable[j];
     00D2 21rr                      1- 1358     	MOVIA	(_DispTable + 0)
                                    1- 1359     	BANKSEL	r0x101B
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 03rr                      1- 1360     	ADDAR	r0x101B,F
     00D5 21rr                      1- 1361     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00D6 2600                      1- 1362     	ADCIA	0x00
                                    1- 1363     	BANKSEL	r0x101A
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 00rr                      1- 1364     	MOVAR	r0x101A
                                    1- 1365     	BANKSEL	r0x101B
     00D9 rrrr                      3-  109 m1      .banksel ram_address
     00DA 01rr                      1- 1366     	MOVR	r0x101B,W
     00DB 00rr                      1- 1367     	MOVAR	STK01
                                    1- 1368     	BANKSEL	r0x101A
     00DC rrrr                      3-  109 m1      .banksel ram_address
     00DD 01rr                      1- 1369     	MOVR	r0x101A,W
     00DE 00rr                      1- 1370     	MOVAR	STK00
     00DF 2180                      1- 1371     	MOVIA	0x80
                                    1- 1372     	MCALL	__gptrget1
     00E0 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1373     	BANKSEL	_displayDigit
     00E1 rrrr                      3-  109 m1      .banksel ram_address
     00E2 00rr                      1- 1374     	MOVAR	_displayDigit
                                    1- 1375     	MGOTO	_00004_DS_
     00E3 3rrr                      3-   62 m1      LGOTO rom_address
     00E4                           1- 1376     _02474_DS_:
                                    1- 1377     	.line	1330, "main.c"; 	if (0 == displayData)
                                    1- 1378     	BANKSEL	_displayData
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 01rr                      1- 1379     	MOVR	_displayData,W
     00E6 0903                      1- 1380     	BTRSS	STATUS,2
                                    1- 1381     	MGOTO	_00004_DS_
     00E7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1382     	.line	1332, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1383     	BANKSEL	_displayDigit
     00E8 rrrr                      3-  109 m1      .banksel ram_address
     00E9 02rr                      1- 1384     	CLRR	_displayDigit
     00EA                           1- 1385     _00004_DS_:
                                    1- 1386     	.line	1336, "main.c"; 	if (0 == underVoltageDispTimer)
                                    1- 1387     	BANKSEL	_underVoltageDispTimer
     00EA rrrr                      3-  109 m1      .banksel ram_address
     00EB 01rr                      1- 1388     	MOVR	_underVoltageDispTimer,W
     00EC 0903                      1- 1389     	BTRSS	STATUS,2
                                    1- 1390     	MGOTO	_02507_DS_
     00ED 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1391     	.line	1338, "main.c"; 	if (displayData)
                                    1- 1392     	BANKSEL	_displayData
     00EE rrrr                      3-  109 m1      .banksel ram_address
     00EF 01rr                      1- 1393     	MOVR	_displayData,W
     00F0 0D03                      1- 1394     	BTRSC	STATUS,2
                                    1- 1395     	MGOTO	_02507_DS_
     00F1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1396     	.line	1340, "main.c"; 	displayData--;
     00F2 01rr                      1- 1397     	MOVR	_displayData,W
                                    1- 1398     	BANKSEL	r0x101A
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 00rr                      1- 1399     	MOVAR	r0x101A
     00F5 06rr                      1- 1400     	DECR	r0x101A,W
                                    1- 1401     	BANKSEL	_displayData
     00F6 rrrr                      3-  109 m1      .banksel ram_address
     00F7 00rr                      1- 1402     	MOVAR	_displayData
                                    1- 1403     	.line	1341, "main.c"; 	underVoltageDispTimer = (CONST_TIMER_DISP_UV - 1);
     00F8 210A                      1- 1404     	MOVIA	0x0a
                                    1- 1405     	BANKSEL	_underVoltageDispTimer
     00F9 rrrr                      3-  109 m1      .banksel ram_address
     00FA 00rr                      1- 1406     	MOVAR	_underVoltageDispTimer
                                    1- 1407     	MGOTO	_02507_DS_
     00FB 3rrr                      3-   62 m1      LGOTO rom_address
     00FC                           1- 1408     _02499_DS_:
                                    1- 1409     	.line	1345, "main.c"; 	else if (displayTimer)
                                    1- 1410     	BANKSEL	_displayTimer
     00FC rrrr                      3-  109 m1      .banksel ram_address
     00FD 01rr                      1- 1411     	MOVR	_displayTimer,W
     00FE 0D03                      1- 1412     	BTRSC	STATUS,2
                                    1- 1413     	MGOTO	_02496_DS_
     00FF 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1414     	.line	1347, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1415     	BANKSEL	_displayHundred
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 02rr                      1- 1416     	CLRR	_displayHundred
                                    1- 1417     	.line	1349, "main.c"; 	displayTimer--;
                                    1- 1418     	BANKSEL	_displayTimer
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 01rr                      1- 1419     	MOVR	_displayTimer,W
                                    1- 1420     	BANKSEL	r0x101A
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 00rr                      1- 1421     	MOVAR	r0x101A
     0106 06rr                      1- 1422     	DECR	r0x101A,W
                                    1- 1423     	BANKSEL	_displayTimer
     0107 rrrr                      3-  109 m1      .banksel ram_address
     0108 00rr                      1- 1424     	MOVAR	_displayTimer
                                    1- 1425     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1426     	.line	1354, "main.c"; 	if (displayData < 100)
     0109 2164                      1- 1427     	MOVIA	0x64
                                    1- 1428     	BANKSEL	_displayData
     010A rrrr                      3-  109 m1      .banksel ram_address
     010B 04rr                      1- 1429     	SUBAR	_displayData,W
     010C 0C03                      1- 1430     	BTRSC	STATUS,0
                                    1- 1431     	MGOTO	_02493_DS_
     010D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1432     	.line	1356, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1433     	BANKSEL	_displayHundred
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 02rr                      1- 1434     	CLRR	_displayHundred
                                    1- 1435     	.line	1357, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1436     	BANKSEL	_vFlag_0
     0110 rrrr                      3-  109 m1      .banksel ram_address
     0111 0Arr                      1- 1437     	BTRSS	_vFlag_0,4
                                    1- 1438     	MGOTO	_00005_DS_
     0112 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1439     	.line	1359, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1440     	BANKSEL	_displayHundred
     0113 rrrr                      3-  109 m1      .banksel ram_address
     0114 19rr                      1- 1441     	BSR	_displayHundred,3
     0115                           1- 1442     _00005_DS_:
                                    1- 1443     	.line	1362, "main.c"; 	if (bFlag_blink)
                                    1- 1444     	BANKSEL	_vFlag_0
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 1445     	BTRSS	_vFlag_0,7
                                    1- 1446     	MGOTO	_02488_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1447     	.line	1364, "main.c"; 	i = displayData / 10;
     0118 210A                      1- 1448     	MOVIA	0x0a
     0119 00rr                      1- 1449     	MOVAR	STK00
                                    1- 1450     	BANKSEL	_displayData
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 01rr                      1- 1451     	MOVR	_displayData,W
                                    1- 1452     	MCALL	__divuchar
     011C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1453     	BANKSEL	r0x101A
     011D rrrr                      3-  109 m1      .banksel ram_address
     011E 00rr                      1- 1454     	MOVAR	r0x101A
                                    1- 1455     	.line	1365, "main.c"; 	j = displayData % 10;
     011F 210A                      1- 1456     	MOVIA	0x0a
     0120 00rr                      1- 1457     	MOVAR	STK00
                                    1- 1458     	BANKSEL	_displayData
     0121 rrrr                      3-  109 m1      .banksel ram_address
     0122 01rr                      1- 1459     	MOVR	_displayData,W
                                    1- 1460     	MCALL	__moduchar
     0123 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1461     	BANKSEL	r0x101B
     0124 rrrr                      3-  109 m1      .banksel ram_address
     0125 00rr                      1- 1462     	MOVAR	r0x101B
                                    1- 1463     	.line	1367, "main.c"; 	if (i)
                                    1- 1464     	BANKSEL	r0x101A
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 01rr                      1- 1465     	MOVR	r0x101A,W
     0128 0D03                      1- 1466     	BTRSC	STATUS,2
                                    1- 1467     	MGOTO	_02483_DS_
     0129 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1468     	.line	1369, "main.c"; 	displayDecade = DispTable[i];
     012A 21rr                      1- 1469     	MOVIA	(_DispTable + 0)
     012B 03rr                      1- 1470     	ADDAR	r0x101A,F
     012C 21rr                      1- 1471     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     012D 2600                      1- 1472     	ADCIA	0x00
                                    1- 1473     	BANKSEL	r0x101C
     012E rrrr                      3-  109 m1      .banksel ram_address
     012F 00rr                      1- 1474     	MOVAR	r0x101C
                                    1- 1475     	BANKSEL	r0x101A
     0130 rrrr                      3-  109 m1      .banksel ram_address
     0131 01rr                      1- 1476     	MOVR	r0x101A,W
     0132 00rr                      1- 1477     	MOVAR	STK01
                                    1- 1478     	BANKSEL	r0x101C
     0133 rrrr                      3-  109 m1      .banksel ram_address
     0134 01rr                      1- 1479     	MOVR	r0x101C,W
     0135 00rr                      1- 1480     	MOVAR	STK00
     0136 2180                      1- 1481     	MOVIA	0x80
                                    1- 1482     	MCALL	__gptrget1
     0137 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1483     	BANKSEL	_displayDecade
     0138 rrrr                      3-  109 m1      .banksel ram_address
     0139 00rr                      1- 1484     	MOVAR	_displayDecade
                                    1- 1485     	MGOTO	_02484_DS_
     013A 3rrr                      3-   62 m1      LGOTO rom_address
     013B                           1- 1486     _02483_DS_:
                                    1- 1487     	.line	1373, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1488     	BANKSEL	_displayDecade
     013B rrrr                      3-  109 m1      .banksel ram_address
     013C 02rr                      1- 1489     	CLRR	_displayDecade
     013D                           1- 1490     _02484_DS_:
                                    1- 1491     	.line	1376, "main.c"; 	displayDigit = DispTable[j];
     013D 21rr                      1- 1492     	MOVIA	(_DispTable + 0)
                                    1- 1493     	BANKSEL	r0x101B
     013E rrrr                      3-  109 m1      .banksel ram_address
     013F 03rr                      1- 1494     	ADDAR	r0x101B,F
     0140 21rr                      1- 1495     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0141 2600                      1- 1496     	ADCIA	0x00
                                    1- 1497     	BANKSEL	r0x101A
     0142 rrrr                      3-  109 m1      .banksel ram_address
     0143 00rr                      1- 1498     	MOVAR	r0x101A
                                    1- 1499     	BANKSEL	r0x101B
     0144 rrrr                      3-  109 m1      .banksel ram_address
     0145 01rr                      1- 1500     	MOVR	r0x101B,W
     0146 00rr                      1- 1501     	MOVAR	STK01
                                    1- 1502     	BANKSEL	r0x101A
     0147 rrrr                      3-  109 m1      .banksel ram_address
     0148 01rr                      1- 1503     	MOVR	r0x101A,W
     0149 00rr                      1- 1504     	MOVAR	STK00
     014A 2180                      1- 1505     	MOVIA	0x80
                                    1- 1506     	MCALL	__gptrget1
     014B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1507     	BANKSEL	_displayDigit
     014C rrrr                      3-  109 m1      .banksel ram_address
     014D 00rr                      1- 1508     	MOVAR	_displayDigit
                                    1- 1509     	MGOTO	_02507_DS_
     014E 3rrr                      3-   62 m1      LGOTO rom_address
     014F                           1- 1510     _02488_DS_:
                                    1- 1511     	.line	1381, "main.c"; 	if (0 == displayData)
                                    1- 1512     	BANKSEL	_displayData
     014F rrrr                      3-  109 m1      .banksel ram_address
     0150 01rr                      1- 1513     	MOVR	_displayData,W
     0151 0903                      1- 1514     	BTRSS	STATUS,2
                                    1- 1515     	MGOTO	_02507_DS_
     0152 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1516     	.line	1383, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1517     	BANKSEL	_displayDigit
     0153 rrrr                      3-  109 m1      .banksel ram_address
     0154 02rr                      1- 1518     	CLRR	_displayDigit
                                    1- 1519     	MGOTO	_02507_DS_
     0155 3rrr                      3-   62 m1      LGOTO rom_address
     0156                           1- 1520     _02493_DS_:
                                    1- 1521     	.line	1389, "main.c"; 	displayHundred = DispTable[1];
     0156 21rr                      1- 1522     	MOVIA	(_DispTable + 1)
     0157 00rr                      1- 1523     	MOVAR	STK01
     0158 21rr                      1- 1524     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0159 00rr                      1- 1525     	MOVAR	STK00
     015A 2180                      1- 1526     	MOVIA	0x80
                                    1- 1527     	MCALL	__gptrget1
     015B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1528     	BANKSEL	_displayHundred
     015C rrrr                      3-  109 m1      .banksel ram_address
     015D 00rr                      1- 1529     	MOVAR	_displayHundred
                                    1- 1530     	.line	1390, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1531     	BANKSEL	_vFlag_0
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 0Arr                      1- 1532     	BTRSS	_vFlag_0,4
                                    1- 1533     	MGOTO	_00006_DS_
     0160 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1534     	.line	1392, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1535     	BANKSEL	_displayHundred
     0161 rrrr                      3-  109 m1      .banksel ram_address
     0162 19rr                      1- 1536     	BSR	_displayHundred,3
     0163                           1- 1537     _00006_DS_:
                                    1- 1538     	.line	1394, "main.c"; 	displayDecade = DispTable[0];
     0163 21rr                      1- 1539     	MOVIA	(_DispTable + 0)
     0164 00rr                      1- 1540     	MOVAR	STK01
     0165 21rr                      1- 1541     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0166 00rr                      1- 1542     	MOVAR	STK00
     0167 2180                      1- 1543     	MOVIA	0x80
                                    1- 1544     	MCALL	__gptrget1
     0168 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1545     	BANKSEL	r0x101A
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 00rr                      1- 1546     	MOVAR	r0x101A
                                    1- 1547     	BANKSEL	_displayDecade
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 00rr                      1- 1548     	MOVAR	_displayDecade
                                    1- 1549     	.line	1395, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1550     	BANKSEL	r0x101A
     016D rrrr                      3-  109 m1      .banksel ram_address
     016E 01rr                      1- 1551     	MOVR	r0x101A,W
                                    1- 1552     	BANKSEL	_displayDigit
     016F rrrr                      3-  109 m1      .banksel ram_address
     0170 00rr                      1- 1553     	MOVAR	_displayDigit
                                    1- 1554     	MGOTO	_02507_DS_
     0171 3rrr                      3-   62 m1      LGOTO rom_address
     0172                           1- 1555     _02496_DS_:
                                    1- 1556     	.line	1400, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1557     	BANKSEL	_displayHundred
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 02rr                      1- 1558     	CLRR	_displayHundred
                                    1- 1559     	.line	1401, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1560     	BANKSEL	_displayDecade
     0174 rrrr                      3-  109 m1      .banksel ram_address
     0175 02rr                      1- 1561     	CLRR	_displayDecade
                                    1- 1562     	.line	1402, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1563     	BANKSEL	_displayDigit
     0176 rrrr                      3-  109 m1      .banksel ram_address
     0177 02rr                      1- 1564     	CLRR	_displayDigit
     0178                           1- 1565     _02507_DS_:
                                    1- 1566     	.line	1405, "main.c"; 	}
                                    1- 1567     	RETURN	
     0178 0010                      3-   39 m1      ret
                                    1- 1568     ; exit point of _app_display_all
                                    1- 1570     ;***
                                    1- 1571     ;  pBlock Stats: dbName = C
                                    1- 1572     ;***
                                    1- 1573     ;has an exit
                                    1- 1574     ;functions called:
                                    1- 1575     ;   _ip55xs_read4Bytes
                                    1- 1576     ;   _ip55xs_read4Bytes
                                    1- 1577     ;1 compiler assigned register :
                                    1- 1578     ;   STK00
                                    1- 1579     ;; Starting pCode block
                                    1- 1580     .segment "code"; module=main, function=_get_cap
     0000                           1- 1582     _get_cap:
                                    1- 1583     ; 2 exit points
                                    1- 1584     	.line	1217, "main.c"; 	ip55xs_read4Bytes(0x10C0);
     0000 21C0                      1- 1585     	MOVIA	0xc0
     0001 00rr                      1- 1586     	MOVAR	STK00
     0002 2110                      1- 1587     	MOVIA	0x10
                                    1- 1588     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1589     	.line	1218, "main.c"; 	displayData = IP_DATA[0];
                                    1- 1590     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1591     	MOVR	_IP_DATA,W
                                    1- 1592     	BANKSEL	_displayData
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1593     	MOVAR	_displayData
                                    1- 1594     	.line	1222, "main.c"; 	}
                                    1- 1595     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 1596     ; exit point of _get_cap
                                    1- 1598     ;***
                                    1- 1599     ;  pBlock Stats: dbName = C
                                    1- 1600     ;***
                                    1- 1601     ;has an exit
                                    1- 1602     ;functions called:
                                    1- 1603     ;   _ip55xs_read4Bytes
                                    1- 1604     ;   _disable_breathing_mode
                                    1- 1605     ;   _enable_breathing_mode
                                    1- 1606     ;   _ip55xs_read4Bytes
                                    1- 1607     ;   _disable_breathing_mode
                                    1- 1608     ;   _enable_breathing_mode
                                    1- 1609     ;2 compiler assigned registers:
                                    1- 1610     ;   STK00
                                    1- 1611     ;   r0x1028
                                    1- 1612     ;; Starting pCode block
                                    1- 1613     .segment "code"; module=main, function=_is_chg_or_dischg
                                    1- 1615     ;local variable name mapping:
     0000                           1- 1617     _is_chg_or_dischg:
                                    1- 1618     ; 2 exit points
                                    1- 1619     	.line	1130, "main.c"; 	ip55xs_read4Bytes(0X1090);
     0000 2190                      1- 1620     	MOVIA	0x90
     0001 00rr                      1- 1621     	MOVAR	STK00
     0002 2110                      1- 1622     	MOVIA	0x10
                                    1- 1623     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1624     	.line	1138, "main.c"; 	bFlag_qc_ok = 0;
                                    1- 1625     	BANKSEL	_vFlag_0
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 1Err                      1- 1626     	BCR	_vFlag_0,4
                                    1- 1627     	.line	1140, "main.c"; 	if (bFlag_charger_on) //! 在充电状态下
                                    1- 1628     	BANKSEL	_vFlag_1
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1629     	BTRSS	_vFlag_1,5
                                    1- 1630     	MGOTO	_02441_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1631     	.line	1142, "main.c"; 	delaySleepTimer = CONST_DSL_SHORT; //! 防止充电状态MCU关5356
     0009 2103                      1- 1632     	MOVIA	0x03
                                    1- 1633     	BANKSEL	_delaySleepTimer
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1634     	MOVAR	_delaySleepTimer
                                    1- 1635     	.line	1144, "main.c"; 	reg_ip53xs = (IP_DATA[2] & BIT3); // bit19
                                    1- 1636     	BANKSEL	_IP_DATA
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1637     	MOVR	(_IP_DATA + 2),W
                                    1- 1638     	BANKSEL	r0x1028
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1639     	MOVAR	r0x1028
     0010 09rr                      1- 1640     	BTRSS	r0x1028,3
                                    1- 1641     	MGOTO	_02427_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1642     	.line	1149, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1643     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Frr                      1- 1644     	BCR	_vFlag_1,6
                                    1- 1645     	.line	1150, "main.c"; 	if (++counter > 5) // CNST_FILTER_COM
                                    1- 1646     	BANKSEL	_is_chg_or_dischg_counter_65536_131
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1647     	INCR	_is_chg_or_dischg_counter_65536_131,F
                                    1- 1648     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1649     ;;unsigned compare: left >= lit(0x6=6), size=1
     0016 2106                      1- 1650     	MOVIA	0x06
     0017 04rr                      1- 1651     	SUBAR	_is_chg_or_dischg_counter_65536_131,W
     0018 0803                      1- 1652     	BTRSS	STATUS,0
                                    1- 1653     	MGOTO	_02443_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1654     	.line	1152, "main.c"; 	counter = 0;
     001A 02rr                      1- 1655     	CLRR	_is_chg_or_dischg_counter_65536_131
                                    1- 1656     	.line	1153, "main.c"; 	bFlag_charger_on = 0; //! 放电
                                    1- 1657     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 1Err                      1- 1658     	BCR	_vFlag_1,5
                                    1- 1659     	.line	1154, "main.c"; 	disable_breathing_mode();
                                    1- 1660     	MCALL	_disable_breathing_mode
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1661     	MGOTO	_02443_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1662     _02427_DS_:
                                    1- 1663     	.line	1159, "main.c"; 	counter = 0;
                                    1- 1664     	BANKSEL	_is_chg_or_dischg_counter_65536_131
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1665     	CLRR	_is_chg_or_dischg_counter_65536_131
                                    1- 1666     	.line	1161, "main.c"; 	if (IP_DATA[1] & BIT7)
                                    1- 1667     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1668     	MOVR	(_IP_DATA + 1),W
                                    1- 1669     	BANKSEL	r0x1028
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1670     	MOVAR	r0x1028
     0025 0Brr                      1- 1671     	BTRSS	r0x1028,7
                                    1- 1672     	MGOTO	_00007_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1673     	.line	1163, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1674     	BANKSEL	_vFlag_0
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 1Arr                      1- 1675     	BSR	_vFlag_0,4
     0029                           1- 1676     _00007_DS_:
                                    1- 1677     	.line	1165, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1678     	BANKSEL	_vFlag_1
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 1Brr                      1- 1679     	BSR	_vFlag_1,6
                                    1- 1680     	MGOTO	_02443_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 1681     _02441_DS_:
                                    1- 1682     	.line	1173, "main.c"; 	reg_ip53xs = (IP_DATA[1] & BIT3); // bit11
                                    1- 1683     	BANKSEL	_IP_DATA
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1684     	MOVR	(_IP_DATA + 1),W
                                    1- 1685     	BANKSEL	r0x1028
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1686     	MOVAR	r0x1028
     0030 09rr                      1- 1687     	BTRSS	r0x1028,3
                                    1- 1688     	MGOTO	_02438_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1689     	.line	1176, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1690     	BANKSEL	_vFlag_1
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 1Brr                      1- 1691     	BSR	_vFlag_1,6
                                    1- 1692     	.line	1177, "main.c"; 	if (++counter > CNST_FILTER_COM) // 2次
                                    1- 1693     	BANKSEL	_is_chg_or_dischg_counter_65536_131
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 05rr                      1- 1694     	INCR	_is_chg_or_dischg_counter_65536_131,F
                                    1- 1695     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1696     ;;unsigned compare: left >= lit(0x3=3), size=1
     0036 2103                      1- 1697     	MOVIA	0x03
     0037 04rr                      1- 1698     	SUBAR	_is_chg_or_dischg_counter_65536_131,W
     0038 0803                      1- 1699     	BTRSS	STATUS,0
                                    1- 1700     	MGOTO	_02443_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1701     	.line	1179, "main.c"; 	counter = 0;
     003A 02rr                      1- 1702     	CLRR	_is_chg_or_dischg_counter_65536_131
                                    1- 1703     	.line	1180, "main.c"; 	bFlag_charger_on = 1; //! 充电
                                    1- 1704     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Arr                      1- 1705     	BSR	_vFlag_1,5
                                    1- 1706     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1707     	.line	1181, "main.c"; 	if (displayData < 100)
     003D 2164                      1- 1708     	MOVIA	0x64
                                    1- 1709     	BANKSEL	_displayData
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 04rr                      1- 1710     	SUBAR	_displayData,W
     0040 0803                      1- 1711     	BTRSS	STATUS,0
                                    1- 1712     	.line	1183, "main.c"; 	enable_breathing_mode();
                                    1- 1713     	MCALL	_enable_breathing_mode
     0041 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1714     	.line	1185, "main.c"; 	forceDispTimer = 10;
     0042 210A                      1- 1715     	MOVIA	0x0a
                                    1- 1716     	BANKSEL	_forceDispTimer
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1- 1717     	MOVAR	_forceDispTimer
                                    1- 1718     	MGOTO	_02443_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1- 1719     _02438_DS_:
                                    1- 1720     	.line	1190, "main.c"; 	counter = 0;
                                    1- 1721     	BANKSEL	_is_chg_or_dischg_counter_65536_131
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 02rr                      1- 1722     	CLRR	_is_chg_or_dischg_counter_65536_131
                                    1- 1723     	.line	1191, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1724     	BANKSEL	_vFlag_1
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 1Frr                      1- 1725     	BCR	_vFlag_1,6
                                    1- 1726     	.line	1192, "main.c"; 	if (IP_DATA[3] & BIT3)
                                    1- 1727     	BANKSEL	_IP_DATA
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1- 1728     	MOVR	(_IP_DATA + 3),W
                                    1- 1729     	BANKSEL	r0x1028
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 00rr                      1- 1730     	MOVAR	r0x1028
     004E 09rr                      1- 1731     	BTRSS	r0x1028,3
                                    1- 1732     	MGOTO	_00008_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1733     	.line	1194, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1734     	BANKSEL	_vFlag_0
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 1Arr                      1- 1735     	BSR	_vFlag_0,4
     0052                           1- 1736     _00008_DS_:
                                    1- 1737     	.line	1197, "main.c"; 	if ((IP_DATA[2] & BIT3)) // bit19
                                    1- 1738     	BANKSEL	_IP_DATA
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1739     	MOVR	(_IP_DATA + 2),W
                                    1- 1740     	BANKSEL	r0x1028
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 00rr                      1- 1741     	MOVAR	r0x1028
     0056 09rr                      1- 1742     	BTRSS	r0x1028,3
                                    1- 1743     	MGOTO	_02443_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1744     	.line	1199, "main.c"; 	displayTimer = CONST_TIMER_DISP_XSEC; //! 电量==0的时候 闪烁5秒后熄灭,反之一直显示
     0058 210A                      1- 1745     	MOVIA	0x0a
                                    1- 1746     	BANKSEL	_displayTimer
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 00rr                      1- 1747     	MOVAR	_displayTimer
     005B                           1- 1748     _02443_DS_:
                                    1- 1749     	.line	1213, "main.c"; 	}
                                    1- 1750     	RETURN	
     005B 0010                      3-   39 m1      ret
                                    1- 1751     ; exit point of _is_chg_or_dischg
                                    1- 1753     ;***
                                    1- 1754     ;  pBlock Stats: dbName = C
                                    1- 1755     ;***
                                    1- 1756     ;has an exit
                                    1- 1757     ;functions called:
                                    1- 1758     ;   _ip55xs_read4Bytes
                                    1- 1759     ;   _ip55xs_write4Bytes
                                    1- 1760     ;   _ip55xs_read4Bytes
                                    1- 1761     ;   _ip55xs_write4Bytes
                                    1- 1762     ;7 compiler assigned registers:
                                    1- 1763     ;   STK00
                                    1- 1764     ;   r0x102A
                                    1- 1765     ;   r0x102B
                                    1- 1766     ;   r0x102C
                                    1- 1767     ;   STK03
                                    1- 1768     ;   STK02
                                    1- 1769     ;   STK01
                                    1- 1770     ;; Starting pCode block
                                    1- 1771     .segment "code"; module=main, function=_get_p_ext_int_status
                                    1- 1773     ;local variable name mapping:
     0000                           1- 1775     _get_p_ext_int_status:
                                    1- 1776     ; 2 exit points
                                    1- 1777     	.line	1055, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1- 1778     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1- 1779     	BTRSS	_vFlag_1,3
                                    1- 1780     	MGOTO	_02415_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1781     	.line	1057, "main.c"; 	if (!P_I2C_INT)
     0003 0Drr                      1- 1782     	BTRSC	_PORTAbits,2
                                    1- 1783     	MGOTO	_02407_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1784     	.line	1059, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1785     	BANKSEL	_get_p_ext_int_status_counter_65536_121
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 05rr                      1- 1786     	INCR	_get_p_ext_int_status_counter_65536_121,F
                                    1- 1787     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1788     ;;unsigned compare: left >= lit(0x20=32), size=1
     0007 2120                      1- 1789     	MOVIA	0x20
     0008 04rr                      1- 1790     	SUBAR	_get_p_ext_int_status_counter_65536_121,W
     0009 0803                      1- 1791     	BTRSS	STATUS,0
                                    1- 1792     	MGOTO	_02417_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1793     	.line	1061, "main.c"; 	counter = 0;
     000B 02rr                      1- 1794     	CLRR	_get_p_ext_int_status_counter_65536_121
                                    1- 1795     	.line	1062, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1796     	BANKSEL	_vFlag_1
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Drr                      1- 1797     	BCR	_vFlag_1,3
                                    1- 1798     	.line	1063, "main.c"; 	bFlag_charger_on = 0; //! 放电
     000E 1Err                      1- 1799     	BCR	_vFlag_1,5
                                    1- 1800     	.line	1063, "main.c"; 	// io_uart_tx(0x22);
                                    1- 1801     	MGOTO	_02417_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1- 1802     _02407_DS_:
                                    1- 1803     	.line	1079, "main.c"; 	counter = 0;
                                    1- 1804     	BANKSEL	_get_p_ext_int_status_counter_65536_121
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 02rr                      1- 1805     	CLRR	_get_p_ext_int_status_counter_65536_121
                                    1- 1806     	MGOTO	_02417_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
     0013                           1- 1807     _02415_DS_:
                                    1- 1808     	.line	1084, "main.c"; 	if (P_I2C_INT)
     0013 09rr                      1- 1809     	BTRSS	_PORTAbits,2
                                    1- 1810     	MGOTO	_02412_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1811     	.line	1086, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1812     	BANKSEL	_get_p_ext_int_status_counter_65536_121
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 05rr                      1- 1813     	INCR	_get_p_ext_int_status_counter_65536_121,F
                                    1- 1814     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1815     ;;unsigned compare: left >= lit(0x20=32), size=1
     0017 2120                      1- 1816     	MOVIA	0x20
     0018 04rr                      1- 1817     	SUBAR	_get_p_ext_int_status_counter_65536_121,W
     0019 0803                      1- 1818     	BTRSS	STATUS,0
                                    1- 1819     	MGOTO	_02417_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1820     	.line	1088, "main.c"; 	counter = 0;
     001B 02rr                      1- 1821     	CLRR	_get_p_ext_int_status_counter_65536_121
                                    1- 1822     	.line	1089, "main.c"; 	bFlag_p_ext_int_is_high = 1;
                                    1- 1823     	BANKSEL	_vFlag_1
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 19rr                      1- 1824     	BSR	_vFlag_1,3
                                    1- 1825     	.line	1092, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     001E 21C0                      1- 1826     	MOVIA	0xc0
     001F 00rr                      1- 1827     	MOVAR	STK00
     0020 2100                      1- 1828     	MOVIA	0x00
                                    1- 1829     	MCALL	_ip55xs_read4Bytes
     0021 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1830     	.line	1094, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1831     	BANKSEL	_IP_DATA
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1- 1832     	MOVR	(_IP_DATA + 3),W
                                    1- 1833     	BANKSEL	r0x102A
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 1834     	MOVAR	r0x102A
     0026 1Drr                      1- 1835     	BCR	r0x102A,2
     0027 01rr                      1- 1836     	MOVR	r0x102A,W
                                    1- 1837     	BANKSEL	_IP_DATA
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 00rr                      1- 1838     	MOVAR	(_IP_DATA + 3)
                                    1- 1839     	.line	1095, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     002A 01rr                      1- 1840     	MOVR	(_IP_DATA + 3),W
                                    1- 1841     	BANKSEL	r0x102A
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 00rr                      1- 1842     	MOVAR	r0x102A
     002D 1Crr                      1- 1843     	BCR	r0x102A,0
     002E 01rr                      1- 1844     	MOVR	r0x102A,W
                                    1- 1845     	BANKSEL	_IP_DATA
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1- 1846     	MOVAR	(_IP_DATA + 3)
                                    1- 1847     	.line	1096, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0031 21rr                      1- 1848     	MOVIA	(_IP_DATA + 0)
                                    1- 1849     	BANKSEL	r0x102A
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1- 1850     	MOVAR	r0x102A
     0034 00rr                      1- 1851     	MOVAR	STK03
     0035 2100                      1- 1852     	MOVIA	0x00
     0036 00rr                      1- 1853     	MOVAR	STK02
     0037 00rr                      1- 1854     	MOVAR	STK01
     0038 21C0                      1- 1855     	MOVIA	0xc0
     0039 00rr                      1- 1856     	MOVAR	STK00
     003A 2100                      1- 1857     	MOVIA	0x00
                                    1- 1858     	MCALL	_ip55xs_write4Bytes
     003B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1859     	.line	1097, "main.c"; 	delaySleepTimer = CNST_TIMER_DLY_SLP;
     003C 2114                      1- 1860     	MOVIA	0x14
                                    1- 1861     	BANKSEL	_delaySleepTimer
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 1862     	MOVAR	_delaySleepTimer
                                    1- 1863     	MGOTO	_02417_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 1864     _02412_DS_:
                                    1- 1865     	.line	1103, "main.c"; 	counter = 0;
                                    1- 1866     	BANKSEL	_get_p_ext_int_status_counter_65536_121
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 02rr                      1- 1867     	CLRR	_get_p_ext_int_status_counter_65536_121
     0042                           1- 1868     _02417_DS_:
                                    1- 1869     	.line	1106, "main.c"; 	}
                                    1- 1870     	RETURN	
     0042 0010                      3-   39 m1      ret
                                    1- 1871     ; exit point of _get_p_ext_int_status
                                    1- 1873     ;***
                                    1- 1874     ;  pBlock Stats: dbName = C
                                    1- 1875     ;***
                                    1- 1876     ;has an exit
                                    1- 1877     ;functions called:
                                    1- 1878     ;   _ip55xs_read4Bytes
                                    1- 1879     ;   _ip55xs_write4Bytes
                                    1- 1880     ;   _ip55xs_read4Bytes
                                    1- 1881     ;   _ip55xs_write4Bytes
                                    1- 1882     ;7 compiler assigned registers:
                                    1- 1883     ;   STK00
                                    1- 1884     ;   r0x102E
                                    1- 1885     ;   r0x102F
                                    1- 1886     ;   r0x1030
                                    1- 1887     ;   STK03
                                    1- 1888     ;   STK02
                                    1- 1889     ;   STK01
                                    1- 1890     ;; Starting pCode block
                                    1- 1891     .segment "code"; module=main, function=_init_ip53xs
     0000                           1- 1893     _init_ip53xs:
                                    1- 1894     ; 2 exit points
                                    1- 1895     	.line	1043, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     0000 21C0                      1- 1896     	MOVIA	0xc0
     0001 00rr                      1- 1897     	MOVAR	STK00
     0002 2100                      1- 1898     	MOVIA	0x00
                                    1- 1899     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1900     	.line	1045, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1901     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1902     	MOVR	(_IP_DATA + 3),W
                                    1- 1903     	BANKSEL	r0x102E
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1904     	MOVAR	r0x102E
     0008 1Drr                      1- 1905     	BCR	r0x102E,2
     0009 01rr                      1- 1906     	MOVR	r0x102E,W
                                    1- 1907     	BANKSEL	_IP_DATA
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1908     	MOVAR	(_IP_DATA + 3)
                                    1- 1909     	.line	1046, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     000C 01rr                      1- 1910     	MOVR	(_IP_DATA + 3),W
                                    1- 1911     	BANKSEL	r0x102E
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1912     	MOVAR	r0x102E
     000F 1Crr                      1- 1913     	BCR	r0x102E,0
     0010 01rr                      1- 1914     	MOVR	r0x102E,W
                                    1- 1915     	BANKSEL	_IP_DATA
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1916     	MOVAR	(_IP_DATA + 3)
                                    1- 1917     	.line	1047, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0013 21rr                      1- 1918     	MOVIA	(_IP_DATA + 0)
                                    1- 1919     	BANKSEL	r0x102E
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1920     	MOVAR	r0x102E
     0016 00rr                      1- 1921     	MOVAR	STK03
     0017 2100                      1- 1922     	MOVIA	0x00
     0018 00rr                      1- 1923     	MOVAR	STK02
     0019 00rr                      1- 1924     	MOVAR	STK01
     001A 21C0                      1- 1925     	MOVIA	0xc0
     001B 00rr                      1- 1926     	MOVAR	STK00
     001C 2100                      1- 1927     	MOVIA	0x00
                                    1- 1928     	MCALL	_ip55xs_write4Bytes
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1929     	.line	1048, "main.c"; 	}
                                    1- 1930     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 1931     ; exit point of _init_ip53xs
                                    1- 1933     ;***
                                    1- 1934     ;  pBlock Stats: dbName = C
                                    1- 1935     ;***
                                    1- 1936     ;has an exit
                                    1- 1937     ;functions called:
                                    1- 1938     ;   _ip53xs_writeByte
                                    1- 1939     ;   _ip53xs_writeByte
                                    1- 1940     ;   _ip53xs_writeByte
                                    1- 1941     ;   _ip53xs_writeByte
                                    1- 1942     ;   _ip53xs_readByte
                                    1- 1943     ;   _ip53xs_readByte
                                    1- 1944     ;   _ip53xs_readByte
                                    1- 1945     ;   _ip53xs_readByte
                                    1- 1946     ;   _ip53xs_readByte
                                    1- 1947     ;   _ip53xs_writeByte
                                    1- 1948     ;   _ip53xs_writeByte
                                    1- 1949     ;   _ip53xs_writeByte
                                    1- 1950     ;   _ip53xs_writeByte
                                    1- 1951     ;   _ip53xs_writeByte
                                    1- 1952     ;   _ip53xs_writeByte
                                    1- 1953     ;   _ip53xs_writeByte
                                    1- 1954     ;   _ip53xs_writeByte
                                    1- 1955     ;   _ip53xs_readByte
                                    1- 1956     ;   _ip53xs_readByte
                                    1- 1957     ;   _ip53xs_readByte
                                    1- 1958     ;   _ip53xs_readByte
                                    1- 1959     ;   _ip53xs_readByte
                                    1- 1960     ;   _ip53xs_writeByte
                                    1- 1961     ;   _ip53xs_writeByte
                                    1- 1962     ;   _ip53xs_writeByte
                                    1- 1963     ;   _ip53xs_writeByte
                                    1- 1964     ;7 compiler assigned registers:
                                    1- 1965     ;   r0x1023
                                    1- 1966     ;   STK00
                                    1- 1967     ;   r0x1024
                                    1- 1968     ;   r0x1025
                                    1- 1969     ;   STK01
                                    1- 1970     ;   r0x1026
                                    1- 1971     ;   r0x1027
                                    1- 1972     ;; Starting pCode block
                                    1- 1973     .segment "code"; module=main, function=_ip55xs_read4Bytes
                                    1- 1975     ;local variable name mapping:
     0000                           1- 1979     _ip55xs_read4Bytes:
                                    1- 1980     ; 2 exit points
                                    1- 1981     	.line	996, "main.c"; 	BOOL ip55xs_read4Bytes(/*unsigned char deviceAddr,*/ unsigned int regAddr) //(unsigned char regAddr)
                                    1- 1982     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1983     	MOVAR	r0x1023
     0002 01rr                      1- 1984     	MOVR	STK00,W
                                    1- 1985     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1986     	MOVAR	r0x1024
                                    1- 1987     	.line	1002, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 1988     	BANKSEL	r0x1025
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1989     	MOVAR	r0x1025
     0007 00rr                      1- 1990     	MOVAR	STK01
     0008 2110                      1- 1991     	MOVIA	0x10
     0009 00rr                      1- 1992     	MOVAR	STK00
     000A 21EA                      1- 1993     	MOVIA	0xea
                                    1- 1994     	MCALL	_ip53xs_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1995     	.line	1003, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 1996     	BANKSEL	r0x1023
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1997     	MOVR	r0x1023,W
                                    1- 1998     	BANKSEL	r0x1026
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1999     	MOVAR	r0x1026
                                    1- 2000     	BANKSEL	r0x1024
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 2001     	MOVAR	r0x1024
     0012 00rr                      1- 2002     	MOVAR	STK01
     0013 2111                      1- 2003     	MOVIA	0x11
     0014 00rr                      1- 2004     	MOVAR	STK00
     0015 21EA                      1- 2005     	MOVIA	0xea
                                    1- 2006     	MCALL	_ip53xs_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2007     	.line	1004, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x11);
     0017 2111                      1- 2008     	MOVIA	0x11
     0018 00rr                      1- 2009     	MOVAR	STK01
     0019 2112                      1- 2010     	MOVIA	0x12
     001A 00rr                      1- 2011     	MOVAR	STK00
     001B 21EA                      1- 2012     	MOVIA	0xea
                                    1- 2013     	MCALL	_ip53xs_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2014     	.line	1005, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x11);
     001D 2111                      1- 2015     	MOVIA	0x11
     001E 00rr                      1- 2016     	MOVAR	STK01
     001F 2113                      1- 2017     	MOVIA	0x13
     0020 00rr                      1- 2018     	MOVAR	STK00
     0021 21EA                      1- 2019     	MOVIA	0xea
                                    1- 2020     	MCALL	_ip53xs_writeByte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2021     	.line	1009, "main.c"; 	do
     0023 2164                      1- 2022     	MOVIA	0x64
                                    1- 2023     	BANKSEL	r0x1023
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2024     	MOVAR	r0x1023
     0026                           1- 2025     _02392_DS_:
                                    1- 2026     	.line	1011, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0026 2100                      1- 2027     	MOVIA	0x00
     0027 00rr                      1- 2028     	MOVAR	STK00
     0028 21EA                      1- 2029     	MOVIA	0xea
                                    1- 2030     	MCALL	_ip53xs_readByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2031     	BANKSEL	r0x1026
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 2032     	MOVAR	r0x1026
                                    1- 2033     	.line	1012, "main.c"; 	if (0 == timer_out)
                                    1- 2034     	BANKSEL	r0x1023
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 2035     	MOVR	r0x1023,W
     002E 0903                      1- 2036     	BTRSS	STATUS,2
                                    1- 2037     	MGOTO	_02390_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2038     	.line	1014, "main.c"; 	return FALSE;
     0030 2100                      1- 2039     	MOVIA	0x00
                                    1- 2040     	MGOTO	_02395_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 2041     _02390_DS_:
                                    1- 2042     	.line	1019, "main.c"; 	timer_out--;
                                    1- 2043     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 06rr                      1- 2044     	DECR	r0x1023,F
                                    1- 2045     	.line	1021, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2046     	BANKSEL	r0x1026
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 01rr                      1- 2047     	MOVR	r0x1026,W
     0036 24AA                      1- 2048     	XORIA	0xaa
     0037 0903                      1- 2049     	BTRSS	STATUS,2
                                    1- 2050     	MGOTO	_02392_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2051     	.line	1022, "main.c"; 	IP_DATA[0] = ip53xs_readByte(0xEA, 0x0C);
     0039 210C                      1- 2052     	MOVIA	0x0c
     003A 00rr                      1- 2053     	MOVAR	STK00
     003B 21EA                      1- 2054     	MOVIA	0xea
                                    1- 2055     	MCALL	_ip53xs_readByte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2056     	BANKSEL	r0x1023
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 2057     	MOVAR	r0x1023
                                    1- 2058     	BANKSEL	_IP_DATA
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 2059     	MOVAR	(_IP_DATA + 0)
                                    1- 2060     	.line	1023, "main.c"; 	IP_DATA[1] = ip53xs_readByte(0xEA, 0x0D);
     0041 210D                      1- 2061     	MOVIA	0x0d
     0042 00rr                      1- 2062     	MOVAR	STK00
     0043 21EA                      1- 2063     	MOVIA	0xea
                                    1- 2064     	MCALL	_ip53xs_readByte
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2065     	BANKSEL	r0x1023
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 2066     	MOVAR	r0x1023
                                    1- 2067     	BANKSEL	_IP_DATA
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2068     	MOVAR	(_IP_DATA + 1)
                                    1- 2069     	.line	1024, "main.c"; 	IP_DATA[2] = ip53xs_readByte(0xEA, 0x0E);
     0049 210E                      1- 2070     	MOVIA	0x0e
     004A 00rr                      1- 2071     	MOVAR	STK00
     004B 21EA                      1- 2072     	MOVIA	0xea
                                    1- 2073     	MCALL	_ip53xs_readByte
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2074     	BANKSEL	r0x1023
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 2075     	MOVAR	r0x1023
                                    1- 2076     	BANKSEL	_IP_DATA
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2077     	MOVAR	(_IP_DATA + 2)
                                    1- 2078     	.line	1025, "main.c"; 	IP_DATA[3] = ip53xs_readByte(0xEA, 0x0F);
     0051 210F                      1- 2079     	MOVIA	0x0f
     0052 00rr                      1- 2080     	MOVAR	STK00
     0053 21EA                      1- 2081     	MOVIA	0xea
                                    1- 2082     	MCALL	_ip53xs_readByte
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2083     	BANKSEL	r0x1023
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 2084     	MOVAR	r0x1023
                                    1- 2085     	BANKSEL	_IP_DATA
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2086     	MOVAR	(_IP_DATA + 3)
                                    1- 2087     	.line	1026, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2088     	BANKSEL	r0x1025
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1- 2089     	MOVR	r0x1025,W
     005B 00rr                      1- 2090     	MOVAR	STK01
     005C 2110                      1- 2091     	MOVIA	0x10
     005D 00rr                      1- 2092     	MOVAR	STK00
     005E 21EA                      1- 2093     	MOVIA	0xea
                                    1- 2094     	MCALL	_ip53xs_writeByte
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2095     	.line	1027, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2096     	BANKSEL	r0x1024
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2097     	MOVR	r0x1024,W
     0062 00rr                      1- 2098     	MOVAR	STK01
     0063 2111                      1- 2099     	MOVIA	0x11
     0064 00rr                      1- 2100     	MOVAR	STK00
     0065 21EA                      1- 2101     	MOVIA	0xea
                                    1- 2102     	MCALL	_ip53xs_writeByte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2103     	.line	1028, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x22);
     0067 2122                      1- 2104     	MOVIA	0x22
     0068 00rr                      1- 2105     	MOVAR	STK01
     0069 2112                      1- 2106     	MOVIA	0x12
     006A 00rr                      1- 2107     	MOVAR	STK00
     006B 21EA                      1- 2108     	MOVIA	0xea
                                    1- 2109     	MCALL	_ip53xs_writeByte
     006C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2110     	.line	1029, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x22);
     006D 2122                      1- 2111     	MOVIA	0x22
     006E 00rr                      1- 2112     	MOVAR	STK01
     006F 2113                      1- 2113     	MOVIA	0x13
     0070 00rr                      1- 2114     	MOVAR	STK00
     0071 21EA                      1- 2115     	MOVIA	0xea
                                    1- 2116     	MCALL	_ip53xs_writeByte
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2117     	.line	1030, "main.c"; 	return TRUE;
     0073 2101                      1- 2118     	MOVIA	0x01
     0074                           1- 2119     _02395_DS_:
                                    1- 2120     	.line	1031, "main.c"; 	}
                                    1- 2121     	RETURN	
     0074 0010                      3-   39 m1      ret
                                    1- 2122     ; exit point of _ip55xs_read4Bytes
                                    1- 2124     ;***
                                    1- 2125     ;  pBlock Stats: dbName = C
                                    1- 2126     ;***
                                    1- 2127     ;has an exit
                                    1- 2128     ;functions called:
                                    1- 2129     ;   _ip53xs_writeByte
                                    1- 2130     ;   _ip53xs_writeByte
                                    1- 2131     ;   _ip53xs_writeByte
                                    1- 2132     ;   _ip53xs_writeByte
                                    1- 2133     ;   _ip53xs_readByte
                                    1- 2134     ;   __gptrget1
                                    1- 2135     ;   _ip53xs_writeByte
                                    1- 2136     ;   __gptrget1
                                    1- 2137     ;   _ip53xs_writeByte
                                    1- 2138     ;   _ip53xs_writeByte
                                    1- 2139     ;   _ip53xs_writeByte
                                    1- 2140     ;   _ip53xs_readByte
                                    1- 2141     ;   __gptrget1
                                    1- 2142     ;   _ip53xs_writeByte
                                    1- 2143     ;   __gptrget1
                                    1- 2144     ;   _ip53xs_writeByte
                                    1- 2145     ;   _ip53xs_writeByte
                                    1- 2146     ;   _ip53xs_writeByte
                                    1- 2147     ;   _ip53xs_readByte
                                    1- 2148     ;   _ip53xs_writeByte
                                    1- 2149     ;   _ip53xs_writeByte
                                    1- 2150     ;   _ip53xs_writeByte
                                    1- 2151     ;   _ip53xs_writeByte
                                    1- 2152     ;   _ip53xs_readByte
                                    1- 2153     ;   __gptrget1
                                    1- 2154     ;   _ip53xs_writeByte
                                    1- 2155     ;   __gptrget1
                                    1- 2156     ;   _ip53xs_writeByte
                                    1- 2157     ;   _ip53xs_writeByte
                                    1- 2158     ;   _ip53xs_writeByte
                                    1- 2159     ;   _ip53xs_readByte
                                    1- 2160     ;   __gptrget1
                                    1- 2161     ;   _ip53xs_writeByte
                                    1- 2162     ;   __gptrget1
                                    1- 2163     ;   _ip53xs_writeByte
                                    1- 2164     ;   _ip53xs_writeByte
                                    1- 2165     ;   _ip53xs_writeByte
                                    1- 2166     ;   _ip53xs_readByte
                                    1- 2167     ;11 compiler assigned registers:
                                    1- 2168     ;   r0x1023
                                    1- 2169     ;   STK00
                                    1- 2170     ;   r0x1024
                                    1- 2171     ;   STK01
                                    1- 2172     ;   r0x1025
                                    1- 2173     ;   STK02
                                    1- 2174     ;   r0x1026
                                    1- 2175     ;   STK03
                                    1- 2176     ;   r0x1027
                                    1- 2177     ;   r0x1028
                                    1- 2178     ;   r0x1029
                                    1- 2179     ;; Starting pCode block
                                    1- 2180     .segment "code"; module=main, function=_ip55xs_write4Bytes
                                    1- 2182     ;local variable name mapping:
     0000                           1- 2187     _ip55xs_write4Bytes:
                                    1- 2188     ; 2 exit points
                                    1- 2189     	.line	927, "main.c"; 	BOOL ip55xs_write4Bytes(unsigned int regAddr, unsigned char *pdata)
                                    1- 2190     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2191     	MOVAR	r0x1023
     0002 01rr                      1- 2192     	MOVR	STK00,W
                                    1- 2193     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2194     	MOVAR	r0x1024
     0005 01rr                      1- 2195     	MOVR	STK01,W
                                    1- 2196     	BANKSEL	r0x1025
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2197     	MOVAR	r0x1025
     0008 01rr                      1- 2198     	MOVR	STK02,W
                                    1- 2199     	BANKSEL	r0x1026
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 2200     	MOVAR	r0x1026
     000B 01rr                      1- 2201     	MOVR	STK03,W
                                    1- 2202     	BANKSEL	r0x1027
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 2203     	MOVAR	r0x1027
                                    1- 2204     	.line	932, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2205     	BANKSEL	r0x1024
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 2206     	MOVR	r0x1024,W
                                    1- 2207     ;;100	MOVAR	r0x1028
     0010 00rr                      1- 2208     	MOVAR	STK01
     0011 2110                      1- 2209     	MOVIA	0x10
     0012 00rr                      1- 2210     	MOVAR	STK00
     0013 21EA                      1- 2211     	MOVIA	0xea
                                    1- 2212     	MCALL	_ip53xs_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2213     	.line	933, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2214     	BANKSEL	r0x1023
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2215     	MOVR	r0x1023,W
                                    1- 2216     ;;99	MOVAR	r0x1028
                                    1- 2217     	BANKSEL	r0x1024
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 2218     	MOVAR	r0x1024
     0019 00rr                      1- 2219     	MOVAR	STK01
     001A 2111                      1- 2220     	MOVIA	0x11
     001B 00rr                      1- 2221     	MOVAR	STK00
     001C 21EA                      1- 2222     	MOVIA	0xea
                                    1- 2223     	MCALL	_ip53xs_writeByte
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2224     	.line	934, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x55);
     001E 2155                      1- 2225     	MOVIA	0x55
     001F 00rr                      1- 2226     	MOVAR	STK01
     0020 2112                      1- 2227     	MOVIA	0x12
     0021 00rr                      1- 2228     	MOVAR	STK00
     0022 21EA                      1- 2229     	MOVIA	0xea
                                    1- 2230     	MCALL	_ip53xs_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2231     	.line	935, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x55);
     0024 2155                      1- 2232     	MOVIA	0x55
     0025 00rr                      1- 2233     	MOVAR	STK01
     0026 2113                      1- 2234     	MOVIA	0x13
     0027 00rr                      1- 2235     	MOVAR	STK00
     0028 21EA                      1- 2236     	MOVIA	0xea
                                    1- 2237     	MCALL	_ip53xs_writeByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2238     	.line	937, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     002A 2100                      1- 2239     	MOVIA	0x00
     002B 00rr                      1- 2240     	MOVAR	STK00
     002C 21EA                      1- 2241     	MOVIA	0xea
                                    1- 2242     	MCALL	_ip53xs_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2243     	BANKSEL	r0x1024
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2244     	MOVAR	r0x1024
                                    1- 2245     	.line	939, "main.c"; 	do
     0030 2164                      1- 2246     	MOVIA	0x64
                                    1- 2247     	BANKSEL	r0x1023
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 2248     	MOVAR	r0x1023
     0033                           1- 2249     _02369_DS_:
                                    1- 2250     	.line	941, "main.c"; 	if (timer_out)
                                    1- 2251     	BANKSEL	r0x1023
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 2252     	MOVR	r0x1023,W
     0035 0D03                      1- 2253     	BTRSC	STATUS,2
                                    1- 2254     	MGOTO	_02367_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2255     	.line	943, "main.c"; 	timer_out--;
     0037 06rr                      1- 2256     	DECR	r0x1023,F
                                    1- 2257     	MGOTO	_02370_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1- 2258     _02367_DS_:
                                    1- 2259     	.line	947, "main.c"; 	return FALSE;
     0039 2100                      1- 2260     	MOVIA	0x00
                                    1- 2261     	MGOTO	_02384_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 2262     _02370_DS_:
                                    1- 2263     	.line	949, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2264     	BANKSEL	r0x1024
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 2265     	MOVR	r0x1024,W
     003D 24AA                      1- 2266     	XORIA	0xaa
     003E 0903                      1- 2267     	BTRSS	STATUS,2
                                    1- 2268     	MGOTO	_02369_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2269     	.line	950, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA0
                                    1- 2270     	BANKSEL	r0x1027
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 2271     	MOVR	r0x1027,W
     0042 00rr                      1- 2272     	MOVAR	STK01
                                    1- 2273     	BANKSEL	r0x1026
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 2274     	MOVR	r0x1026,W
     0045 00rr                      1- 2275     	MOVAR	STK00
                                    1- 2276     	BANKSEL	r0x1025
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 2277     	MOVR	r0x1025,W
                                    1- 2278     	MCALL	__gptrget1
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2279     	BANKSEL	r0x1024
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 2280     	MOVAR	r0x1024
     004B 00rr                      1- 2281     	MOVAR	STK01
     004C 2110                      1- 2282     	MOVIA	0x10
     004D 00rr                      1- 2283     	MOVAR	STK00
     004E 21EA                      1- 2284     	MOVIA	0xea
                                    1- 2285     	MCALL	_ip53xs_writeByte
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2286     	.line	951, "main.c"; 	pdata++;
                                    1- 2287     	BANKSEL	r0x1027
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 05rr                      1- 2288     	INCR	r0x1027,F
     0052 0903                      1- 2289     	BTRSS	STATUS,2
                                    1- 2290     	MGOTO	_00009_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2291     	BANKSEL	r0x1026
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 05rr                      1- 2292     	INCR	r0x1026,F
     0056                           1- 2293     _00009_DS_:
     0056 0903                      1- 2294     	BTRSS	STATUS,2
                                    1- 2295     	MGOTO	_00010_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2296     	BANKSEL	r0x1025
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 05rr                      1- 2297     	INCR	r0x1025,F
     005A                           1- 2298     _00010_DS_:
                                    1- 2299     	.line	952, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA1
                                    1- 2300     	BANKSEL	r0x1027
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1- 2301     	MOVR	r0x1027,W
     005C 00rr                      1- 2302     	MOVAR	STK01
                                    1- 2303     	BANKSEL	r0x1026
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1- 2304     	MOVR	r0x1026,W
     005F 00rr                      1- 2305     	MOVAR	STK00
                                    1- 2306     	BANKSEL	r0x1025
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2307     	MOVR	r0x1025,W
                                    1- 2308     	MCALL	__gptrget1
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2309     	BANKSEL	r0x1024
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 00rr                      1- 2310     	MOVAR	r0x1024
     0065 00rr                      1- 2311     	MOVAR	STK01
     0066 2111                      1- 2312     	MOVIA	0x11
     0067 00rr                      1- 2313     	MOVAR	STK00
     0068 21EA                      1- 2314     	MOVIA	0xea
                                    1- 2315     	MCALL	_ip53xs_writeByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2316     	.line	954, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x66);
     006A 2166                      1- 2317     	MOVIA	0x66
     006B 00rr                      1- 2318     	MOVAR	STK01
     006C 2112                      1- 2319     	MOVIA	0x12
     006D 00rr                      1- 2320     	MOVAR	STK00
     006E 21EA                      1- 2321     	MOVIA	0xea
                                    1- 2322     	MCALL	_ip53xs_writeByte
     006F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2323     	.line	956, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x66);
     0070 2166                      1- 2324     	MOVIA	0x66
     0071 00rr                      1- 2325     	MOVAR	STK01
     0072 2113                      1- 2326     	MOVIA	0x13
     0073 00rr                      1- 2327     	MOVAR	STK00
     0074 21EA                      1- 2328     	MOVIA	0xea
                                    1- 2329     	MCALL	_ip53xs_writeByte
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2330     	.line	958, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0076 2100                      1- 2331     	MOVIA	0x00
     0077 00rr                      1- 2332     	MOVAR	STK00
     0078 21EA                      1- 2333     	MOVIA	0xea
                                    1- 2334     	MCALL	_ip53xs_readByte
     0079 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2335     	BANKSEL	r0x1024
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 00rr                      1- 2336     	MOVAR	r0x1024
                                    1- 2337     	.line	960, "main.c"; 	do
     007C 2164                      1- 2338     	MOVIA	0x64
                                    1- 2339     	BANKSEL	r0x1023
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 2340     	MOVAR	r0x1023
     007F                           1- 2341     _02375_DS_:
                                    1- 2342     	.line	962, "main.c"; 	if (timer_out)
                                    1- 2343     	BANKSEL	r0x1023
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1- 2344     	MOVR	r0x1023,W
     0081 0D03                      1- 2345     	BTRSC	STATUS,2
                                    1- 2346     	MGOTO	_02373_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2347     	.line	964, "main.c"; 	timer_out--;
     0083 06rr                      1- 2348     	DECR	r0x1023,F
                                    1- 2349     	MGOTO	_02376_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2350     _02373_DS_:
                                    1- 2351     	.line	968, "main.c"; 	return FALSE;
     0085 2100                      1- 2352     	MOVIA	0x00
                                    1- 2353     	MGOTO	_02384_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 2354     _02376_DS_:
                                    1- 2355     	.line	970, "main.c"; 	} while (0x55 != reg_ip55xs);
                                    1- 2356     	BANKSEL	r0x1024
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 2357     	MOVR	r0x1024,W
     0089 2455                      1- 2358     	XORIA	0x55
     008A 0903                      1- 2359     	BTRSS	STATUS,2
                                    1- 2360     	MGOTO	_02375_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2361     	.line	972, "main.c"; 	pdata++;
                                    1- 2362     	BANKSEL	r0x1027
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 05rr                      1- 2363     	INCR	r0x1027,F
     008E 0903                      1- 2364     	BTRSS	STATUS,2
                                    1- 2365     	MGOTO	_00011_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2366     	BANKSEL	r0x1026
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 2367     	INCR	r0x1026,F
     0092                           1- 2368     _00011_DS_:
     0092 0903                      1- 2369     	BTRSS	STATUS,2
                                    1- 2370     	MGOTO	_00012_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2371     	BANKSEL	r0x1025
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 2372     	INCR	r0x1025,F
     0096                           1- 2373     _00012_DS_:
                                    1- 2374     	.line	973, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA2
                                    1- 2375     	BANKSEL	r0x1027
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 2376     	MOVR	r0x1027,W
     0098 00rr                      1- 2377     	MOVAR	STK01
                                    1- 2378     	BANKSEL	r0x1026
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 2379     	MOVR	r0x1026,W
     009B 00rr                      1- 2380     	MOVAR	STK00
                                    1- 2381     	BANKSEL	r0x1025
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 01rr                      1- 2382     	MOVR	r0x1025,W
                                    1- 2383     	MCALL	__gptrget1
     009E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2384     	BANKSEL	r0x1024
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 2385     	MOVAR	r0x1024
     00A1 00rr                      1- 2386     	MOVAR	STK01
     00A2 2110                      1- 2387     	MOVIA	0x10
     00A3 00rr                      1- 2388     	MOVAR	STK00
     00A4 21EA                      1- 2389     	MOVIA	0xea
                                    1- 2390     	MCALL	_ip53xs_writeByte
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2391     	.line	974, "main.c"; 	pdata++;
                                    1- 2392     	BANKSEL	r0x1027
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 05rr                      1- 2393     	INCR	r0x1027,F
     00A8 0903                      1- 2394     	BTRSS	STATUS,2
                                    1- 2395     	MGOTO	_00013_DS_
     00A9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2396     	BANKSEL	r0x1026
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 05rr                      1- 2397     	INCR	r0x1026,F
     00AC                           1- 2398     _00013_DS_:
     00AC 0903                      1- 2399     	BTRSS	STATUS,2
                                    1- 2400     	MGOTO	_00014_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2401     	BANKSEL	r0x1025
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 05rr                      1- 2402     	INCR	r0x1025,F
     00B0                           1- 2403     _00014_DS_:
                                    1- 2404     	.line	975, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA3
                                    1- 2405     	BANKSEL	r0x1027
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 01rr                      1- 2406     	MOVR	r0x1027,W
     00B2 00rr                      1- 2407     	MOVAR	STK01
                                    1- 2408     	BANKSEL	r0x1026
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 01rr                      1- 2409     	MOVR	r0x1026,W
     00B5 00rr                      1- 2410     	MOVAR	STK00
                                    1- 2411     	BANKSEL	r0x1025
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 2412     	MOVR	r0x1025,W
                                    1- 2413     	MCALL	__gptrget1
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2414     	BANKSEL	r0x1024
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 2415     	MOVAR	r0x1024
     00BB 00rr                      1- 2416     	MOVAR	STK01
     00BC 2111                      1- 2417     	MOVIA	0x11
     00BD 00rr                      1- 2418     	MOVAR	STK00
     00BE 21EA                      1- 2419     	MOVIA	0xea
                                    1- 2420     	MCALL	_ip53xs_writeByte
     00BF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2421     	.line	976, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x77);
     00C0 2177                      1- 2422     	MOVIA	0x77
     00C1 00rr                      1- 2423     	MOVAR	STK01
     00C2 2112                      1- 2424     	MOVIA	0x12
     00C3 00rr                      1- 2425     	MOVAR	STK00
     00C4 21EA                      1- 2426     	MOVIA	0xea
                                    1- 2427     	MCALL	_ip53xs_writeByte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2428     	.line	978, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x77);
     00C6 2177                      1- 2429     	MOVIA	0x77
     00C7 00rr                      1- 2430     	MOVAR	STK01
     00C8 2113                      1- 2431     	MOVIA	0x13
     00C9 00rr                      1- 2432     	MOVAR	STK00
     00CA 21EA                      1- 2433     	MOVIA	0xea
                                    1- 2434     	MCALL	_ip53xs_writeByte
     00CB 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2435     	.line	980, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     00CC 2100                      1- 2436     	MOVIA	0x00
     00CD 00rr                      1- 2437     	MOVAR	STK00
     00CE 21EA                      1- 2438     	MOVIA	0xea
                                    1- 2439     	MCALL	_ip53xs_readByte
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2440     	BANKSEL	r0x1024
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 00rr                      1- 2441     	MOVAR	r0x1024
                                    1- 2442     	.line	982, "main.c"; 	do
     00D2 2164                      1- 2443     	MOVIA	0x64
                                    1- 2444     	BANKSEL	r0x1023
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1- 2445     	MOVAR	r0x1023
     00D5                           1- 2446     _02381_DS_:
                                    1- 2447     	.line	984, "main.c"; 	if (timer_out)
                                    1- 2448     	BANKSEL	r0x1023
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 01rr                      1- 2449     	MOVR	r0x1023,W
     00D7 0D03                      1- 2450     	BTRSC	STATUS,2
                                    1- 2451     	MGOTO	_02379_DS_
     00D8 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2452     	.line	986, "main.c"; 	timer_out--;
     00D9 06rr                      1- 2453     	DECR	r0x1023,F
                                    1- 2454     	MGOTO	_02382_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
     00DB                           1- 2455     _02379_DS_:
                                    1- 2456     	.line	990, "main.c"; 	return FALSE;
     00DB 2100                      1- 2457     	MOVIA	0x00
                                    1- 2458     	MGOTO	_02384_DS_
     00DC 3rrr                      3-   62 m1      LGOTO rom_address
     00DD                           1- 2459     _02382_DS_:
                                    1- 2460     	.line	992, "main.c"; 	} while (0xFF != reg_ip55xs);
                                    1- 2461     	BANKSEL	r0x1024
     00DD rrrr                      3-  109 m1      .banksel ram_address
     00DE 01rr                      1- 2462     	MOVR	r0x1024,W
     00DF 24FF                      1- 2463     	XORIA	0xff
     00E0 0903                      1- 2464     	BTRSS	STATUS,2
                                    1- 2465     	MGOTO	_02381_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2466     	.line	993, "main.c"; 	return TRUE;
     00E2 2101                      1- 2467     	MOVIA	0x01
     00E3                           1- 2468     _02384_DS_:
                                    1- 2469     	.line	994, "main.c"; 	}
                                    1- 2470     	RETURN	
     00E3 0010                      3-   39 m1      ret
                                    1- 2471     ; exit point of _ip55xs_write4Bytes
                                    1- 2473     ;***
                                    1- 2474     ;  pBlock Stats: dbName = C
                                    1- 2475     ;***
                                    1- 2476     ;has an exit
                                    1- 2477     ;functions called:
                                    1- 2478     ;   _i2c_start
                                    1- 2479     ;   _i2c_writeByte
                                    1- 2480     ;   _i2c_stop
                                    1- 2481     ;   _i2c_writeByte
                                    1- 2482     ;   _i2c_stop
                                    1- 2483     ;   _i2c_start
                                    1- 2484     ;   _i2c_writeByte
                                    1- 2485     ;   _i2c_stop
                                    1- 2486     ;   _i2c_readByte
                                    1- 2487     ;   _i2c_send_nack
                                    1- 2488     ;   _i2c_stop
                                    1- 2489     ;   _i2c_start
                                    1- 2490     ;   _i2c_writeByte
                                    1- 2491     ;   _i2c_stop
                                    1- 2492     ;   _i2c_writeByte
                                    1- 2493     ;   _i2c_stop
                                    1- 2494     ;   _i2c_start
                                    1- 2495     ;   _i2c_writeByte
                                    1- 2496     ;   _i2c_stop
                                    1- 2497     ;   _i2c_readByte
                                    1- 2498     ;   _i2c_send_nack
                                    1- 2499     ;   _i2c_stop
                                    1- 2500     ;5 compiler assigned registers:
                                    1- 2501     ;   r0x101F
                                    1- 2502     ;   STK00
                                    1- 2503     ;   r0x1020
                                    1- 2504     ;   r0x1021
                                    1- 2505     ;   r0x1022
                                    1- 2506     ;; Starting pCode block
                                    1- 2507     .segment "code"; module=main, function=_ip53xs_readByte
                                    1- 2509     ;local variable name mapping:
     0000                           1- 2513     _ip53xs_readByte:
                                    1- 2514     ; 2 exit points
                                    1- 2515     	.line	892, "main.c"; 	unsigned char ip53xs_readByte(unsigned char deviceAddr, unsigned char regAddr) //(unsigned char regAddr)
                                    1- 2516     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2517     	MOVAR	r0x101F
     0002 01rr                      1- 2518     	MOVR	STK00,W
                                    1- 2519     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2520     	MOVAR	r0x1020
                                    1- 2521     	.line	894, "main.c"; 	unsigned char readByte = 0;
                                    1- 2522     	BANKSEL	r0x1021
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 2523     	CLRR	r0x1021
                                    1- 2524     	.line	895, "main.c"; 	if (P_I2C_INT)
     0007 09rr                      1- 2525     	BTRSS	_PORTAbits,2
                                    1- 2526     	MGOTO	_02360_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2527     	.line	897, "main.c"; 	i2c_start();
                                    1- 2528     	MCALL	_i2c_start
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2529     	.line	899, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2530     	BANKSEL	r0x101F
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1- 2531     	MOVR	r0x101F,W
                                    1- 2532     	MCALL	_i2c_writeByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2533     	BANKSEL	r0x1022
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2534     	MOVAR	r0x1022
     000F 01rr                      1- 2535     	MOVR	r0x1022,W
     0010 0D03                      1- 2536     	BTRSC	STATUS,2
                                    1- 2537     	MGOTO	_02354_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2538     	.line	901, "main.c"; 	i2c_stop();
                                    1- 2539     	MCALL	_i2c_stop
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2540     	.line	902, "main.c"; 	return FALSE;
     0013 2100                      1- 2541     	MOVIA	0x00
                                    1- 2542     	MGOTO	_02361_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
     0015                           1- 2543     _02354_DS_:
                                    1- 2544     	.line	905, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2545     	BANKSEL	r0x1020
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2546     	MOVR	r0x1020,W
                                    1- 2547     	MCALL	_i2c_writeByte
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2548     	BANKSEL	r0x1020
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2549     	MOVAR	r0x1020
     001A 01rr                      1- 2550     	MOVR	r0x1020,W
     001B 0D03                      1- 2551     	BTRSC	STATUS,2
                                    1- 2552     	MGOTO	_02356_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2553     	.line	907, "main.c"; 	i2c_stop();
                                    1- 2554     	MCALL	_i2c_stop
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2555     	.line	908, "main.c"; 	return FALSE;
     001E 2100                      1- 2556     	MOVIA	0x00
                                    1- 2557     	MGOTO	_02361_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2558     _02356_DS_:
                                    1- 2559     	.line	911, "main.c"; 	i2c_start();
                                    1- 2560     	MCALL	_i2c_start
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2561     	.line	913, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 2562     	BANKSEL	r0x101F
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 18rr                      1- 2563     	BSR	r0x101F,0
     0023 01rr                      1- 2564     	MOVR	r0x101F,W
                                    1- 2565     	MCALL	_i2c_writeByte
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2566     	BANKSEL	r0x101F
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 2567     	MOVAR	r0x101F
     0027 01rr                      1- 2568     	MOVR	r0x101F,W
     0028 0D03                      1- 2569     	BTRSC	STATUS,2
                                    1- 2570     	MGOTO	_02358_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2571     	.line	915, "main.c"; 	i2c_stop();
                                    1- 2572     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2573     	.line	916, "main.c"; 	return FALSE;
     002B 2100                      1- 2574     	MOVIA	0x00
                                    1- 2575     	MGOTO	_02361_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 2576     _02358_DS_:
                                    1- 2577     	.line	919, "main.c"; 	readByte = i2c_readByte();
                                    1- 2578     	MCALL	_i2c_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2579     	BANKSEL	r0x1021
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2580     	MOVAR	r0x1021
                                    1- 2581     	.line	920, "main.c"; 	i2c_send_nack();
                                    1- 2582     	MCALL	_i2c_send_nack
     0030 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2583     	.line	921, "main.c"; 	i2c_stop();
                                    1- 2584     	MCALL	_i2c_stop
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1- 2585     _02360_DS_:
                                    1- 2586     	.line	924, "main.c"; 	return readByte;
                                    1- 2587     	BANKSEL	r0x1021
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 2588     	MOVR	r0x1021,W
     0034                           1- 2589     _02361_DS_:
                                    1- 2590     	.line	925, "main.c"; 	}
                                    1- 2591     	RETURN	
     0034 0010                      3-   39 m1      ret
                                    1- 2592     ; exit point of _ip53xs_readByte
                                    1- 2594     ;***
                                    1- 2595     ;  pBlock Stats: dbName = C
                                    1- 2596     ;***
                                    1- 2597     ;has an exit
                                    1- 2598     ;functions called:
                                    1- 2599     ;   _i2c_start
                                    1- 2600     ;   _i2c_writeByte
                                    1- 2601     ;   _i2c_stop
                                    1- 2602     ;   _i2c_writeByte
                                    1- 2603     ;   _i2c_stop
                                    1- 2604     ;   _i2c_writeByte
                                    1- 2605     ;   _i2c_stop
                                    1- 2606     ;   _i2c_stop
                                    1- 2607     ;   _i2c_start
                                    1- 2608     ;   _i2c_writeByte
                                    1- 2609     ;   _i2c_stop
                                    1- 2610     ;   _i2c_writeByte
                                    1- 2611     ;   _i2c_stop
                                    1- 2612     ;   _i2c_writeByte
                                    1- 2613     ;   _i2c_stop
                                    1- 2614     ;   _i2c_stop
                                    1- 2615     ;5 compiler assigned registers:
                                    1- 2616     ;   r0x101F
                                    1- 2617     ;   STK00
                                    1- 2618     ;   r0x1020
                                    1- 2619     ;   STK01
                                    1- 2620     ;   r0x1021
                                    1- 2621     ;; Starting pCode block
                                    1- 2622     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 2624     ;local variable name mapping:
     0000                           1- 2628     _ip53xs_writeByte:
                                    1- 2629     ; 2 exit points
                                    1- 2630     	.line	862, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 2631     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2632     	MOVAR	r0x101F
     0002 01rr                      1- 2633     	MOVR	STK00,W
                                    1- 2634     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2635     	MOVAR	r0x1020
     0005 01rr                      1- 2636     	MOVR	STK01,W
                                    1- 2637     	BANKSEL	r0x1021
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2638     	MOVAR	r0x1021
                                    1- 2639     	.line	864, "main.c"; 	if (P_I2C_INT)
     0008 09rr                      1- 2640     	BTRSS	_PORTAbits,2
                                    1- 2641     	MGOTO	_02347_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2642     	.line	866, "main.c"; 	i2c_start();
                                    1- 2643     	MCALL	_i2c_start
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2644     	.line	868, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2645     	BANKSEL	r0x101F
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2646     	MOVR	r0x101F,W
                                    1- 2647     	MCALL	_i2c_writeByte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2648     	BANKSEL	r0x101F
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2649     	MOVAR	r0x101F
     0010 01rr                      1- 2650     	MOVR	r0x101F,W
     0011 0D03                      1- 2651     	BTRSC	STATUS,2
                                    1- 2652     	MGOTO	_02341_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2653     	.line	870, "main.c"; 	i2c_stop();
                                    1- 2654     	MCALL	_i2c_stop
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2655     	.line	871, "main.c"; 	return FALSE;
     0014 2100                      1- 2656     	MOVIA	0x00
                                    1- 2657     	MGOTO	_02348_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2658     _02341_DS_:
                                    1- 2659     	.line	874, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2660     	BANKSEL	r0x1020
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 2661     	MOVR	r0x1020,W
                                    1- 2662     	MCALL	_i2c_writeByte
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2663     	BANKSEL	r0x101F
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2664     	MOVAR	r0x101F
     001B 01rr                      1- 2665     	MOVR	r0x101F,W
     001C 0D03                      1- 2666     	BTRSC	STATUS,2
                                    1- 2667     	MGOTO	_02343_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2668     	.line	876, "main.c"; 	i2c_stop();
                                    1- 2669     	MCALL	_i2c_stop
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2670     	.line	877, "main.c"; 	return FALSE;
     001F 2100                      1- 2671     	MOVIA	0x00
                                    1- 2672     	MGOTO	_02348_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2673     _02343_DS_:
                                    1- 2674     	.line	880, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 2675     	BANKSEL	r0x1021
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 2676     	MOVR	r0x1021,W
                                    1- 2677     	MCALL	_i2c_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2678     	BANKSEL	r0x101F
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2679     	MOVAR	r0x101F
     0026 01rr                      1- 2680     	MOVR	r0x101F,W
     0027 0D03                      1- 2681     	BTRSC	STATUS,2
                                    1- 2682     	MGOTO	_02345_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2683     	.line	882, "main.c"; 	i2c_stop();
                                    1- 2684     	MCALL	_i2c_stop
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2685     	.line	883, "main.c"; 	return FALSE;
     002A 2100                      1- 2686     	MOVIA	0x00
                                    1- 2687     	MGOTO	_02348_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 2688     _02345_DS_:
                                    1- 2689     	.line	886, "main.c"; 	i2c_stop();
                                    1- 2690     	MCALL	_i2c_stop
     002C 2rrr                      3-   65 m1      LCALL rom_address
     002D                           1- 2691     _02347_DS_:
                                    1- 2692     	.line	889, "main.c"; 	return TRUE;
     002D 2101                      1- 2693     	MOVIA	0x01
     002E                           1- 2694     _02348_DS_:
                                    1- 2695     	.line	890, "main.c"; 	}
                                    1- 2696     	RETURN	
     002E 0010                      3-   39 m1      ret
                                    1- 2697     ; exit point of _ip53xs_writeByte
                                    1- 2699     ;***
                                    1- 2700     ;  pBlock Stats: dbName = C
                                    1- 2701     ;***
                                    1- 2702     ;has an exit
                                    1- 2703     ;functions called:
                                    1- 2704     ;   __dly_us
                                    1- 2705     ;   __dly_us
                                    1- 2706     ;   __dly_us
                                    1- 2707     ;   __dly_us
                                    1- 2708     ;3 compiler assigned registers:
                                    1- 2709     ;   r0x101B
                                    1- 2710     ;   r0x101C
                                    1- 2711     ;   r0x101D
                                    1- 2712     ;; Starting pCode block
                                    1- 2713     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2715     ;local variable name mapping:
     0000                           1- 2718     _i2c_readByte:
                                    1- 2719     ; 2 exit points
                                    1- 2720     	.line	836, "main.c"; 	unsigned char readByte = 0;
                                    1- 2721     	BANKSEL	r0x101B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2722     	CLRR	r0x101B
                                    1- 2723     	.line	838, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Err                      1- 2724     	BCR	_PORTAbits,4
                                    1- 2725     	.line	839, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2726     	IOSTR	_IOSTA
                                    1- 2727     	BANKSEL	r0x101C
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2728     	MOVAR	r0x101C
     0006 19rr                      1- 2729     	BSR	r0x101C,3
     0007 01rr                      1- 2730     	MOVR	r0x101C,W
     0008 000r                      1- 2731     	IOST	_IOSTA
                                    1- 2732     	.line	841, "main.c"; 	while (i--)
     0009 2108                      1- 2733     	MOVIA	0x08
     000A 00rr                      1- 2734     	MOVAR	r0x101C
     000B                           1- 2735     _02333_DS_:
                                    1- 2736     	BANKSEL	r0x101C
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2737     	MOVR	r0x101C,W
                                    1- 2738     	BANKSEL	r0x101D
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2739     	MOVAR	r0x101D
                                    1- 2740     	BANKSEL	r0x101C
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2741     	DECR	r0x101C,F
                                    1- 2742     	BANKSEL	r0x101D
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2743     	MOVR	r0x101D,W
     0013 0D03                      1- 2744     	BTRSC	STATUS,2
                                    1- 2745     	MGOTO	_02335_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2746     	.line	844, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 1Arr                      1- 2747     	BSR	_PORTAbits,4
                                    1- 2748     	.line	845, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2749     	MOVIA	0x00
                                    1- 2750     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2751     	.line	846, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2752     	BCR	STATUS,0
                                    1- 2753     	BANKSEL	r0x101B
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2754     	RLR	r0x101B,F
                                    1- 2755     	.line	848, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2756     	BTRSC	_PORTAbits,3
                                    1- 2757     	.line	850, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2758     	BSR	r0x101B,0
                                    1- 2759     	.line	853, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Err                      1- 2760     	BCR	_PORTAbits,4
                                    1- 2761     	.line	854, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2762     	MOVIA	0x00
                                    1- 2763     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2764     	MGOTO	_02333_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2765     _02335_DS_:
                                    1- 2766     	.line	858, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2767     	IOSTR	_IOSTA
                                    1- 2768     	BANKSEL	r0x101C
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2769     	MOVAR	r0x101C
     0024 1Drr                      1- 2770     	BCR	r0x101C,3
     0025 01rr                      1- 2771     	MOVR	r0x101C,W
     0026 000r                      1- 2772     	IOST	_IOSTA
                                    1- 2773     	.line	859, "main.c"; 	return readByte;  // 返回数据
                                    1- 2774     	BANKSEL	r0x101B
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2775     	MOVR	r0x101B,W
                                    1- 2776     	.line	860, "main.c"; 	}
                                    1- 2777     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2778     ; exit point of _i2c_readByte
                                    1- 2780     ;***
                                    1- 2781     ;  pBlock Stats: dbName = C
                                    1- 2782     ;***
                                    1- 2783     ;has an exit
                                    1- 2784     ;functions called:
                                    1- 2785     ;   __dly_us
                                    1- 2786     ;   __dly_us
                                    1- 2787     ;   _i2c_chk_ack
                                    1- 2788     ;   __dly_us
                                    1- 2789     ;   __dly_us
                                    1- 2790     ;   _i2c_chk_ack
                                    1- 2791     ;3 compiler assigned registers:
                                    1- 2792     ;   r0x101C
                                    1- 2793     ;   r0x101D
                                    1- 2794     ;   r0x101E
                                    1- 2795     ;; Starting pCode block
                                    1- 2796     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2798     ;local variable name mapping:
     0000                           1- 2801     _i2c_writeByte:
                                    1- 2802     ; 2 exit points
                                    1- 2803     	.line	808, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2804     	BANKSEL	r0x101C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2805     	MOVAR	r0x101C
                                    1- 2806     	.line	812, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2807     	MOVIA	0x08
                                    1- 2808     	BANKSEL	r0x101D
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2809     	MOVAR	r0x101D
     0005                           1- 2810     _02324_DS_:
                                    1- 2811     	BANKSEL	r0x101D
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2812     	MOVR	r0x101D,W
                                    1- 2813     	BANKSEL	r0x101E
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2814     	MOVAR	r0x101E
                                    1- 2815     	BANKSEL	r0x101D
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2816     	DECR	r0x101D,F
                                    1- 2817     	BANKSEL	r0x101E
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2818     	MOVR	r0x101E,W
     000D 0D03                      1- 2819     	BTRSC	STATUS,2
                                    1- 2820     	MGOTO	_02326_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2821     	.line	814, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Err                      1- 2822     	BCR	_PORTAbits,4
                                    1- 2823     	.line	815, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2824     	MOVIA	0x00
                                    1- 2825     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2826     	.line	816, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2827     	BANKSEL	r0x101C
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2828     	BTRSS	r0x101C,7
                                    1- 2829     	MGOTO	_02322_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2830     	.line	818, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2831     	BSR	_PORTAbits,3
                                    1- 2832     	MGOTO	_02323_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2833     _02322_DS_:
                                    1- 2834     	.line	822, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2835     	BCR	_PORTAbits,3
     0018                           1- 2836     _02323_DS_:
                                    1- 2837     	.line	824, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2838     	BCR	STATUS,0
                                    1- 2839     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2840     	RLR	r0x101C,F
                                    1- 2841     	.line	825, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 1Arr                      1- 2842     	BSR	_PORTAbits,4
                                    1- 2843     	.line	826, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2844     	MOVIA	0x00
                                    1- 2845     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2846     	.line	827, "main.c"; 	NOP();
     001E 0000                      1- 2847     	nop
                                    1- 2848     	MGOTO	_02324_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2849     _02326_DS_:
                                    1- 2850     	.line	830, "main.c"; 	return i2c_chk_ack();
                                    1- 2851     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2852     	BANKSEL	r0x101C
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2853     	MOVAR	r0x101C
                                    1- 2854     	.line	831, "main.c"; 	}
                                    1- 2855     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2856     ; exit point of _i2c_writeByte
                                    1- 2858     ;***
                                    1- 2859     ;  pBlock Stats: dbName = C
                                    1- 2860     ;***
                                    1- 2861     ;has an exit
                                    1- 2862     ;functions called:
                                    1- 2863     ;   __dly_us
                                    1- 2864     ;   __dly_us
                                    1- 2865     ;   __dly_us
                                    1- 2866     ;   __dly_us
                                    1- 2867     ;; Starting pCode block
                                    1- 2868     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2870     _i2c_send_nack:
                                    1- 2871     ; 2 exit points
                                    1- 2872     	.line	799, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2873     	BCR	_PORTAbits,4
                                    1- 2874     	.line	800, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2875     	BSR	_PORTAbits,3
                                    1- 2876     	.line	801, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2877     	MOVIA	0x0a
                                    1- 2878     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2879     	.line	802, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2880     	BSR	_PORTAbits,4
                                    1- 2881     	.line	803, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2882     	MOVIA	0x0a
                                    1- 2883     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2884     	.line	804, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2885     	BCR	_PORTAbits,4
                                    1- 2886     	.line	805, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2887     	BCR	_PORTAbits,3
                                    1- 2888     	.line	806, "main.c"; 	}
                                    1- 2889     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2890     ; exit point of _i2c_send_nack
                                    1- 2892     ;***
                                    1- 2893     ;  pBlock Stats: dbName = C
                                    1- 2894     ;***
                                    1- 2895     ;has an exit
                                    1- 2896     ;functions called:
                                    1- 2897     ;   __dly_us
                                    1- 2898     ;   __dly_us
                                    1- 2899     ;   __dly_us
                                    1- 2900     ;   __dly_us
                                    1- 2901     ;; Starting pCode block
                                    1- 2902     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2904     _i2c_send_ack:
                                    1- 2905     ; 2 exit points
                                    1- 2906     	.line	788, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2907     	BCR	_PORTAbits,4
                                    1- 2908     	.line	789, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2909     	BCR	_PORTAbits,3
                                    1- 2910     	.line	790, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2911     	MOVIA	0x0a
                                    1- 2912     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2913     	.line	791, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2914     	BSR	_PORTAbits,4
                                    1- 2915     	.line	792, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2916     	MOVIA	0x0a
                                    1- 2917     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2918     	.line	793, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2919     	BCR	_PORTAbits,4
                                    1- 2920     	.line	794, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2921     	BCR	_PORTAbits,3
                                    1- 2922     	.line	795, "main.c"; 	}
                                    1- 2923     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2924     ; exit point of _i2c_send_ack
                                    1- 2926     ;***
                                    1- 2927     ;  pBlock Stats: dbName = C
                                    1- 2928     ;***
                                    1- 2929     ;has an exit
                                    1- 2930     ;functions called:
                                    1- 2931     ;   __dly_us
                                    1- 2932     ;   __dly_us
                                    1- 2933     ;   __dly_us
                                    1- 2934     ;   __dly_us
                                    1- 2935     ;1 compiler assigned register :
                                    1- 2936     ;   r0x101B
                                    1- 2937     ;; Starting pCode block
                                    1- 2938     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2940     ;local variable name mapping:
     0000                           1- 2942     _i2c_chk_ack:
                                    1- 2943     ; 2 exit points
                                    1- 2944     	.line	765, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Err                      1- 2945     	BCR	_PORTAbits,4
                                    1- 2946     	.line	766, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2947     	IOSTR	_IOSTA
                                    1- 2948     	BANKSEL	r0x101B
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2949     	MOVAR	r0x101B
     0004 19rr                      1- 2950     	BSR	r0x101B,3
     0005 01rr                      1- 2951     	MOVR	r0x101B,W
     0006 000r                      1- 2952     	IOST	_IOSTA
                                    1- 2953     	.line	768, "main.c"; 	_dly_us(0);
     0007 2100                      1- 2954     	MOVIA	0x00
                                    1- 2955     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2956     	.line	769, "main.c"; 	P_I2C_SCL_SET;
     0009 1Arr                      1- 2957     	BSR	_PORTAbits,4
                                    1- 2958     	.line	770, "main.c"; 	_dly_us(0);
     000A 2100                      1- 2959     	MOVIA	0x00
                                    1- 2960     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2961     	.line	771, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 2962     	MOVIA	0xfa
                                    1- 2963     	BANKSEL	r0x101B
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2964     	MOVAR	r0x101B
     000F                           1- 2965     _02305_DS_:
     000F 09rr                      1- 2966     	BTRSS	_PORTAbits,3
                                    1- 2967     	MGOTO	_02307_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2968     	.line	773, "main.c"; 	--getAckTime;
                                    1- 2969     	BANKSEL	r0x101B
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 2970     	DECRSZ	r0x101B,F
                                    1- 2971     	.line	775, "main.c"; 	if (0 == getAckTime)
                                    1- 2972     	MGOTO	_02305_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2973     	.line	777, "main.c"; 	return 1;
     0014 2101                      1- 2974     	MOVIA	0x01
                                    1- 2975     	MGOTO	_02308_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2976     _02307_DS_:
                                    1- 2977     	.line	781, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Err                      1- 2978     	BCR	_PORTAbits,4
                                    1- 2979     	.line	782, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 2980     	IOSTR	_IOSTA
                                    1- 2981     	BANKSEL	r0x101B
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2982     	MOVAR	r0x101B
     001A 1Drr                      1- 2983     	BCR	r0x101B,3
     001B 01rr                      1- 2984     	MOVR	r0x101B,W
     001C 000r                      1- 2985     	IOST	_IOSTA
                                    1- 2986     	.line	783, "main.c"; 	return 0;
     001D 2100                      1- 2987     	MOVIA	0x00
     001E                           1- 2988     _02308_DS_:
                                    1- 2989     	.line	784, "main.c"; 	}
                                    1- 2990     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 2991     ; exit point of _i2c_chk_ack
                                    1- 2993     ;***
                                    1- 2994     ;  pBlock Stats: dbName = C
                                    1- 2995     ;***
                                    1- 2996     ;has an exit
                                    1- 2997     ;functions called:
                                    1- 2998     ;   __dly_us
                                    1- 2999     ;   __dly_us
                                    1- 3000     ;   __dly_us
                                    1- 3001     ;   __dly_us
                                    1- 3002     ;; Starting pCode block
                                    1- 3003     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 3005     _i2c_stop:
                                    1- 3006     ; 2 exit points
                                    1- 3007     	.line	753, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 3008     	BCR	_PORTAbits,4
                                    1- 3009     	.line	754, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 3010     	BCR	_PORTAbits,3
                                    1- 3011     	.line	755, "main.c"; 	_dly_us(10);
     0002 210A                      1- 3012     	MOVIA	0x0a
                                    1- 3013     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3014     	.line	756, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 3015     	BSR	_PORTAbits,4
                                    1- 3016     	.line	757, "main.c"; 	_dly_us(10);
     0005 210A                      1- 3017     	MOVIA	0x0a
                                    1- 3018     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3019     	.line	758, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 3020     	BSR	_PORTAbits,3
                                    1- 3021     	.line	759, "main.c"; 	}
                                    1- 3022     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3023     ; exit point of _i2c_stop
                                    1- 3025     ;***
                                    1- 3026     ;  pBlock Stats: dbName = C
                                    1- 3027     ;***
                                    1- 3028     ;has an exit
                                    1- 3029     ;functions called:
                                    1- 3030     ;   __dly_us
                                    1- 3031     ;   __dly_us
                                    1- 3032     ;   __dly_us
                                    1- 3033     ;   __dly_us
                                    1- 3034     ;1 compiler assigned register :
                                    1- 3035     ;   r0x101B
                                    1- 3036     ;; Starting pCode block
                                    1- 3037     .segment "code"; module=main, function=_i2c_start
     0000                           1- 3039     _i2c_start:
                                    1- 3040     ; 2 exit points
                                    1- 3041     	.line	740, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 3042     	BSR	_PORTAbits,3
                                    1- 3043     	.line	741, "main.c"; 	P_I2C_SCL_SET;
     0001 1Arr                      1- 3044     	BSR	_PORTAbits,4
                                    1- 3045     	.line	742, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 3046     	IOSTR	_IOSTA
                                    1- 3047     	BANKSEL	r0x101B
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 3048     	MOVAR	r0x101B
     0005 1Drr                      1- 3049     	BCR	r0x101B,3
     0006 01rr                      1- 3050     	MOVR	r0x101B,W
     0007 000r                      1- 3051     	IOST	_IOSTA
                                    1- 3052     	.line	743, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 3053     	IOSTR	_IOSTA
     0009 00rr                      1- 3054     	MOVAR	r0x101B
     000A 1Err                      1- 3055     	BCR	r0x101B,4
     000B 01rr                      1- 3056     	MOVR	r0x101B,W
     000C 000r                      1- 3057     	IOST	_IOSTA
                                    1- 3058     	.line	744, "main.c"; 	_dly_us(10);
     000D 210A                      1- 3059     	MOVIA	0x0a
                                    1- 3060     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3061     	.line	745, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 3062     	BCR	_PORTAbits,3
                                    1- 3063     	.line	746, "main.c"; 	_dly_us(10);
     0010 210A                      1- 3064     	MOVIA	0x0a
                                    1- 3065     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3066     	.line	747, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Err                      1- 3067     	BCR	_PORTAbits,4
                                    1- 3068     	.line	748, "main.c"; 	}
                                    1- 3069     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 3070     ; exit point of _i2c_start
                                    1- 3072     ;***
                                    1- 3073     ;  pBlock Stats: dbName = C
                                    1- 3074     ;***
                                    1- 3075     ;has an exit
                                    1- 3076     ;functions called:
                                    1- 3077     ;   __dly_us
                                    1- 3078     ;   __dly_us
                                    1- 3079     ;1 compiler assigned register :
                                    1- 3080     ;   r0x101B
                                    1- 3081     ;; Starting pCode block
                                    1- 3082     .segment "code"; module=main, function=_gpioKeyScan
     0000                           1- 3084     _gpioKeyScan:
                                    1- 3085     ; 2 exit points
                                    1- 3086     	.line	610, "main.c"; 	P_KEY_INPUT;
     0000 001r                      1- 3087     	IOSTR	_IOSTB
                                    1- 3088     	BANKSEL	r0x101B
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3089     	MOVAR	r0x101B
     0003 18rr                      1- 3090     	BSR	r0x101B,0
     0004 01rr                      1- 3091     	MOVR	r0x101B,W
     0005 000r                      1- 3092     	IOST	_IOSTB
                                    1- 3093     	.line	611, "main.c"; 	_dly_us(5);
     0006 2105                      1- 3094     	MOVIA	0x05
                                    1- 3095     	MCALL	__dly_us
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3096     	.line	612, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 3097     	BANKSEL	_gpioKeyWaitTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 01rr                      1- 3098     	MOVR	_gpioKeyWaitTimer,W
     000A 0D03                      1- 3099     	BTRSC	STATUS,2
                                    1- 3100     	MGOTO	_02214_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3101     	.line	614, "main.c"; 	gpioKeyWaitTimer--;
     000C 01rr                      1- 3102     	MOVR	_gpioKeyWaitTimer,W
                                    1- 3103     	BANKSEL	r0x101B
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 3104     	MOVAR	r0x101B
     000F 06rr                      1- 3105     	DECR	r0x101B,W
                                    1- 3106     	BANKSEL	_gpioKeyWaitTimer
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 3107     	MOVAR	_gpioKeyWaitTimer
     0012                           1- 3108     _02214_DS_:
                                    1- 3109     	.line	617, "main.c"; 	indexKey = 0;
                                    1- 3110     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Drr                      1- 3111     	BCR	_vFlag_1,2
                                    1- 3112     	.line	619, "main.c"; 	if (P_KEY)
     0014 08rr                      1- 3113     	BTRSS	_PORTBbits,0
                                    1- 3114     	MGOTO	_02216_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3115     	.line	621, "main.c"; 	indexKey = 1;
     0016 19rr                      1- 3116     	BSR	_vFlag_1,2
                                    1- 3117     	.line	622, "main.c"; 	P_KEY_IPS_SET;
     0017 18rr                      1- 3118     	BSR	_PORTBbits,1
                                    1- 3119     	.line	623, "main.c"; 	P_KEY_IPS_INPUT;
     0018 001r                      1- 3120     	IOSTR	_IOSTB
                                    1- 3121     	BANKSEL	r0x101B
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 3122     	MOVAR	r0x101B
     001B 18rr                      1- 3123     	BSR	r0x101B,1
     001C 01rr                      1- 3124     	MOVR	r0x101B,W
     001D 000r                      1- 3125     	IOST	_IOSTB
     001E                           1- 3126     _02216_DS_:
                                    1- 3127     	.line	626, "main.c"; 	switch (gpioKeyState)
                                    1- 3128     	BANKSEL	_gpioKeyState
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 01rr                      1- 3129     	MOVR	_gpioKeyState,W
     0020 0D03                      1- 3130     	BTRSC	STATUS,2
                                    1- 3131     	MGOTO	_02217_DS_
     0021 3rrr                      3-   62 m1      LGOTO rom_address
     0022 01rr                      1- 3132     	MOVR	_gpioKeyState,W
     0023 2401                      1- 3133     	XORIA	0x01
     0024 0D03                      1- 3134     	BTRSC	STATUS,2
                                    1- 3135     	MGOTO	_02220_DS_
     0025 3rrr                      3-   62 m1      LGOTO rom_address
     0026 01rr                      1- 3136     	MOVR	_gpioKeyState,W
     0027 2402                      1- 3137     	XORIA	0x02
     0028 0D03                      1- 3138     	BTRSC	STATUS,2
                                    1- 3139     	MGOTO	_02226_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A 01rr                      1- 3140     	MOVR	_gpioKeyState,W
     002B 2403                      1- 3141     	XORIA	0x03
     002C 0D03                      1- 3142     	BTRSC	STATUS,2
                                    1- 3143     	MGOTO	_02232_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3144     	MGOTO	_02235_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
     002F                           1- 3145     _02217_DS_:
                                    1- 3146     	.line	629, "main.c"; 	if (indexKey)
                                    1- 3147     	BANKSEL	_vFlag_1
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 09rr                      1- 3148     	BTRSS	_vFlag_1,2
                                    1- 3149     	MGOTO	_02219_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3150     	.line	632, "main.c"; 	return MSG_NONE;
     0032 2100                      1- 3151     	MOVIA	0x00
                                    1- 3152     	MGOTO	_02237_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
     0034                           1- 3153     _02219_DS_:
                                    1- 3154     	.line	637, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME; // gSysTick_current;
     0034 2103                      1- 3155     	MOVIA	0x03
                                    1- 3156     	BANKSEL	_gpioKeyWaitTimer
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 3157     	MOVAR	_gpioKeyWaitTimer
                                    1- 3158     	.line	640, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0037 2101                      1- 3159     	MOVIA	0x01
                                    1- 3160     	BANKSEL	_gpioKeyState
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 00rr                      1- 3161     	MOVAR	_gpioKeyState
     003A                           1- 3162     _02220_DS_:
                                    1- 3163     	.line	643, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3164     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 09rr                      1- 3165     	BTRSS	_vFlag_1,2
                                    1- 3166     	MGOTO	_02224_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3167     	.line	647, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3168     	BANKSEL	_gpioKeyState
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1- 3169     	CLRR	_gpioKeyState
                                    1- 3170     	MGOTO	_02236_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 3171     _02224_DS_:
                                    1- 3172     	.line	650, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_JTTER_TIME)
                                    1- 3173     	BANKSEL	_gpioKeyWaitTimer
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 3174     	MOVR	_gpioKeyWaitTimer,W
     0042 0903                      1- 3175     	BTRSS	STATUS,2
                                    1- 3176     	MGOTO	_02236_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3177     	.line	657, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME; // gSysTick_current;
     0044 2196                      1- 3178     	MOVIA	0x96
     0045 00rr                      1- 3179     	MOVAR	_gpioKeyWaitTimer
                                    1- 3180     	.line	658, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     0046 2102                      1- 3181     	MOVIA	0x02
                                    1- 3182     	BANKSEL	_gpioKeyState
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 3183     	MOVAR	_gpioKeyState
                                    1- 3184     	.line	659, "main.c"; 	P_KEY_IPS_CLR;
     0049 1Crr                      1- 3185     	BCR	_PORTBbits,1
                                    1- 3186     	.line	660, "main.c"; 	P_KEY_IPS_OUTPUT;
     004A 001r                      1- 3187     	IOSTR	_IOSTB
                                    1- 3188     	BANKSEL	r0x101B
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 00rr                      1- 3189     	MOVAR	r0x101B
     004D 1Crr                      1- 3190     	BCR	r0x101B,1
     004E 01rr                      1- 3191     	MOVR	r0x101B,W
     004F 000r                      1- 3192     	IOST	_IOSTB
                                    1- 3193     	.line	664, "main.c"; 	break;
                                    1- 3194     	MGOTO	_02236_DS_
     0050 3rrr                      3-   62 m1      LGOTO rom_address
     0051                           1- 3195     _02226_DS_:
                                    1- 3196     	.line	667, "main.c"; 	if (indexKey)               // if(PreKeyIndex != indexKey)
                                    1- 3197     	BANKSEL	_vFlag_1
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 09rr                      1- 3198     	BTRSS	_vFlag_1,2
                                    1- 3199     	MGOTO	_02230_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3200     	.line	672, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3201     	BANKSEL	_gpioKeyState
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 02rr                      1- 3202     	CLRR	_gpioKeyState
                                    1- 3203     	.line	674, "main.c"; 	return MSG_MODE; // GpioKeyEvent[PreKeyIndex][1]; //SPR
     0056 2121                      1- 3204     	MOVIA	0x21
                                    1- 3205     	MGOTO	_02237_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
     0058                           1- 3206     _02230_DS_:
                                    1- 3207     	.line	677, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_CP_TIME)
                                    1- 3208     	BANKSEL	_gpioKeyWaitTimer
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 01rr                      1- 3209     	MOVR	_gpioKeyWaitTimer,W
     005A 0903                      1- 3210     	BTRSS	STATUS,2
                                    1- 3211     	MGOTO	_02236_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3212     	.line	685, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     005C 2103                      1- 3213     	MOVIA	0x03
                                    1- 3214     	BANKSEL	_gpioKeyState
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 00rr                      1- 3215     	MOVAR	_gpioKeyState
                                    1- 3216     	.line	700, "main.c"; 	return MSG_POWER_ON; // GpioKeyEvent[PreKeyIndex][2];  //CPS
     005F 2141                      1- 3217     	MOVIA	0x41
                                    1- 3218     	MGOTO	_02237_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
     0061                           1- 3219     _02232_DS_:
                                    1- 3220     	.line	706, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3221     	BANKSEL	_vFlag_1
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 09rr                      1- 3222     	BTRSS	_vFlag_1,2
                                    1- 3223     	MGOTO	_02236_DS_
     0063 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3224     	.line	712, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3225     	BANKSEL	_gpioKeyState
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 02rr                      1- 3226     	CLRR	_gpioKeyState
                                    1- 3227     	.line	726, "main.c"; 	break;
                                    1- 3228     	MGOTO	_02236_DS_
     0066 3rrr                      3-   62 m1      LGOTO rom_address
     0067                           1- 3229     _02235_DS_:
                                    1- 3230     	.line	729, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3231     	BANKSEL	_gpioKeyState
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 02rr                      1- 3232     	CLRR	_gpioKeyState
     0069                           1- 3233     _02236_DS_:
                                    1- 3234     	.line	733, "main.c"; 	return MSG_NONE;
     0069 2100                      1- 3235     	MOVIA	0x00
     006A                           1- 3236     _02237_DS_:
                                    1- 3237     	.line	734, "main.c"; 	}
                                    1- 3238     	RETURN	
     006A 0010                      3-   39 m1      ret
                                    1- 3239     ; exit point of _gpioKeyScan
                                    1- 3241     ;***
                                    1- 3242     ;  pBlock Stats: dbName = C
                                    1- 3243     ;***
                                    1- 3244     ;has an exit
                                    1- 3245     ;2 compiler assigned registers:
                                    1- 3246     ;   r0x1031
                                    1- 3247     ;   r0x1032
                                    1- 3248     ;; Starting pCode block
                                    1- 3249     .segment "code"; module=main, function=_io_uart_tx
                                    1- 3251     ;local variable name mapping:
     0000                           1- 3254     _io_uart_tx:
                                    1- 3255     ; 2 exit points
                                    1- 3256     	.line	554, "main.c"; 	void io_uart_tx(unsigned char sendByte)
                                    1- 3257     	BANKSEL	r0x1031
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3258     	MOVAR	r0x1031
                                    1- 3259     	.line	560, "main.c"; 	DISI(); // GIE = 0;
     0002 0013                      1- 3260     	DISI
                                    1- 3261     	.line	561, "main.c"; 	P_IO_UART_TX_OUTPUT;
     0003 001r                      1- 3262     	IOSTR	_IOSTB
                                    1- 3263     	BANKSEL	r0x1032
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 3264     	MOVAR	r0x1032
     0006 1Crr                      1- 3265     	BCR	r0x1032,0
     0007 01rr                      1- 3266     	MOVR	r0x1032,W
     0008 000r                      1- 3267     	IOST	_IOSTB
                                    1- 3268     	.line	562, "main.c"; 	P_IO_UART_TX_CLR; // 输出高
     0009 1Crr                      1- 3269     	BCR	_PORTBbits,0
                                    1- 3270     	.line	563, "main.c"; 	NOP();
     000A 0000                      1- 3271     	nop
                                    1- 3272     	.line	564, "main.c"; 	NOP();
     000B 0000                      1- 3273     	nop
                                    1- 3274     	.line	565, "main.c"; 	NOP();
     000C 0000                      1- 3275     	nop
                                    1- 3276     	.line	566, "main.c"; 	NOP();
     000D 0000                      1- 3277     	nop
                                    1- 3278     	.line	567, "main.c"; 	NOP();
     000E 0000                      1- 3279     	nop
                                    1- 3280     	.line	568, "main.c"; 	NOP();
     000F 0000                      1- 3281     	nop
                                    1- 3282     	.line	569, "main.c"; 	NOP();
     0010 0000                      1- 3283     	nop
                                    1- 3284     	.line	570, "main.c"; 	NOP();
     0011 0000                      1- 3285     	nop
                                    1- 3286     	.line	571, "main.c"; 	NOP();
     0012 0000                      1- 3287     	nop
                                    1- 3288     	.line	573, "main.c"; 	while (bCount)
     0013 2108                      1- 3289     	MOVIA	0x08
                                    1- 3290     	BANKSEL	r0x1032
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 3291     	MOVAR	r0x1032
     0016                           1- 3292     _02206_DS_:
                                    1- 3293     	BANKSEL	r0x1032
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 3294     	MOVR	r0x1032,W
     0018 0D03                      1- 3295     	BTRSC	STATUS,2
                                    1- 3296     	MGOTO	_02208_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3297     	.line	575, "main.c"; 	if (sendByte & 0x01)
                                    1- 3298     	BANKSEL	r0x1031
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 08rr                      1- 3299     	BTRSS	r0x1031,0
                                    1- 3300     	MGOTO	_02204_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3301     	.line	577, "main.c"; 	P_IO_UART_TX_SET; // 输出高
     001D 18rr                      1- 3302     	BSR	_PORTBbits,0
                                    1- 3303     	.line	578, "main.c"; 	NOP();
     001E 0000                      1- 3304     	nop
                                    1- 3305     	.line	579, "main.c"; 	NOP();
     001F 0000                      1- 3306     	nop
                                    1- 3307     	MGOTO	_02205_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 3308     _02204_DS_:
                                    1- 3309     	.line	583, "main.c"; 	P_IO_UART_TX_CLR; // 输出低
     0021 1Crr                      1- 3310     	BCR	_PORTBbits,0
                                    1- 3311     	.line	584, "main.c"; 	NOP();
     0022 0000                      1- 3312     	nop
                                    1- 3313     	.line	585, "main.c"; 	NOP();
     0023 0000                      1- 3314     	nop
                                    1- 3315     	.line	586, "main.c"; 	NOP();
     0024 0000                      1- 3316     	nop
                                    1- 3317     	.line	587, "main.c"; 	NOP();
     0025 0000                      1- 3318     	nop
                                    1- 3319     	.line	588, "main.c"; 	NOP();
     0026 0000                      1- 3320     	nop
     0027                           1- 3321     _02205_DS_:
                                    1- 3322     	.line	590, "main.c"; 	bCount--;
                                    1- 3323     	BANKSEL	r0x1032
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 06rr                      1- 3324     	DECR	r0x1032,F
                                    1- 3325     	.line	591, "main.c"; 	sendByte >>= 1;
     0029 1C03                      1- 3326     	BCR	STATUS,0
                                    1- 3327     	BANKSEL	r0x1031
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 13rr                      1- 3328     	RRR	r0x1031,F
                                    1- 3329     	MGOTO	_02206_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 3330     _02208_DS_:
                                    1- 3331     	.line	594, "main.c"; 	NOP();
     002D 0000                      1- 3332     	nop
                                    1- 3333     	.line	595, "main.c"; 	P_IO_UART_TX_SET; // 输出高
     002E 18rr                      1- 3334     	BSR	_PORTBbits,0
                                    1- 3335     	.line	596, "main.c"; 	NOP();
     002F 0000                      1- 3336     	nop
                                    1- 3337     	.line	597, "main.c"; 	NOP();
     0030 0000                      1- 3338     	nop
                                    1- 3339     	.line	598, "main.c"; 	NOP();
     0031 0000                      1- 3340     	nop
                                    1- 3341     	.line	599, "main.c"; 	NOP();
     0032 0000                      1- 3342     	nop
                                    1- 3343     	.line	600, "main.c"; 	NOP();
     0033 0000                      1- 3344     	nop
                                    1- 3345     	.line	601, "main.c"; 	NOP();
     0034 0000                      1- 3346     	nop
                                    1- 3347     	.line	602, "main.c"; 	NOP();
     0035 0000                      1- 3348     	nop
                                    1- 3349     	.line	603, "main.c"; 	NOP();
     0036 0000                      1- 3350     	nop
                                    1- 3351     	.line	604, "main.c"; 	NOP();
     0037 0000                      1- 3352     	nop
                                    1- 3353     	.line	605, "main.c"; 	ENI(); // GIE = 1;
     0038 0004                      1- 3354     	ENI
                                    1- 3355     	.line	606, "main.c"; 	}
                                    1- 3356     	RETURN	
     0039 0010                      3-   39 m1      ret
                                    1- 3357     ; exit point of _io_uart_tx
                                    1- 3359     ;***
                                    1- 3360     ;  pBlock Stats: dbName = C
                                    1- 3361     ;***
                                    1- 3362     ;1 compiler assigned register :
                                    1- 3363     ;   r0x1033
                                    1- 3364     ;; Starting pCode block
                                    1- 3365     .segment "code"; module=main, function=_io_led_scan
                                    1- 3367     ;local variable name mapping:
     0000                           1- 3369     _io_led_scan:
                                    1- 3370     ; 0 exit points
                                    1- 3371     	.line	311, "main.c"; 	P_LED_SEG1_INPUT;
     0000 001r                      1- 3372     	IOSTR	_IOSTB
                                    1- 3373     	BANKSEL	r0x1033
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3374     	MOVAR	r0x1033
     0003 1Arr                      1- 3375     	BSR	r0x1033,5
     0004 01rr                      1- 3376     	MOVR	r0x1033,W
     0005 000r                      1- 3377     	IOST	_IOSTB
                                    1- 3378     	.line	312, "main.c"; 	P_LED_SEG2_INPUT;
     0006 001r                      1- 3379     	IOSTR	_IOSTA
     0007 00rr                      1- 3380     	MOVAR	r0x1033
     0008 18rr                      1- 3381     	BSR	r0x1033,0
     0009 01rr                      1- 3382     	MOVR	r0x1033,W
     000A 000r                      1- 3383     	IOST	_IOSTA
                                    1- 3384     	.line	313, "main.c"; 	P_LED_SEG3_INPUT;
     000B 001r                      1- 3385     	IOSTR	_IOSTA
     000C 00rr                      1- 3386     	MOVAR	r0x1033
     000D 18rr                      1- 3387     	BSR	r0x1033,1
     000E 01rr                      1- 3388     	MOVR	r0x1033,W
     000F 000r                      1- 3389     	IOST	_IOSTA
                                    1- 3390     	.line	314, "main.c"; 	P_LED_SEG4_INPUT;
     0010 001r                      1- 3391     	IOSTR	_IOSTA
     0011 00rr                      1- 3392     	MOVAR	r0x1033
     0012 1Brr                      1- 3393     	BSR	r0x1033,7
     0013 01rr                      1- 3394     	MOVR	r0x1033,W
     0014 000r                      1- 3395     	IOST	_IOSTA
                                    1- 3396     	.line	315, "main.c"; 	P_LED_SEG5_INPUT;
     0015 001r                      1- 3397     	IOSTR	_IOSTA
     0016 00rr                      1- 3398     	MOVAR	r0x1033
     0017 1Brr                      1- 3399     	BSR	r0x1033,6
     0018 01rr                      1- 3400     	MOVR	r0x1033,W
     0019 000r                      1- 3401     	IOST	_IOSTA
                                    1- 3402     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3403     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3404     	.line	317, "main.c"; 	switch (indexScan)
     001A 2112                      1- 3405     	MOVIA	0x12
                                    1- 3406     	BANKSEL	_io_led_scan_indexScan_65536_31
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 04rr                      1- 3407     	SUBAR	_io_led_scan_indexScan_65536_31,W
     001D 0C03                      1- 3408     	BTRSC	STATUS,0
                                    1- 3409     	MGOTO	_02113_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F 21rr                      1- 3410     	MOVIA	((_02198_DS_ >> 8) & 0xff)
     0020 008A                      1- 3411     	MOVAR	PCHBUF
     0021 01rr                      1- 3412     	MOVR	_io_led_scan_indexScan_65536_31,W
     0022 25rr                      1- 3413     	ADDIA	_02198_DS_
     0023 0C03                      1- 3414     	BTRSC	STATUS,0
     0024 058A                      1- 3415     	INCR	PCHBUF,F
     0025 0082                      1- 3416     	MOVAR	PCL
     0026                           1- 3417     _02198_DS_:
                                    1- 3418     	MGOTO	_02058_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3419     	MGOTO	_02061_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3420     	MGOTO	_02064_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3421     	MGOTO	_02067_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3422     	MGOTO	_02070_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3423     	MGOTO	_02073_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3424     	MGOTO	_02076_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3425     	MGOTO	_02079_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3426     	MGOTO	_02082_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3427     	MGOTO	_02085_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3428     	MGOTO	_02088_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3429     	MGOTO	_02091_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3430     	MGOTO	_02094_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3431     	MGOTO	_02097_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3432     	MGOTO	_02100_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3433     	MGOTO	_02103_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3434     	MGOTO	_02106_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3435     	MGOTO	_02109_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 3436     _02058_DS_:
                                    1- 3437     	.line	320, "main.c"; 	if (displayDecade & SEG_A) // 2A
                                    1- 3438     	BANKSEL	_displayDecade
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1- 3439     	BTRSS	_displayDecade,0
                                    1- 3440     	MGOTO	_02113_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3441     	.line	322, "main.c"; 	P_LED_SEG2_SET;
     003B 18rr                      1- 3442     	BSR	_PORTAbits,0
                                    1- 3443     	.line	323, "main.c"; 	P_LED_SEG2_OUTPUT;
     003C 001r                      1- 3444     	IOSTR	_IOSTA
                                    1- 3445     	BANKSEL	r0x1033
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3446     	MOVAR	r0x1033
     003F 1Crr                      1- 3447     	BCR	r0x1033,0
     0040 01rr                      1- 3448     	MOVR	r0x1033,W
     0041 000r                      1- 3449     	IOST	_IOSTA
                                    1- 3450     	.line	324, "main.c"; 	P_LED_SEG3_CLR;
     0042 1Crr                      1- 3451     	BCR	_PORTAbits,1
                                    1- 3452     	.line	325, "main.c"; 	P_LED_SEG3_OUTPUT;
     0043 001r                      1- 3453     	IOSTR	_IOSTA
     0044 00rr                      1- 3454     	MOVAR	r0x1033
     0045 1Crr                      1- 3455     	BCR	r0x1033,1
     0046 01rr                      1- 3456     	MOVR	r0x1033,W
     0047 000r                      1- 3457     	IOST	_IOSTA
                                    1- 3458     	.line	327, "main.c"; 	break;
                                    1- 3459     	MGOTO	_02113_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 3460     _02061_DS_:
                                    1- 3461     	.line	330, "main.c"; 	if (displayDecade & SEG_B) // 2B
                                    1- 3462     	BANKSEL	_displayDecade
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 08rr                      1- 3463     	BTRSS	_displayDecade,1
                                    1- 3464     	MGOTO	_02113_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3465     	.line	332, "main.c"; 	P_LED_SEG3_SET;
     004C 18rr                      1- 3466     	BSR	_PORTAbits,1
                                    1- 3467     	.line	333, "main.c"; 	P_LED_SEG3_OUTPUT;
     004D 001r                      1- 3468     	IOSTR	_IOSTA
                                    1- 3469     	BANKSEL	r0x1033
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 3470     	MOVAR	r0x1033
     0050 1Crr                      1- 3471     	BCR	r0x1033,1
     0051 01rr                      1- 3472     	MOVR	r0x1033,W
     0052 000r                      1- 3473     	IOST	_IOSTA
                                    1- 3474     	.line	334, "main.c"; 	P_LED_SEG2_CLR;
     0053 1Crr                      1- 3475     	BCR	_PORTAbits,0
                                    1- 3476     	.line	335, "main.c"; 	P_LED_SEG2_OUTPUT;
     0054 001r                      1- 3477     	IOSTR	_IOSTA
     0055 00rr                      1- 3478     	MOVAR	r0x1033
     0056 1Crr                      1- 3479     	BCR	r0x1033,0
     0057 01rr                      1- 3480     	MOVR	r0x1033,W
     0058 000r                      1- 3481     	IOST	_IOSTA
                                    1- 3482     	.line	337, "main.c"; 	break;
                                    1- 3483     	MGOTO	_02113_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 3484     _02064_DS_:
                                    1- 3485     	.line	340, "main.c"; 	if (displayDecade & SEG_C) // 2C
                                    1- 3486     	BANKSEL	_displayDecade
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 09rr                      1- 3487     	BTRSS	_displayDecade,2
                                    1- 3488     	MGOTO	_02113_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3489     	.line	342, "main.c"; 	P_LED_SEG4_SET;
     005D 1Brr                      1- 3490     	BSR	_PORTAbits,7
                                    1- 3491     	.line	343, "main.c"; 	P_LED_SEG4_OUTPUT;
     005E 001r                      1- 3492     	IOSTR	_IOSTA
                                    1- 3493     	BANKSEL	r0x1033
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3494     	MOVAR	r0x1033
     0061 1Frr                      1- 3495     	BCR	r0x1033,7
     0062 01rr                      1- 3496     	MOVR	r0x1033,W
     0063 000r                      1- 3497     	IOST	_IOSTA
                                    1- 3498     	.line	344, "main.c"; 	P_LED_SEG3_CLR;
     0064 1Crr                      1- 3499     	BCR	_PORTAbits,1
                                    1- 3500     	.line	345, "main.c"; 	P_LED_SEG3_OUTPUT;
     0065 001r                      1- 3501     	IOSTR	_IOSTA
     0066 00rr                      1- 3502     	MOVAR	r0x1033
     0067 1Crr                      1- 3503     	BCR	r0x1033,1
     0068 01rr                      1- 3504     	MOVR	r0x1033,W
     0069 000r                      1- 3505     	IOST	_IOSTA
                                    1- 3506     	.line	347, "main.c"; 	break;
                                    1- 3507     	MGOTO	_02113_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 3508     _02067_DS_:
                                    1- 3509     	.line	350, "main.c"; 	if (displayDecade & SEG_D) // 2D
                                    1- 3510     	BANKSEL	_displayDecade
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 09rr                      1- 3511     	BTRSS	_displayDecade,3
                                    1- 3512     	MGOTO	_02113_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3513     	.line	352, "main.c"; 	P_LED_SEG4_SET;
     006E 1Brr                      1- 3514     	BSR	_PORTAbits,7
                                    1- 3515     	.line	353, "main.c"; 	P_LED_SEG4_OUTPUT;
     006F 001r                      1- 3516     	IOSTR	_IOSTA
                                    1- 3517     	BANKSEL	r0x1033
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 00rr                      1- 3518     	MOVAR	r0x1033
     0072 1Frr                      1- 3519     	BCR	r0x1033,7
     0073 01rr                      1- 3520     	MOVR	r0x1033,W
     0074 000r                      1- 3521     	IOST	_IOSTA
                                    1- 3522     	.line	354, "main.c"; 	P_LED_SEG2_CLR;
     0075 1Crr                      1- 3523     	BCR	_PORTAbits,0
                                    1- 3524     	.line	355, "main.c"; 	P_LED_SEG2_OUTPUT;
     0076 001r                      1- 3525     	IOSTR	_IOSTA
     0077 00rr                      1- 3526     	MOVAR	r0x1033
     0078 1Crr                      1- 3527     	BCR	r0x1033,0
     0079 01rr                      1- 3528     	MOVR	r0x1033,W
     007A 000r                      1- 3529     	IOST	_IOSTA
                                    1- 3530     	.line	357, "main.c"; 	break;
                                    1- 3531     	MGOTO	_02113_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C                           1- 3532     _02070_DS_:
                                    1- 3533     	.line	360, "main.c"; 	if (displayDecade & SEG_E) // 2E
                                    1- 3534     	BANKSEL	_displayDecade
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 0Arr                      1- 3535     	BTRSS	_displayDecade,4
                                    1- 3536     	MGOTO	_02113_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3537     	.line	362, "main.c"; 	P_LED_SEG5_SET;
     007F 1Brr                      1- 3538     	BSR	_PORTAbits,6
                                    1- 3539     	.line	363, "main.c"; 	P_LED_SEG5_OUTPUT;
     0080 001r                      1- 3540     	IOSTR	_IOSTA
                                    1- 3541     	BANKSEL	r0x1033
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 3542     	MOVAR	r0x1033
     0083 1Frr                      1- 3543     	BCR	r0x1033,6
     0084 01rr                      1- 3544     	MOVR	r0x1033,W
     0085 000r                      1- 3545     	IOST	_IOSTA
                                    1- 3546     	.line	364, "main.c"; 	P_LED_SEG2_CLR;
     0086 1Crr                      1- 3547     	BCR	_PORTAbits,0
                                    1- 3548     	.line	365, "main.c"; 	P_LED_SEG2_OUTPUT;
     0087 001r                      1- 3549     	IOSTR	_IOSTA
     0088 00rr                      1- 3550     	MOVAR	r0x1033
     0089 1Crr                      1- 3551     	BCR	r0x1033,0
     008A 01rr                      1- 3552     	MOVR	r0x1033,W
     008B 000r                      1- 3553     	IOST	_IOSTA
                                    1- 3554     	.line	367, "main.c"; 	break;
                                    1- 3555     	MGOTO	_02113_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1- 3556     _02073_DS_:
                                    1- 3557     	.line	370, "main.c"; 	if (displayDecade & SEG_F) // 2F
                                    1- 3558     	BANKSEL	_displayDecade
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 0Arr                      1- 3559     	BTRSS	_displayDecade,5
                                    1- 3560     	MGOTO	_02113_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3561     	.line	372, "main.c"; 	P_LED_SEG5_SET;
     0090 1Brr                      1- 3562     	BSR	_PORTAbits,6
                                    1- 3563     	.line	373, "main.c"; 	P_LED_SEG5_OUTPUT;
     0091 001r                      1- 3564     	IOSTR	_IOSTA
                                    1- 3565     	BANKSEL	r0x1033
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 3566     	MOVAR	r0x1033
     0094 1Frr                      1- 3567     	BCR	r0x1033,6
     0095 01rr                      1- 3568     	MOVR	r0x1033,W
     0096 000r                      1- 3569     	IOST	_IOSTA
                                    1- 3570     	.line	374, "main.c"; 	P_LED_SEG3_CLR;
     0097 1Crr                      1- 3571     	BCR	_PORTAbits,1
                                    1- 3572     	.line	375, "main.c"; 	P_LED_SEG3_OUTPUT;
     0098 001r                      1- 3573     	IOSTR	_IOSTA
     0099 00rr                      1- 3574     	MOVAR	r0x1033
     009A 1Crr                      1- 3575     	BCR	r0x1033,1
     009B 01rr                      1- 3576     	MOVR	r0x1033,W
     009C 000r                      1- 3577     	IOST	_IOSTA
                                    1- 3578     	.line	377, "main.c"; 	break;
                                    1- 3579     	MGOTO	_02113_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
     009E                           1- 3580     _02076_DS_:
                                    1- 3581     	.line	380, "main.c"; 	if (displayDecade & SEG_G) // 2G
                                    1- 3582     	BANKSEL	_displayDecade
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 0Brr                      1- 3583     	BTRSS	_displayDecade,6
                                    1- 3584     	MGOTO	_02113_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3585     	.line	382, "main.c"; 	P_LED_SEG5_SET;
     00A1 1Brr                      1- 3586     	BSR	_PORTAbits,6
                                    1- 3587     	.line	383, "main.c"; 	P_LED_SEG5_OUTPUT;
     00A2 001r                      1- 3588     	IOSTR	_IOSTA
                                    1- 3589     	BANKSEL	r0x1033
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 00rr                      1- 3590     	MOVAR	r0x1033
     00A5 1Frr                      1- 3591     	BCR	r0x1033,6
     00A6 01rr                      1- 3592     	MOVR	r0x1033,W
     00A7 000r                      1- 3593     	IOST	_IOSTA
                                    1- 3594     	.line	384, "main.c"; 	P_LED_SEG4_CLR;
     00A8 1Frr                      1- 3595     	BCR	_PORTAbits,7
                                    1- 3596     	.line	385, "main.c"; 	P_LED_SEG4_OUTPUT;
     00A9 001r                      1- 3597     	IOSTR	_IOSTA
     00AA 00rr                      1- 3598     	MOVAR	r0x1033
     00AB 1Frr                      1- 3599     	BCR	r0x1033,7
     00AC 01rr                      1- 3600     	MOVR	r0x1033,W
     00AD 000r                      1- 3601     	IOST	_IOSTA
                                    1- 3602     	.line	387, "main.c"; 	break;
                                    1- 3603     	MGOTO	_02113_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 3604     _02079_DS_:
                                    1- 3605     	.line	390, "main.c"; 	if (displayDigit & SEG_A) // 3A
                                    1- 3606     	BANKSEL	_displayDigit
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 08rr                      1- 3607     	BTRSS	_displayDigit,0
                                    1- 3608     	MGOTO	_02113_DS_
     00B1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3609     	.line	392, "main.c"; 	P_LED_SEG1_SET;
     00B2 1Arr                      1- 3610     	BSR	_PORTBbits,5
                                    1- 3611     	.line	393, "main.c"; 	P_LED_SEG1_OUTPUT;
     00B3 001r                      1- 3612     	IOSTR	_IOSTB
                                    1- 3613     	BANKSEL	r0x1033
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3614     	MOVAR	r0x1033
     00B6 1Err                      1- 3615     	BCR	r0x1033,5
     00B7 01rr                      1- 3616     	MOVR	r0x1033,W
     00B8 000r                      1- 3617     	IOST	_IOSTB
                                    1- 3618     	.line	394, "main.c"; 	P_LED_SEG2_CLR;
     00B9 1Crr                      1- 3619     	BCR	_PORTAbits,0
                                    1- 3620     	.line	395, "main.c"; 	P_LED_SEG2_OUTPUT;
     00BA 001r                      1- 3621     	IOSTR	_IOSTA
     00BB 00rr                      1- 3622     	MOVAR	r0x1033
     00BC 1Crr                      1- 3623     	BCR	r0x1033,0
     00BD 01rr                      1- 3624     	MOVR	r0x1033,W
     00BE 000r                      1- 3625     	IOST	_IOSTA
                                    1- 3626     	.line	397, "main.c"; 	break;
                                    1- 3627     	MGOTO	_02113_DS_
     00BF 3rrr                      3-   62 m1      LGOTO rom_address
     00C0                           1- 3628     _02082_DS_:
                                    1- 3629     	.line	400, "main.c"; 	if (displayDigit & SEG_B) // 3B
                                    1- 3630     	BANKSEL	_displayDigit
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 08rr                      1- 3631     	BTRSS	_displayDigit,1
                                    1- 3632     	MGOTO	_02113_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3633     	.line	402, "main.c"; 	P_LED_SEG2_SET;
     00C3 18rr                      1- 3634     	BSR	_PORTAbits,0
                                    1- 3635     	.line	403, "main.c"; 	P_LED_SEG2_OUTPUT;
     00C4 001r                      1- 3636     	IOSTR	_IOSTA
                                    1- 3637     	BANKSEL	r0x1033
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 3638     	MOVAR	r0x1033
     00C7 1Crr                      1- 3639     	BCR	r0x1033,0
     00C8 01rr                      1- 3640     	MOVR	r0x1033,W
     00C9 000r                      1- 3641     	IOST	_IOSTA
                                    1- 3642     	.line	404, "main.c"; 	P_LED_SEG1_CLR;
     00CA 1Err                      1- 3643     	BCR	_PORTBbits,5
                                    1- 3644     	.line	405, "main.c"; 	P_LED_SEG1_OUTPUT;
     00CB 001r                      1- 3645     	IOSTR	_IOSTB
     00CC 00rr                      1- 3646     	MOVAR	r0x1033
     00CD 1Err                      1- 3647     	BCR	r0x1033,5
     00CE 01rr                      1- 3648     	MOVR	r0x1033,W
     00CF 000r                      1- 3649     	IOST	_IOSTB
                                    1- 3650     	.line	407, "main.c"; 	break;
                                    1- 3651     	MGOTO	_02113_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 3652     _02085_DS_:
                                    1- 3653     	.line	410, "main.c"; 	if (displayDigit & SEG_C) // 3C
                                    1- 3654     	BANKSEL	_displayDigit
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 09rr                      1- 3655     	BTRSS	_displayDigit,2
                                    1- 3656     	MGOTO	_02113_DS_
     00D3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3657     	.line	412, "main.c"; 	P_LED_SEG1_SET;
     00D4 1Arr                      1- 3658     	BSR	_PORTBbits,5
                                    1- 3659     	.line	413, "main.c"; 	P_LED_SEG1_OUTPUT;
     00D5 001r                      1- 3660     	IOSTR	_IOSTB
                                    1- 3661     	BANKSEL	r0x1033
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 00rr                      1- 3662     	MOVAR	r0x1033
     00D8 1Err                      1- 3663     	BCR	r0x1033,5
     00D9 01rr                      1- 3664     	MOVR	r0x1033,W
     00DA 000r                      1- 3665     	IOST	_IOSTB
                                    1- 3666     	.line	414, "main.c"; 	P_LED_SEG3_CLR;
     00DB 1Crr                      1- 3667     	BCR	_PORTAbits,1
                                    1- 3668     	.line	415, "main.c"; 	P_LED_SEG3_OUTPUT;
     00DC 001r                      1- 3669     	IOSTR	_IOSTA
     00DD 00rr                      1- 3670     	MOVAR	r0x1033
     00DE 1Crr                      1- 3671     	BCR	r0x1033,1
     00DF 01rr                      1- 3672     	MOVR	r0x1033,W
     00E0 000r                      1- 3673     	IOST	_IOSTA
                                    1- 3674     	.line	417, "main.c"; 	break;
                                    1- 3675     	MGOTO	_02113_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 3676     _02088_DS_:
                                    1- 3677     	.line	420, "main.c"; 	if (displayDigit & SEG_D) // 3D
                                    1- 3678     	BANKSEL	_displayDigit
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 09rr                      1- 3679     	BTRSS	_displayDigit,3
                                    1- 3680     	MGOTO	_02113_DS_
     00E4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3681     	.line	422, "main.c"; 	P_LED_SEG3_SET;
     00E5 18rr                      1- 3682     	BSR	_PORTAbits,1
                                    1- 3683     	.line	423, "main.c"; 	P_LED_SEG3_OUTPUT;
     00E6 001r                      1- 3684     	IOSTR	_IOSTA
                                    1- 3685     	BANKSEL	r0x1033
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 3686     	MOVAR	r0x1033
     00E9 1Crr                      1- 3687     	BCR	r0x1033,1
     00EA 01rr                      1- 3688     	MOVR	r0x1033,W
     00EB 000r                      1- 3689     	IOST	_IOSTA
                                    1- 3690     	.line	424, "main.c"; 	P_LED_SEG1_CLR;
     00EC 1Err                      1- 3691     	BCR	_PORTBbits,5
                                    1- 3692     	.line	425, "main.c"; 	P_LED_SEG1_OUTPUT;
     00ED 001r                      1- 3693     	IOSTR	_IOSTB
     00EE 00rr                      1- 3694     	MOVAR	r0x1033
     00EF 1Err                      1- 3695     	BCR	r0x1033,5
     00F0 01rr                      1- 3696     	MOVR	r0x1033,W
     00F1 000r                      1- 3697     	IOST	_IOSTB
                                    1- 3698     	.line	427, "main.c"; 	break;
                                    1- 3699     	MGOTO	_02113_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
     00F3                           1- 3700     _02091_DS_:
                                    1- 3701     	.line	430, "main.c"; 	if (displayDigit & SEG_E) // 3E
                                    1- 3702     	BANKSEL	_displayDigit
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 0Arr                      1- 3703     	BTRSS	_displayDigit,4
                                    1- 3704     	MGOTO	_02113_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3705     	.line	432, "main.c"; 	P_LED_SEG1_SET;
     00F6 1Arr                      1- 3706     	BSR	_PORTBbits,5
                                    1- 3707     	.line	433, "main.c"; 	P_LED_SEG1_OUTPUT;
     00F7 001r                      1- 3708     	IOSTR	_IOSTB
                                    1- 3709     	BANKSEL	r0x1033
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3710     	MOVAR	r0x1033
     00FA 1Err                      1- 3711     	BCR	r0x1033,5
     00FB 01rr                      1- 3712     	MOVR	r0x1033,W
     00FC 000r                      1- 3713     	IOST	_IOSTB
                                    1- 3714     	.line	434, "main.c"; 	P_LED_SEG4_CLR;
     00FD 1Frr                      1- 3715     	BCR	_PORTAbits,7
                                    1- 3716     	.line	435, "main.c"; 	P_LED_SEG4_OUTPUT;
     00FE 001r                      1- 3717     	IOSTR	_IOSTA
     00FF 00rr                      1- 3718     	MOVAR	r0x1033
     0100 1Frr                      1- 3719     	BCR	r0x1033,7
     0101 01rr                      1- 3720     	MOVR	r0x1033,W
     0102 000r                      1- 3721     	IOST	_IOSTA
                                    1- 3722     	.line	437, "main.c"; 	break;
                                    1- 3723     	MGOTO	_02113_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 3724     _02094_DS_:
                                    1- 3725     	.line	440, "main.c"; 	if (displayDigit & SEG_F) // 3F
                                    1- 3726     	BANKSEL	_displayDigit
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 0Arr                      1- 3727     	BTRSS	_displayDigit,5
                                    1- 3728     	MGOTO	_02113_DS_
     0106 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3729     	.line	442, "main.c"; 	P_LED_SEG4_SET;
     0107 1Brr                      1- 3730     	BSR	_PORTAbits,7
                                    1- 3731     	.line	443, "main.c"; 	P_LED_SEG4_OUTPUT;
     0108 001r                      1- 3732     	IOSTR	_IOSTA
                                    1- 3733     	BANKSEL	r0x1033
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 00rr                      1- 3734     	MOVAR	r0x1033
     010B 1Frr                      1- 3735     	BCR	r0x1033,7
     010C 01rr                      1- 3736     	MOVR	r0x1033,W
     010D 000r                      1- 3737     	IOST	_IOSTA
                                    1- 3738     	.line	444, "main.c"; 	P_LED_SEG1_CLR;
     010E 1Err                      1- 3739     	BCR	_PORTBbits,5
                                    1- 3740     	.line	445, "main.c"; 	P_LED_SEG1_OUTPUT;
     010F 001r                      1- 3741     	IOSTR	_IOSTB
     0110 00rr                      1- 3742     	MOVAR	r0x1033
     0111 1Err                      1- 3743     	BCR	r0x1033,5
     0112 01rr                      1- 3744     	MOVR	r0x1033,W
     0113 000r                      1- 3745     	IOST	_IOSTB
                                    1- 3746     	.line	447, "main.c"; 	break;
                                    1- 3747     	MGOTO	_02113_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
     0115                           1- 3748     _02097_DS_:
                                    1- 3749     	.line	450, "main.c"; 	if (displayDigit & SEG_G) // 3G OK
                                    1- 3750     	BANKSEL	_displayDigit
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 3751     	BTRSS	_displayDigit,6
                                    1- 3752     	MGOTO	_02113_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3753     	.line	452, "main.c"; 	P_LED_SEG5_SET;
     0118 1Brr                      1- 3754     	BSR	_PORTAbits,6
                                    1- 3755     	.line	453, "main.c"; 	P_LED_SEG5_OUTPUT;
     0119 001r                      1- 3756     	IOSTR	_IOSTA
                                    1- 3757     	BANKSEL	r0x1033
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 00rr                      1- 3758     	MOVAR	r0x1033
     011C 1Frr                      1- 3759     	BCR	r0x1033,6
     011D 01rr                      1- 3760     	MOVR	r0x1033,W
     011E 000r                      1- 3761     	IOST	_IOSTA
                                    1- 3762     	.line	454, "main.c"; 	P_LED_SEG1_CLR;
     011F 1Err                      1- 3763     	BCR	_PORTBbits,5
                                    1- 3764     	.line	455, "main.c"; 	P_LED_SEG1_OUTPUT;
     0120 001r                      1- 3765     	IOSTR	_IOSTB
     0121 00rr                      1- 3766     	MOVAR	r0x1033
     0122 1Err                      1- 3767     	BCR	r0x1033,5
     0123 01rr                      1- 3768     	MOVR	r0x1033,W
     0124 000r                      1- 3769     	IOST	_IOSTB
                                    1- 3770     	.line	457, "main.c"; 	break;
                                    1- 3771     	MGOTO	_02113_DS_
     0125 3rrr                      3-   62 m1      LGOTO rom_address
     0126                           1- 3772     _02100_DS_:
                                    1- 3773     	.line	460, "main.c"; 	if (displayHundred & SEG_B) // 1B OK
                                    1- 3774     	BANKSEL	_displayHundred
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 08rr                      1- 3775     	BTRSS	_displayHundred,1
                                    1- 3776     	MGOTO	_02113_DS_
     0128 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3777     	.line	462, "main.c"; 	P_LED_SEG3_SET;
     0129 18rr                      1- 3778     	BSR	_PORTAbits,1
                                    1- 3779     	.line	463, "main.c"; 	P_LED_SEG3_OUTPUT;
     012A 001r                      1- 3780     	IOSTR	_IOSTA
                                    1- 3781     	BANKSEL	r0x1033
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 3782     	MOVAR	r0x1033
     012D 1Crr                      1- 3783     	BCR	r0x1033,1
     012E 01rr                      1- 3784     	MOVR	r0x1033,W
     012F 000r                      1- 3785     	IOST	_IOSTA
                                    1- 3786     	.line	464, "main.c"; 	P_LED_SEG4_CLR;
     0130 1Frr                      1- 3787     	BCR	_PORTAbits,7
                                    1- 3788     	.line	465, "main.c"; 	P_LED_SEG4_OUTPUT;
     0131 001r                      1- 3789     	IOSTR	_IOSTA
     0132 00rr                      1- 3790     	MOVAR	r0x1033
     0133 1Frr                      1- 3791     	BCR	r0x1033,7
     0134 01rr                      1- 3792     	MOVR	r0x1033,W
     0135 000r                      1- 3793     	IOST	_IOSTA
                                    1- 3794     	.line	467, "main.c"; 	break;
                                    1- 3795     	MGOTO	_02113_DS_
     0136 3rrr                      3-   62 m1      LGOTO rom_address
     0137                           1- 3796     _02103_DS_:
                                    1- 3797     	.line	470, "main.c"; 	if (displayHundred & SEG_C) // 1C OK
                                    1- 3798     	BANKSEL	_displayHundred
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 09rr                      1- 3799     	BTRSS	_displayHundred,2
                                    1- 3800     	MGOTO	_02113_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3801     	.line	472, "main.c"; 	P_LED_SEG2_SET;
     013A 18rr                      1- 3802     	BSR	_PORTAbits,0
                                    1- 3803     	.line	473, "main.c"; 	P_LED_SEG2_OUTPUT;
     013B 001r                      1- 3804     	IOSTR	_IOSTA
                                    1- 3805     	BANKSEL	r0x1033
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 00rr                      1- 3806     	MOVAR	r0x1033
     013E 1Crr                      1- 3807     	BCR	r0x1033,0
     013F 01rr                      1- 3808     	MOVR	r0x1033,W
     0140 000r                      1- 3809     	IOST	_IOSTA
                                    1- 3810     	.line	474, "main.c"; 	P_LED_SEG4_CLR;
     0141 1Frr                      1- 3811     	BCR	_PORTAbits,7
                                    1- 3812     	.line	475, "main.c"; 	P_LED_SEG4_OUTPUT;
     0142 001r                      1- 3813     	IOSTR	_IOSTA
     0143 00rr                      1- 3814     	MOVAR	r0x1033
     0144 1Frr                      1- 3815     	BCR	r0x1033,7
     0145 01rr                      1- 3816     	MOVR	r0x1033,W
     0146 000r                      1- 3817     	IOST	_IOSTA
                                    1- 3818     	.line	478, "main.c"; 	break;
                                    1- 3819     	MGOTO	_02113_DS_
     0147 3rrr                      3-   62 m1      LGOTO rom_address
     0148                           1- 3820     _02106_DS_:
                                    1- 3821     	.line	493, "main.c"; 	if (displayHundred & SEG_D) // 1D quick
                                    1- 3822     	BANKSEL	_displayHundred
     0148 rrrr                      3-  109 m1      .banksel ram_address
     0149 09rr                      1- 3823     	BTRSS	_displayHundred,3
                                    1- 3824     	MGOTO	_02113_DS_
     014A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3825     	.line	495, "main.c"; 	P_LED_SEG3_SET;
     014B 18rr                      1- 3826     	BSR	_PORTAbits,1
                                    1- 3827     	.line	496, "main.c"; 	P_LED_SEG3_OUTPUT;
     014C 001r                      1- 3828     	IOSTR	_IOSTA
                                    1- 3829     	BANKSEL	r0x1033
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 00rr                      1- 3830     	MOVAR	r0x1033
     014F 1Crr                      1- 3831     	BCR	r0x1033,1
     0150 01rr                      1- 3832     	MOVR	r0x1033,W
     0151 000r                      1- 3833     	IOST	_IOSTA
                                    1- 3834     	.line	497, "main.c"; 	P_LED_SEG5_CLR;
     0152 1Frr                      1- 3835     	BCR	_PORTAbits,6
                                    1- 3836     	.line	498, "main.c"; 	P_LED_SEG5_OUTPUT;
     0153 001r                      1- 3837     	IOSTR	_IOSTA
     0154 00rr                      1- 3838     	MOVAR	r0x1033
     0155 1Frr                      1- 3839     	BCR	r0x1033,6
     0156 01rr                      1- 3840     	MOVR	r0x1033,W
     0157 000r                      1- 3841     	IOST	_IOSTA
                                    1- 3842     	.line	500, "main.c"; 	break;
                                    1- 3843     	MGOTO	_02113_DS_
     0158 3rrr                      3-   62 m1      LGOTO rom_address
     0159                           1- 3844     _02109_DS_:
                                    1- 3845     	.line	503, "main.c"; 	if (displayHundred & SEG_E) // 1E wireless
                                    1- 3846     	BANKSEL	_displayHundred
     0159 rrrr                      3-  109 m1      .banksel ram_address
     015A 0Arr                      1- 3847     	BTRSS	_displayHundred,4
                                    1- 3848     	MGOTO	_02113_DS_
     015B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3849     	.line	505, "main.c"; 	P_LED_SEG2_SET;
     015C 18rr                      1- 3850     	BSR	_PORTAbits,0
                                    1- 3851     	.line	506, "main.c"; 	P_LED_SEG2_OUTPUT;
     015D 001r                      1- 3852     	IOSTR	_IOSTA
                                    1- 3853     	BANKSEL	r0x1033
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 00rr                      1- 3854     	MOVAR	r0x1033
     0160 1Crr                      1- 3855     	BCR	r0x1033,0
     0161 01rr                      1- 3856     	MOVR	r0x1033,W
     0162 000r                      1- 3857     	IOST	_IOSTA
                                    1- 3858     	.line	507, "main.c"; 	P_LED_SEG5_CLR;
     0163 1Frr                      1- 3859     	BCR	_PORTAbits,6
                                    1- 3860     	.line	508, "main.c"; 	P_LED_SEG5_OUTPUT;
     0164 001r                      1- 3861     	IOSTR	_IOSTA
     0165 00rr                      1- 3862     	MOVAR	r0x1033
     0166 1Frr                      1- 3863     	BCR	r0x1033,6
     0167 01rr                      1- 3864     	MOVR	r0x1033,W
     0168 000r                      1- 3865     	IOST	_IOSTA
     0169                           1- 3866     _02113_DS_:
                                    1- 3867     	.line	515, "main.c"; 	indexScan++; //! 1ms 调用一次
                                    1- 3868     	BANKSEL	_io_led_scan_indexScan_65536_31
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 05rr                      1- 3869     	INCR	_io_led_scan_indexScan_65536_31,F
                                    1- 3870     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3871     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3872     	.line	546, "main.c"; 	if (indexScan > 17) //
     016B 2112                      1- 3873     	MOVIA	0x12
     016C 04rr                      1- 3874     	SUBAR	_io_led_scan_indexScan_65536_31,W
     016D 0C03                      1- 3875     	BTRSC	STATUS,0
                                    1- 3876     	.line	548, "main.c"; 	indexScan = 0;
     016E 02rr                      1- 3877     	CLRR	_io_led_scan_indexScan_65536_31
                                    1- 3878     	.line	550, "main.c"; 	}
                                    1- 3879     	RETURN	
     016F 0010                      3-   39 m1      ret
                                    1- 3881     ;***
                                    1- 3882     ;  pBlock Stats: dbName = C
                                    1- 3883     ;***
                                    1- 3884     ;has an exit
                                    1- 3885     ;1 compiler assigned register :
                                    1- 3886     ;   r0x101A
                                    1- 3887     ;; Starting pCode block
                                    1- 3888     .segment "code"; module=main, function=__dly_us
     0000                           1- 3890     __dly_us:
                                    1- 3891     ; 2 exit points
                                    1- 3892     	.line	299, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3893     	BANKSEL	r0x101A
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3894     	MOVAR	r0x101A
     0002                           1- 3895     _02050_DS_:
                                    1- 3896     	.line	301, "main.c"; 	while (cnt)
                                    1- 3897     	BANKSEL	r0x101A
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3898     	MOVR	r0x101A,W
     0004 0D03                      1- 3899     	BTRSC	STATUS,2
                                    1- 3900     	MGOTO	_02053_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3901     	.line	303, "main.c"; 	cnt--;
     0006 06rr                      1- 3902     	DECR	r0x101A,F
                                    1- 3903     	MGOTO	_02050_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3904     _02053_DS_:
                                    1- 3905     	.line	305, "main.c"; 	}
                                    1- 3906     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3907     ; exit point of __dly_us
                                    1- 3909     ;***
                                    1- 3910     ;  pBlock Stats: dbName = C
                                    1- 3911     ;***
                                    1- 3912     ;has an exit
                                    1- 3913     ;; Starting pCode block
                                    1- 3914     .segment "code"; module=main, function=_disable_breathing_mode
     0000                           1- 3916     _disable_breathing_mode:
                                    1- 3917     ; 2 exit points
                                    1- 3918     	.line	291, "main.c"; 	bFlag_is_breathing_mode = 0;
                                    1- 3919     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 1Crr                      1- 3920     	BCR	_vFlag_1,0
                                    1- 3921     	.line	292, "main.c"; 	indicator_light_mode = 0;
                                    1- 3922     	BANKSEL	_indicator_light_mode
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 3923     	CLRR	_indicator_light_mode
                                    1- 3924     	.line	293, "main.c"; 	P_LED_R_CLR;
     0004 1Err                      1- 3925     	BCR	_PORTBbits,4
                                    1- 3926     	.line	294, "main.c"; 	P_LED_G_CLR;
     0005 1Drr                      1- 3927     	BCR	_PORTBbits,3
                                    1- 3928     	.line	295, "main.c"; 	P_LED_B_CLR;
     0006 1Drr                      1- 3929     	BCR	_PORTBbits,2
                                    1- 3930     	.line	296, "main.c"; 	}
                                    1- 3931     	RETURN	
     0007 0010                      3-   39 m1      ret
                                    1- 3932     ; exit point of _disable_breathing_mode
                                    1- 3934     ;***
                                    1- 3935     ;  pBlock Stats: dbName = C
                                    1- 3936     ;***
                                    1- 3937     ;has an exit
                                    1- 3938     ;; Starting pCode block
                                    1- 3939     .segment "code"; module=main, function=_enable_breathing_mode
     0000                           1- 3941     _enable_breathing_mode:
                                    1- 3942     ; 2 exit points
                                    1- 3943     	.line	284, "main.c"; 	bFlag_is_breathing_mode = 1;
                                    1- 3944     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 18rr                      1- 3945     	BSR	_vFlag_1,0
                                    1- 3946     	.line	285, "main.c"; 	bFlag_inc_or_dec = 0;
     0002 1Crr                      1- 3947     	BCR	_vFlag_1,1
                                    1- 3948     	.line	286, "main.c"; 	indicator_light_mode = 0;
                                    1- 3949     	BANKSEL	_indicator_light_mode
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 3950     	CLRR	_indicator_light_mode
                                    1- 3951     	.line	287, "main.c"; 	}
                                    1- 3952     	RETURN	
     0005 0010                      3-   39 m1      ret
                                    1- 3953     ; exit point of _enable_breathing_mode
                                    1- 3956     ;	code size estimation:
                                    1- 3957     ;	 1612+  398 =  2010 instructions ( 4816 byte)
                                    1- 3959     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
