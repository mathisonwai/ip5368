
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_PWM5RH
                                    1-   27     	extern	_PWM5DUTY
                                    1-   28     	extern	_P5CR1
                                    1-   29     	extern	_PWM4DUTY
                                    1-   30     	extern	_P4CR1
                                    1-   31     	extern	_PS3CV
                                    1-   32     	extern	_PWM3DUTY
                                    1-   33     	extern	_T3CR2
                                    1-   34     	extern	_T3CR1
                                    1-   35     	extern	_TMR3
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_PWM2DUTY
                                    1-   38     	extern	_P2CR1
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_STATUS
                                    1-   52     	extern	_PCL
                                    1-   53     	extern	_TMR0
                                    1-   54     	extern	_INTE2bits
                                    1-   55     	extern	_RFCbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_INTEbits
                                    1-   60     	extern	_BPHCONbits
                                    1-   61     	extern	_ABPLCONbits
                                    1-   62     	extern	_BWUCONbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_PORTBbits
                                    1-   65     	extern	_PORTAbits
                                    1-   66     	extern	__gptrget1
                                    1-   67     	extern	__nyc_ny8_startup
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     ; global declarations
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     	extern	_main
                                    1-   72     	extern	_app_display_all
                                    1-   73     	extern	_get_cap
                                    1-   74     	extern	_is_chg_or_dischg
                                    1-   75     	extern	_get_p_ext_int_status
                                    1-   76     	extern	_init_ip53xs
                                    1-   77     	extern	_ip55xs_read4Bytes
                                    1-   78     	extern	_ip55xs_write4Bytes
                                    1-   79     	extern	_ip53xs_readByte
                                    1-   80     	extern	_ip53xs_writeByte
                                    1-   81     	extern	_i2c_readByte
                                    1-   82     	extern	_i2c_writeByte
                                    1-   83     	extern	_i2c_send_nack
                                    1-   84     	extern	_i2c_send_ack
                                    1-   85     	extern	_i2c_chk_ack
                                    1-   86     	extern	_i2c_stop
                                    1-   87     	extern	_i2c_start
                                    1-   88     	extern	_gpioKeyScan
                                    1-   89     	extern	__dly_us
                                    1-   90     	extern	_disable_breathing_mode
                                    1-   91     	extern	_enable_breathing_mode
                                    1-   92     	extern	_isr
                                    1-   93     	extern	_RESPIRATION_LAMP_TABLE
                                    1-   94     	extern	_DispTable
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_RFC
                                    1-   97     	extern	_INTEDG
                                    1-   98     	extern	_AWUCON
                                    1-   99     	extern	_INTF
                                    1-  100     	extern	_INTE
                                    1-  101     	extern	_BPHCON
                                    1-  102     	extern	_ABPLCON
                                    1-  103     	extern	_BWUCON
                                    1-  104     	extern	_PCON
                                    1-  105     	extern	_PORTB
                                    1-  106     	extern	_PORTA
                                    1-  107     	extern	_gSysTick
                                    1-  108     	extern	_timer_slice_10ms
                                    1-  109     	extern	_displayDigit
                                    1-  110     	extern	_displayDecade
                                    1-  111     	extern	_displayHundred
                                    1-  112     	extern	_displayData
                                    1-  113     	extern	_forceDispTimer
                                    1-  114     	extern	_IP_DATA
                                    1-  115     	extern	_respiration_lamp_timer
                                    1-  116     	extern	_gpioKeyState
                                    1-  117     	extern	_gpioKeyWaitTimer
                                    1-  118     	extern	_skipGetCapTimer
                                    1-  119     	extern	_timer_slice_16ms
                                    1-  120     	extern	_bat_level_buf
                                    1-  121     	extern	_delaySleepTimer
                                    1-  122     	extern	_displayTimer
                                    1-  123     	extern	_underVoltageDispTimer
                                    1-  124     	extern	_indicator_light_mode
                                    1-  125     	extern	_always_light_timer_shadow
                                    1-  126     	extern	_always_light_timer
                                    1-  127     	extern	_moto_work_mode
                                    1-  128     	extern	_vFlag_1
                                    1-  129     	extern	_vFlag_0
                                    1-  130     	extern	_io_led_scan
                                    1-  132     	extern PSAVE
                                    1-  133     	extern SSAVE
                                    1-  134     	extern WSAVE
                                    1-  135     	extern STK12
                                    1-  136     	extern STK11
                                    1-  137     	extern STK10
                                    1-  138     	extern STK09
                                    1-  139     	extern STK08
                                    1-  140     	extern STK07
                                    1-  141     	extern STK06
                                    1-  142     	extern STK05
                                    1-  143     	extern STK04
                                    1-  144     	extern STK03
                                    1-  145     	extern STK02
                                    1-  146     	extern STK01
                                    1-  147     	extern STK00
                                    1-  149     .segment "share_bank"
     0000                           1-  150     PSAVE:
                                    1-  151     	.res 1
                                    1-  152     .segment "share_bank"
     0000                           1-  153     SSAVE:
                                    1-  154     	.res 1
                                    1-  155     .segment "share_bank"
     0000                           1-  156     WSAVE:
                                    1-  157     	.res 1
                                    1-  158     .segment "share_bank"
     0000                           1-  159     STK12:
                                    1-  160     	.res 1
                                    1-  161     .segment "share_bank"
     0000                           1-  162     STK11:
                                    1-  163     	.res 1
                                    1-  164     .segment "share_bank"
     0000                           1-  165     STK10:
                                    1-  166     	.res 1
                                    1-  167     .segment "share_bank"
     0000                           1-  168     STK09:
                                    1-  169     	.res 1
                                    1-  170     .segment "share_bank"
     0000                           1-  171     STK08:
                                    1-  172     	.res 1
                                    1-  173     .segment "share_bank"
     0000                           1-  174     STK07:
                                    1-  175     	.res 1
                                    1-  176     .segment "share_bank"
     0000                           1-  177     STK06:
                                    1-  178     	.res 1
                                    1-  179     .segment "share_bank"
     0000                           1-  180     STK05:
                                    1-  181     	.res 1
                                    1-  182     .segment "share_bank"
     0000                           1-  183     STK04:
                                    1-  184     	.res 1
                                    1-  185     .segment "share_bank"
     0000                           1-  186     STK03:
                                    1-  187     	.res 1
                                    1-  188     .segment "share_bank"
     0000                           1-  189     STK02:
                                    1-  190     	.res 1
                                    1-  191     .segment "share_bank"
     0000                           1-  192     STK01:
                                    1-  193     	.res 1
                                    1-  194     .segment "share_bank"
     0000                           1-  195     STK00:
                                    1-  196     	.res 1
                                    1-  198     ;--------------------------------------------------------
                                    1-  199     ; global definitions
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     .segment "uninit"
     0000                           1-  202     _vFlag_0:
                                    1-  203     	.res 1
                                    1-  206     .segment "uninit"
     0000                           1-  207     _vFlag_1:
                                    1-  208     	.res 1
                                    1-  211     .segment "uninit"
     0000                           1-  212     _moto_work_mode:
                                    1-  213     	.res 1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _always_light_timer:
                                    1-  218     	.res 1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _always_light_timer_shadow:
                                    1-  223     	.res 1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _indicator_light_mode:
                                    1-  228     	.res 1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _underVoltageDispTimer:
                                    1-  233     	.res 1
                                    1-  236     .segment "uninit"
     0000                           1-  237     _displayTimer:
                                    1-  238     	.res 1
                                    1-  241     .segment "uninit"
     0000                           1-  242     _delaySleepTimer:
                                    1-  243     	.res 1
                                    1-  246     .segment "uninit"
     0000                           1-  247     _bat_level_buf:
                                    1-  248     	.res 1
                                    1-  251     .segment "uninit"
     0000                           1-  252     _timer_slice_16ms:
                                    1-  253     	.res 1
                                    1-  256     .segment "uninit"
     0000                           1-  257     _skipGetCapTimer:
                                    1-  258     	.res 1
                                    1-  261     .segment "uninit"
     0000                           1-  262     _gpioKeyWaitTimer:
                                    1-  263     	.res 1
                                    1-  266     .segment "uninit"
     0000                           1-  267     _gpioKeyState:
                                    1-  268     	.res 1
                                    1-  271     .segment "uninit"
     0000                           1-  272     _respiration_lamp_timer:
                                    1-  273     	.res 1
                                    1-  276     .segment "uninit"
     0000                           1-  277     _IP_DATA:
                                    1-  278     	.res 4
                                    1-  281     .segment "uninit"
     0000                           1-  282     _forceDispTimer:
                                    1-  283     	.res 1
                                    1-  286     .segment "uninit"
     0000                           1-  287     _displayData:
                                    1-  288     	.res 1
                                    1-  291     .segment "uninit"
     0000                           1-  292     _displayHundred:
                                    1-  293     	.res 1
                                    1-  296     .segment "uninit"
     0000                           1-  297     _displayDecade:
                                    1-  298     	.res 1
                                    1-  301     .segment "uninit"
     0000                           1-  302     _displayDigit:
                                    1-  303     	.res 1
                                    1-  306     .segment "uninit"
     0000                           1-  307     _timer_slice_10ms:
                                    1-  308     	.res 1
                                    1-  311     .segment "uninit"
     0000                           1-  312     _gSysTick:
                                    1-  313     	.res 1
                                    1-  316     ;--------------------------------------------------------
                                    1-  317     ; absolute symbol definitions
                                    1-  318     ;--------------------------------------------------------
                                    1-  319     ;--------------------------------------------------------
                                    1-  320     ; compiler-defined variables
                                    1-  321     ;--------------------------------------------------------
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1033:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1034:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x101B:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1032:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x101C:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x101D:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x101E:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x101F:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1020:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1021:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1022:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1023:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1025:
                                    1-  360     	.res	1
                                    1-  361     .segment "uninit"
     0000                           1-  362     r0x1024:
                                    1-  363     	.res	1
                                    1-  364     .segment "uninit"
     0000                           1-  365     r0x1028:
                                    1-  366     	.res	1
                                    1-  367     .segment "uninit"
     0000                           1-  368     r0x1027:
                                    1-  369     	.res	1
                                    1-  370     .segment "uninit"
     0000                           1-  371     r0x1026:
                                    1-  372     	.res	1
                                    1-  373     .segment "uninit"
     0000                           1-  374     r0x102F:
                                    1-  375     	.res	1
                                    1-  376     .segment "uninit"
     0000                           1-  377     r0x102B:
                                    1-  378     	.res	1
                                    1-  379     .segment "uninit"
     0000                           1-  380     r0x1029:
                                    1-  381     	.res	1
                                    1-  382     .segment "uninit"
     0000                           1-  383     r0x102E:
                                    1-  384     	.res	1
                                    1-  385     .segment "uninit"
     0000                           1-  386     _isr_timerCnt_65536_5:
                                    1-  387     	.res	1
                                    1-  389     .segment "uninit"
     0000                           1-  390     _isr_respiration_lamp_series_65536_5:
                                    1-  391     	.res	1
                                    1-  393     .segment "uninit"
     0000                           1-  394     _isr_led_lamp_65536_5:
                                    1-  395     	.res	1
                                    1-  397     .segment "uninit"
     0000                           1-  398     ___sdcc_saved_fsr:
                                    1-  399     	.res	1
                                    1-  401     .segment "uninit"
     0000                           1-  402     ___sdcc_saved_stk00:
                                    1-  403     	.res	1
                                    1-  405     .segment "uninit"
     0000                           1-  406     ___sdcc_saved_stk01:
                                    1-  407     	.res	1
                                    1-  409     .segment "uninit"
     0000                           1-  410     _get_p_ext_int_status_counter_65536_116:
                                    1-  411     	.res	1
                                    1-  413     .segment "uninit"
     0000                           1-  414     _is_chg_or_dischg_counter_65536_126:
                                    1-  415     	.res	1
                                    1-  417     ;--------------------------------------------------------
                                    1-  418     ; initialized data
                                    1-  419     ;--------------------------------------------------------
                                    1-  421     .segment "idata"
     0000                           1-  422     _io_led_scan_indexScan_65536_31:
     0000 0000                      1-  425     	dw	0x00	; 0
                                    1-  428     .segment "code"
     0000                           1-  429     _DispTable:
     0000 203F                      1-  430     	retia 0x3f	; 63
     0001 2006                      1-  431     	retia 0x06	; 6
     0002 205B                      1-  432     	retia 0x5b	; 91
     0003 204F                      1-  433     	retia 0x4f	; 79	'O'
     0004 2066                      1-  434     	retia 0x66	; 102	'f'
     0005 206D                      1-  435     	retia 0x6d	; 109	'm'
     0006 207D                      1-  436     	retia 0x7d	; 125
     0007 2007                      1-  437     	retia 0x07	; 7
     0008 207F                      1-  438     	retia 0x7f	; 127
     0009 206F                      1-  439     	retia 0x6f	; 111	'o'
     000A 2079                      1-  440     	retia 0x79	; 121	'y'
     000B 2050                      1-  441     	retia 0x50	; 80	'P'
     000C 2076                      1-  442     	retia 0x76	; 118	'v'
     000D 2000                      1-  443     	retia 0x00	; 0
                                    1-  445     .segment "code"
     0000                           1-  446     _RESPIRATION_LAMP_TABLE:
     0000 2001                      1-  447     	retia 0x01	; 1
     0001 2001                      1-  448     	retia 0x01	; 1
     0002 2001                      1-  449     	retia 0x01	; 1
     0003 2001                      1-  450     	retia 0x01	; 1
     0004 2001                      1-  451     	retia 0x01	; 1
     0005 2002                      1-  452     	retia 0x02	; 2
     0006 2002                      1-  453     	retia 0x02	; 2
     0007 2002                      1-  454     	retia 0x02	; 2
     0008 2002                      1-  455     	retia 0x02	; 2
     0009 2002                      1-  456     	retia 0x02	; 2
     000A 2002                      1-  457     	retia 0x02	; 2
     000B 2002                      1-  458     	retia 0x02	; 2
     000C 2002                      1-  459     	retia 0x02	; 2
     000D 2003                      1-  460     	retia 0x03	; 3
     000E 2003                      1-  461     	retia 0x03	; 3
     000F 2003                      1-  462     	retia 0x03	; 3
     0010 2003                      1-  463     	retia 0x03	; 3
     0011 2003                      1-  464     	retia 0x03	; 3
     0012 2004                      1-  465     	retia 0x04	; 4
     0013 2004                      1-  466     	retia 0x04	; 4
     0014 2004                      1-  467     	retia 0x04	; 4
     0015 2005                      1-  468     	retia 0x05	; 5
     0016 2005                      1-  469     	retia 0x05	; 5
     0017 2005                      1-  470     	retia 0x05	; 5
     0018 2006                      1-  471     	retia 0x06	; 6
     0019 2006                      1-  472     	retia 0x06	; 6
     001A 2006                      1-  473     	retia 0x06	; 6
     001B 2007                      1-  474     	retia 0x07	; 7
     001C 2007                      1-  475     	retia 0x07	; 7
     001D 2008                      1-  476     	retia 0x08	; 8
     001E 2009                      1-  477     	retia 0x09	; 9
     001F 2009                      1-  478     	retia 0x09	; 9
     0020 200A                      1-  479     	retia 0x0a	; 10
     0021 200B                      1-  480     	retia 0x0b	; 11
     0022 200B                      1-  481     	retia 0x0b	; 11
     0023 200C                      1-  482     	retia 0x0c	; 12
     0024 200D                      1-  483     	retia 0x0d	; 13
     0025 200E                      1-  484     	retia 0x0e	; 14
     0026 200F                      1-  485     	retia 0x0f	; 15
     0027 2010                      1-  486     	retia 0x10	; 16
     0028 2011                      1-  487     	retia 0x11	; 17
     0029 2012                      1-  488     	retia 0x12	; 18
     002A 2014                      1-  489     	retia 0x14	; 20
     002B 2015                      1-  490     	retia 0x15	; 21
     002C 2017                      1-  491     	retia 0x17	; 23
     002D 2018                      1-  492     	retia 0x18	; 24
     002E 201A                      1-  493     	retia 0x1a	; 26
     002F 201C                      1-  494     	retia 0x1c	; 28
     0030 201E                      1-  495     	retia 0x1e	; 30
     0031 2020                      1-  496     	retia 0x20	; 32
     0032 2022                      1-  497     	retia 0x22	; 34
     0033 2025                      1-  498     	retia 0x25	; 37
     0034 2027                      1-  499     	retia 0x27	; 39
     0035 202A                      1-  500     	retia 0x2a	; 42
     0036 202D                      1-  501     	retia 0x2d	; 45
     0037 2030                      1-  502     	retia 0x30	; 48	'0'
     0038 2034                      1-  503     	retia 0x34	; 52	'4'
     0039 2038                      1-  504     	retia 0x38	; 56	'8'
     003A 203C                      1-  505     	retia 0x3c	; 60
     003B 2040                      1-  506     	retia 0x40	; 64
     003C 2044                      1-  507     	retia 0x44	; 68	'D'
     003D 2049                      1-  508     	retia 0x49	; 73	'I'
     003E 204F                      1-  509     	retia 0x4f	; 79	'O'
     003F 2054                      1-  510     	retia 0x54	; 84	'T'
     0040 205A                      1-  511     	retia 0x5a	; 90	'Z'
     0041 2061                      1-  512     	retia 0x61	; 97	'a'
     0042 2068                      1-  513     	retia 0x68	; 104	'h'
     0043 206F                      1-  514     	retia 0x6f	; 111	'o'
     0044 2077                      1-  515     	retia 0x77	; 119	'w'
     0045 2080                      1-  516     	retia 0x80	; 128
     0046 2089                      1-  517     	retia 0x89	; 137
     0047 2093                      1-  518     	retia 0x93	; 147
     0048 209D                      1-  519     	retia 0x9d	; 157
     0049 20A8                      1-  520     	retia 0xa8	; 168
     004A 20B4                      1-  521     	retia 0xb4	; 180
     004B 20C1                      1-  522     	retia 0xc1	; 193
     004C 20CF                      1-  523     	retia 0xcf	; 207
     004D 20DE                      1-  524     	retia 0xde	; 222
     004E 20EE                      1-  525     	retia 0xee	; 238
     004F 20FF                      1-  526     	retia 0xff	; 255
     0050 20FF                      1-  527     	retia 0xff	; 255
                                    1-  528     ;--------------------------------------------------------
                                    1-  529     ; initialized absolute data
                                    1-  530     ;--------------------------------------------------------
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ; overlayable items in internal ram 
                                    1-  533     ;--------------------------------------------------------
                                    1-  534     ;	udata_ovr
                                    1-  535     ;--------------------------------------------------------
                                    1-  536     ; reset vector 
                                    1-  537     ;--------------------------------------------------------
                                    1-  538     ORG	0x0000
     0000 3rrr                      1-  539     	LGOTO	__nyc_ny8_startup
                                    1-  540     ;--------------------------------------------------------
                                    1-  541     ; interrupt and initialization code
                                    1-  542     ;--------------------------------------------------------
                                    1-  543     ORG 0x0008
                                    1-  544     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  546     .segment "code"
     0000                           1-  547     __sdcc_interrupt:
                                    1-  548     ;***
                                    1-  549     ;  pBlock Stats: dbName = I
                                    1-  550     ;***
                                    1-  551     ;functions called:
                                    1-  552     ;   _io_led_scan
                                    1-  553     ;   __gptrget1
                                    1-  554     ;   _io_led_scan
                                    1-  555     ;   __gptrget1
                                    1-  556     ;4 compiler assigned registers:
                                    1-  557     ;   STK00
                                    1-  558     ;   STK01
                                    1-  559     ;   r0x1033
                                    1-  560     ;   r0x1034
                                    1-  561     ;; Starting pCode block
     0000                           1-  562     _isr:
                                    1-  563     ; 0 exit points
                                    1-  564     	.line	190, "main.c"; 	void isr(void) __interrupt(0) // 64us  8MHz 2T
     0000 00rr                      1-  565     	MOVAR	WSAVE
     0001 1503                      1-  566     	SWAPR	STATUS,W
     0002 0283                      1-  567     	CLRR	STATUS
     0003 00rr                      1-  568     	MOVAR	SSAVE
     0004 010A                      1-  569     	MOVR	PCHBUF,W
     0005 028A                      1-  570     	CLRR	PCHBUF
     0006 00rr                      1-  571     	MOVAR	PSAVE
     0007 0104                      1-  572     	MOVR	FSR,W
                                    1-  573     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  574     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  575     	MOVR	STK00,W
                                    1-  576     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  577     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  578     	MOVR	STK01,W
                                    1-  579     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  580     	MOVAR	___sdcc_saved_stk01
                                    1-  581     	.line	196, "main.c"; 	if (TM0IF)
     0010 08rr                      1-  582     	BTRSS	_INTFbits,0
                                    1-  583     	MGOTO	_02034_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  584     	.line	198, "main.c"; 	TM0IF = 0;
     0012 21FE                      1-  585     	MOVIA	0xfe
     0013 00rr                      1-  586     	MOVAR	(_INTFbits + 0)
                                    1-  587     	.line	203, "main.c"; 	timerCnt++;
                                    1-  588     	BANKSEL	_isr_timerCnt_65536_5
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1-  589     	INCR	_isr_timerCnt_65536_5,F
                                    1-  590     	.line	205, "main.c"; 	if (!(timerCnt & 0x0F))
     0016 01rr                      1-  591     	MOVR	_isr_timerCnt_65536_5,W
     0017 220F                      1-  592     	ANDIA	0x0f
     0018 0903                      1-  593     	BTRSS	STATUS,2
                                    1-  594     	MGOTO	_00015_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  595     	.line	209, "main.c"; 	bFlag_gSysTick_Change = 1; // 1ms
                                    1-  596     	BANKSEL	_vFlag_0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 18rr                      1-  597     	BSR	_vFlag_0,0
                                    1-  598     	.line	211, "main.c"; 	if (!(timerCnt))
                                    1-  599     	BANKSEL	_isr_timerCnt_65536_5
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1-  600     	MOVR	_isr_timerCnt_65536_5,W
     001E 0903                      1-  601     	BTRSS	STATUS,2
                                    1-  602     	MGOTO	_00015_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  603     	.line	214, "main.c"; 	bFlag_slice_16ms = 1;
                                    1-  604     	BANKSEL	_vFlag_0
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 18rr                      1-  605     	BSR	_vFlag_0,1
     0022                           1-  606     _00015_DS_:
                                    1-  607     	.line	218, "main.c"; 	if (!(timerCnt & 0x07))
                                    1-  608     	BANKSEL	_isr_timerCnt_65536_5
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1-  609     	MOVR	_isr_timerCnt_65536_5,W
     0024 2207                      1-  610     	ANDIA	0x07
     0025 0D03                      1-  611     	BTRSC	STATUS,2
                                    1-  612     	.line	220, "main.c"; 	io_led_scan();
                                    1-  613     	MCALL	_io_led_scan
     0026 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  614     	.line	223, "main.c"; 	if (bFlag_is_breathing_mode) // 100us
                                    1-  615     	BANKSEL	_vFlag_1
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 08rr                      1-  616     	BTRSS	_vFlag_1,0
                                    1-  617     	MGOTO	_02034_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  618     	.line	225, "main.c"; 	respiration_lamp_timer++;
                                    1-  619     	BANKSEL	_respiration_lamp_timer
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1-  620     	MOVR	_respiration_lamp_timer,W
                                    1-  621     	BANKSEL	r0x1033
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 00rr                      1-  622     	MOVAR	r0x1033
     002E 05rr                      1-  623     	INCR	r0x1033,W
                                    1-  624     	BANKSEL	_respiration_lamp_timer
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1-  625     	MOVAR	_respiration_lamp_timer
                                    1-  626     	.line	227, "main.c"; 	if (!(respiration_lamp_timer))
     0031 01rr                      1-  627     	MOVR	_respiration_lamp_timer,W
     0032 0903                      1-  628     	BTRSS	STATUS,2
                                    1-  629     	MGOTO	_02021_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  630     	.line	229, "main.c"; 	if (bFlag_inc_or_dec)
                                    1-  631     	BANKSEL	_vFlag_1
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 08rr                      1-  632     	BTRSS	_vFlag_1,1
                                    1-  633     	MGOTO	_02018_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  634     	.line	231, "main.c"; 	if (!(--respiration_lamp_series))
                                    1-  635     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 17rr                      1-  636     	DECRSZ	_isr_respiration_lamp_series_65536_5,F
                                    1-  637     	MGOTO	_02019_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  638     	.line	233, "main.c"; 	bFlag_inc_or_dec = 0;
                                    1-  639     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 1Crr                      1-  640     	BCR	_vFlag_1,1
                                    1-  641     	.line	235, "main.c"; 	if (++indicator_light_mode > 2)
                                    1-  642     	BANKSEL	_indicator_light_mode
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 05rr                      1-  643     	INCR	_indicator_light_mode,W
                                    1-  644     	BANKSEL	r0x1033
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  645     	MOVAR	r0x1033
                                    1-  646     	BANKSEL	_indicator_light_mode
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1-  647     	MOVAR	_indicator_light_mode
                                    1-  648     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  649     ;;unsigned compare: left >= lit(0x3=3), size=1
     0042 2103                      1-  650     	MOVIA	0x03
                                    1-  651     	BANKSEL	r0x1033
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 04rr                      1-  652     	SUBAR	r0x1033,W
     0045 0803                      1-  653     	BTRSS	STATUS,0
                                    1-  654     	MGOTO	_02019_DS_
     0046 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  655     	.line	237, "main.c"; 	indicator_light_mode = 0;
                                    1-  656     	BANKSEL	_indicator_light_mode
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 02rr                      1-  657     	CLRR	_indicator_light_mode
                                    1-  658     	MGOTO	_02019_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
     004A                           1-  659     _02018_DS_:
                                    1-  660     	.line	243, "main.c"; 	if (++respiration_lamp_series >= CONST_RESPIRATION_LAMP_SERIES)
                                    1-  661     	BANKSEL	_isr_respiration_lamp_series_65536_5
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 05rr                      1-  662     	INCR	_isr_respiration_lamp_series_65536_5,F
                                    1-  663     ;;unsigned compare: left < lit(0x50=80), size=1
     004C 2150                      1-  664     	MOVIA	0x50
     004D 04rr                      1-  665     	SUBAR	_isr_respiration_lamp_series_65536_5,W
     004E 0803                      1-  666     	BTRSS	STATUS,0
                                    1-  667     	MGOTO	_02019_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  668     	.line	245, "main.c"; 	respiration_lamp_series = CONST_RESPIRATION_LAMP_SERIES;
     0050 2150                      1-  669     	MOVIA	0x50
     0051 00rr                      1-  670     	MOVAR	_isr_respiration_lamp_series_65536_5
                                    1-  671     	.line	246, "main.c"; 	bFlag_inc_or_dec = 1;
                                    1-  672     	BANKSEL	_vFlag_1
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 18rr                      1-  673     	BSR	_vFlag_1,1
     0054                           1-  674     _02019_DS_:
                                    1-  675     	.line	250, "main.c"; 	led_lamp = RESPIRATION_LAMP_TABLE[respiration_lamp_series];
                                    1-  676     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 01rr                      1-  677     	MOVR	_isr_respiration_lamp_series_65536_5,W
     0056 25rr                      1-  678     	ADDIA	(_RESPIRATION_LAMP_TABLE + 0)
                                    1-  679     	BANKSEL	r0x1033
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1-  680     	MOVAR	r0x1033
     0059 21rr                      1-  681     	MOVIA	((_RESPIRATION_LAMP_TABLE + 0) >> 8) & 0xff
     005A 2600                      1-  682     	ADCIA	0x00
                                    1-  683     	BANKSEL	r0x1034
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1-  684     	MOVAR	r0x1034
                                    1-  685     	BANKSEL	r0x1033
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1-  686     	MOVR	r0x1033,W
     005F 00rr                      1-  687     	MOVAR	STK01
                                    1-  688     	BANKSEL	r0x1034
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1-  689     	MOVR	r0x1034,W
     0062 00rr                      1-  690     	MOVAR	STK00
     0063 2180                      1-  691     	MOVIA	0x80
                                    1-  692     	MCALL	__gptrget1
     0064 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  693     	BANKSEL	_isr_led_lamp_65536_5
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 00rr                      1-  694     	MOVAR	_isr_led_lamp_65536_5
     0067                           1-  695     _02021_DS_:
                                    1-  696     	.line	253, "main.c"; 	if (respiration_lamp_timer >= led_lamp)
                                    1-  697     	BANKSEL	_isr_led_lamp_65536_5
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 01rr                      1-  698     	MOVR	_isr_led_lamp_65536_5,W
                                    1-  699     	BANKSEL	_respiration_lamp_timer
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 04rr                      1-  700     	SUBAR	_respiration_lamp_timer,W
     006B 0803                      1-  701     	BTRSS	STATUS,0
                                    1-  702     	MGOTO	_02029_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  703     	.line	255, "main.c"; 	P_LED_R_OFF;
     006D 1Err                      1-  704     	BCR	_PORTBbits,4
                                    1-  705     	.line	256, "main.c"; 	P_LED_G_OFF;
     006E 1Drr                      1-  706     	BCR	_PORTBbits,3
                                    1-  707     	.line	257, "main.c"; 	P_LED_B_OFF; // white led
     006F 1Drr                      1-  708     	BCR	_PORTBbits,2
                                    1-  709     	MGOTO	_02034_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
     0071                           1-  710     _02029_DS_:
                                    1-  711     	.line	261, "main.c"; 	if (0x01 == indicator_light_mode)
                                    1-  712     	BANKSEL	_indicator_light_mode
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 01rr                      1-  713     	MOVR	_indicator_light_mode,W
     0073 2401                      1-  714     	XORIA	0x01
     0074 0903                      1-  715     	BTRSS	STATUS,2
                                    1-  716     	MGOTO	_02026_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  717     	.line	263, "main.c"; 	P_LED_B_ON; // white
     0076 19rr                      1-  718     	BSR	_PORTBbits,2
                                    1-  719     	MGOTO	_02034_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1-  720     _02026_DS_:
                                    1-  721     	.line	265, "main.c"; 	else if (0x02 == indicator_light_mode)
                                    1-  722     	BANKSEL	_indicator_light_mode
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 01rr                      1-  723     	MOVR	_indicator_light_mode,W
     007A 2402                      1-  724     	XORIA	0x02
     007B 0903                      1-  725     	BTRSS	STATUS,2
                                    1-  726     	MGOTO	_02023_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  727     	.line	267, "main.c"; 	P_LED_G_ON; // green
     007D 19rr                      1-  728     	BSR	_PORTBbits,3
                                    1-  729     	MGOTO	_02034_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
     007F                           1-  730     _02023_DS_:
                                    1-  731     	.line	271, "main.c"; 	P_LED_R_ON; // orange
     007F 1Arr                      1-  732     	BSR	_PORTBbits,4
     0080                           1-  733     _02034_DS_:
                                    1-  734     	.line	277, "main.c"; 	if (INTFbits.PABIF)
     0080 08rr                      1-  735     	BTRSS	_INTFbits,1
                                    1-  736     	MGOTO	_02037_DS_
     0081 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  737     	.line	279, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     0082 21FD                      1-  738     	MOVIA	0xfd
     0083 00rr                      1-  739     	MOVAR	(_INTFbits + 0)
     0084                           1-  740     _02037_DS_:
                                    1-  741     	.line	281, "main.c"; 	}
                                    1-  742     	BANKSEL	___sdcc_saved_stk01
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1-  743     	MOVR	___sdcc_saved_stk01,W
     0086 00rr                      1-  744     	MOVAR	STK01
                                    1-  745     	BANKSEL	___sdcc_saved_stk00
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1-  746     	MOVR	___sdcc_saved_stk00,W
     0089 00rr                      1-  747     	MOVAR	STK00
                                    1-  748     	BANKSEL	___sdcc_saved_fsr
     008A rrrr                      3-  109 m1      .banksel ram_address
     008B 01rr                      1-  749     	MOVR	___sdcc_saved_fsr,W
     008C 0084                      1-  750     	MOVAR	FSR
     008D 01rr                      1-  751     	MOVR	PSAVE,W
     008E 008A                      1-  752     	MOVAR	PCHBUF
     008F 0283                      1-  753     	CLRR	STATUS
     0090 15rr                      1-  754     	SWAPR	SSAVE,W
     0091 0083                      1-  755     	MOVAR	STATUS
     0092 15rr                      1-  756     	SWAPR	WSAVE,F
     0093 15rr                      1-  757     	SWAPR	WSAVE,W
     0094                           1-  758     END_OF_INTERRUPT:
     0094 0011                      1-  759     	RETIE	
                                    1-  761     ;--------------------------------------------------------
                                    1-  762     ; code
                                    1-  763     ;--------------------------------------------------------
                                    1-  764     ; code_main	code
                                    1-  765     ;***
                                    1-  766     ;  pBlock Stats: dbName = M
                                    1-  767     ;***
                                    1-  768     ;has an exit
                                    1-  769     ;functions called:
                                    1-  770     ;   _gpioKeyScan
                                    1-  771     ;   _get_p_ext_int_status
                                    1-  772     ;   _is_chg_or_dischg
                                    1-  773     ;   _get_cap
                                    1-  774     ;   _app_display_all
                                    1-  775     ;   _gpioKeyScan
                                    1-  776     ;   _get_p_ext_int_status
                                    1-  777     ;   _is_chg_or_dischg
                                    1-  778     ;   _get_cap
                                    1-  779     ;   _app_display_all
                                    1-  780     ;1 compiler assigned register :
                                    1-  781     ;   r0x102E
                                    1-  782     ;; Starting pCode block
                                    1-  783     .segment "code"; module=main, function=_main
     0000                           1-  785     _main:
                                    1-  786     ; 2 exit points
                                    1-  787     	.line	1437, "main.c"; 	DISI();
     0000 0013                      1-  788     	DISI
                                    1-  789     	.line	1439, "main.c"; 	BPHCON = (unsigned char)~C_PB0_PHB; // Enable PB1 Pull-High resistor
     0001 21FE                      1-  790     	MOVIA	0xfe
     0002 00rr                      1-  791     	MOVAR	_BPHCON
                                    1-  792     	.line	1442, "main.c"; 	IOSTA = 0xFF;
     0003 21FF                      1-  793     	MOVIA	0xff
     0004 000r                      1-  794     	IOST	_IOSTA
                                    1-  795     	.line	1443, "main.c"; 	IOSTB = 0xFF;
     0005 000r                      1-  796     	IOST	_IOSTB
                                    1-  797     	.line	1445, "main.c"; 	PORTA = 0x00; // PORTB data buffer=0x00
     0006 02rr                      1-  798     	CLRR	_PORTA
                                    1-  799     	.line	1446, "main.c"; 	PORTB = 0x00;
     0007 02rr                      1-  800     	CLRR	_PORTB
                                    1-  801     	.line	1452, "main.c"; 	OSCCR = C_FLOSC_Sel; // OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     0008 0200                      1-  802     	CLRA	
     0009 00rr                      1-  804     	SFUN	_OSCCR
     000A 0000                      1-  805     	NOP	
                                    1-  806     	.line	1455, "main.c"; 	OSCCR = C_FHOSC_Sel; // OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     000B 2101                      1-  807     	MOVIA	0x01
     000C 00rr                      1-  809     	SFUN	_OSCCR
     000D 0000                      1-  810     	NOP	
                                    1-  811     	.line	1470, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     000E 0200                      1-  812     	CLRA	
     000F 000r                      1-  813     	IOST	_PCON1
                                    1-  814     	.line	1473, "main.c"; 	T0MD = 0x0F; // 8M,2T  Prescaler0 to wdt,
     0010 210F                      1-  815     	MOVIA	0x0f
     0011 0003                      1-  816     	T0MD	
                                    1-  817     	.line	1482, "main.c"; 	INTE = 0x01; // Timer0 overflow interrupt enable bit
     0012 2101                      1-  818     	MOVIA	0x01
     0013 00rr                      1-  819     	MOVAR	_INTE
                                    1-  820     	.line	1485, "main.c"; 	PCON = 0xC8; //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0014 21C8                      1-  821     	MOVIA	0xc8
     0015 00rr                      1-  822     	MOVAR	_PCON
                                    1-  823     	.line	1487, "main.c"; 	PCON1 = 0x01; //  C_TMR0_En;                          // Enable Timer0
     0016 2101                      1-  824     	MOVIA	0x01
     0017 000r                      1-  825     	IOST	_PCON1
                                    1-  826     	.line	1488, "main.c"; 	ENI();
     0018 0004                      1-  827     	ENI
                                    1-  828     	.line	1490, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     0019 2114                      1-  829     	MOVIA	0x14
                                    1-  830     	BANKSEL	_delaySleepTimer
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1-  831     	MOVAR	_delaySleepTimer
                                    1-  832     	.line	1491, "main.c"; 	bFlag_power_on = 1;
                                    1-  833     	BANKSEL	_vFlag_1
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 1Arr                      1-  834     	BSR	_vFlag_1,4
                                    1-  835     	.line	1496, "main.c"; 	forceDispTimer = 20;
     001E 2114                      1-  836     	MOVIA	0x14
                                    1-  837     	BANKSEL	_forceDispTimer
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1-  838     	MOVAR	_forceDispTimer
                                    1-  839     	.line	1497, "main.c"; 	P_LED_R_OUTPUT;
     0021 001r                      1-  840     	IOSTR	_IOSTB
                                    1-  841     	BANKSEL	r0x102E
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1-  842     	MOVAR	r0x102E
     0024 1Err                      1-  843     	BCR	r0x102E,4
     0025 01rr                      1-  844     	MOVR	r0x102E,W
     0026 000r                      1-  845     	IOST	_IOSTB
                                    1-  846     	.line	1498, "main.c"; 	P_LED_R_OFF;
     0027 1Err                      1-  847     	BCR	_PORTBbits,4
                                    1-  848     	.line	1499, "main.c"; 	P_LED_G_OUTPUT;
     0028 001r                      1-  849     	IOSTR	_IOSTB
     0029 00rr                      1-  850     	MOVAR	r0x102E
     002A 1Drr                      1-  851     	BCR	r0x102E,3
     002B 01rr                      1-  852     	MOVR	r0x102E,W
     002C 000r                      1-  853     	IOST	_IOSTB
                                    1-  854     	.line	1500, "main.c"; 	P_LED_G_OFF;
     002D 1Drr                      1-  855     	BCR	_PORTBbits,3
                                    1-  856     	.line	1501, "main.c"; 	P_LED_B_OUTPUT;
     002E 001r                      1-  857     	IOSTR	_IOSTB
     002F 00rr                      1-  858     	MOVAR	r0x102E
     0030 1Drr                      1-  859     	BCR	r0x102E,2
     0031 01rr                      1-  860     	MOVR	r0x102E,W
     0032 000r                      1-  861     	IOST	_IOSTB
                                    1-  862     	.line	1502, "main.c"; 	P_LED_B_OFF;
     0033 1Drr                      1-  863     	BCR	_PORTBbits,2
                                    1-  864     	.line	1504, "main.c"; 	displayTimer = CONST_TIMER_DISP;
     0034 2114                      1-  865     	MOVIA	0x14
                                    1-  866     	BANKSEL	_displayTimer
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1-  867     	MOVAR	_displayTimer
     0037                           1-  868     _02529_DS_:
                                    1-  869     	.line	1511, "main.c"; 	CLRWDT();
     0037 0002                      1-  870     	clrwdt
                                    1-  871     	.line	1512, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  872     	BANKSEL	_vFlag_0
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1-  873     	BTRSS	_vFlag_0,0
                                    1-  874     	MGOTO	_02529_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  875     	.line	1514, "main.c"; 	bFlag_gSysTick_Change = 0;
     003B 1Crr                      1-  876     	BCR	_vFlag_0,0
                                    1-  877     	.line	1515, "main.c"; 	if (bFlag_slice_16ms)
     003C 08rr                      1-  878     	BTRSS	_vFlag_0,1
                                    1-  879     	MGOTO	_02529_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  880     	.line	1518, "main.c"; 	bFlag_slice_16ms = 0;
     003E 1Crr                      1-  881     	BCR	_vFlag_0,1
                                    1-  882     	.line	1519, "main.c"; 	timer_slice_16ms++;
                                    1-  883     	BANKSEL	_timer_slice_16ms
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 01rr                      1-  884     	MOVR	_timer_slice_16ms,W
                                    1-  885     	BANKSEL	r0x102E
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 00rr                      1-  886     	MOVAR	r0x102E
     0043 05rr                      1-  887     	INCR	r0x102E,W
                                    1-  888     	BANKSEL	_timer_slice_16ms
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 00rr                      1-  889     	MOVAR	_timer_slice_16ms
                                    1-  890     	.line	1520, "main.c"; 	gpioKeyScan();
                                    1-  891     	MCALL	_gpioKeyScan
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  892     	.line	1521, "main.c"; 	get_p_ext_int_status();
                                    1-  893     	MCALL	_get_p_ext_int_status
     0047 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  894     	.line	1522, "main.c"; 	if ((bFlag_p_ext_int_is_high) && (P_I2C_INT)) // if (bFlag_p_ext_int_is_high)
                                    1-  895     	BANKSEL	_vFlag_1
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 09rr                      1-  896     	BTRSS	_vFlag_1,3
                                    1-  897     	MGOTO	_02503_DS_
     004A 3rrr                      3-   62 m1      LGOTO rom_address
     004B 0Drr                      1-  898     	BTRSC	_PORTAbits,2
                                    1-  899     	.line	1524, "main.c"; 	is_chg_or_dischg();
                                    1-  900     	MCALL	_is_chg_or_dischg
     004C 2rrr                      3-   65 m1      LCALL rom_address
     004D                           1-  901     _02503_DS_:
                                    1-  902     	.line	1527, "main.c"; 	if (!(timer_slice_16ms & 0x1F))
                                    1-  903     	BANKSEL	_timer_slice_16ms
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 01rr                      1-  904     	MOVR	_timer_slice_16ms,W
     004F 221F                      1-  905     	ANDIA	0x1f
     0050 0903                      1-  906     	BTRSS	STATUS,2
                                    1-  907     	MGOTO	_02512_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  908     	.line	1529, "main.c"; 	bFlag_blink ^= 1;
     0052 2180                      1-  909     	MOVIA	0x80
                                    1-  910     	BANKSEL	_vFlag_0
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 12rr                      1-  911     	XORAR	_vFlag_0,F
                                    1-  912     	.line	1534, "main.c"; 	if ((bFlag_p_ext_int_is_high) && (P_I2C_INT))
                                    1-  913     	BANKSEL	_vFlag_1
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 09rr                      1-  914     	BTRSS	_vFlag_1,3
                                    1-  915     	MGOTO	_02509_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
     0058 09rr                      1-  916     	BTRSS	_PORTAbits,2
                                    1-  917     	MGOTO	_02509_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  918     	.line	1536, "main.c"; 	if (0 == skipGetCapTimer)
                                    1-  919     	BANKSEL	_skipGetCapTimer
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1-  920     	MOVR	_skipGetCapTimer,W
     005C 0903                      1-  921     	BTRSS	STATUS,2
                                    1-  922     	MGOTO	_02506_DS_
     005D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  923     	.line	1538, "main.c"; 	get_cap();
                                    1-  924     	MCALL	_get_cap
     005E 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  925     	MGOTO	_02509_DS_
     005F 3rrr                      3-   62 m1      LGOTO rom_address
     0060                           1-  926     _02506_DS_:
                                    1-  927     	.line	1542, "main.c"; 	skipGetCapTimer--;
                                    1-  928     	BANKSEL	_skipGetCapTimer
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1-  929     	MOVR	_skipGetCapTimer,W
                                    1-  930     	BANKSEL	r0x102E
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 00rr                      1-  931     	MOVAR	r0x102E
     0064 06rr                      1-  932     	DECR	r0x102E,W
                                    1-  933     	BANKSEL	_skipGetCapTimer
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 00rr                      1-  934     	MOVAR	_skipGetCapTimer
     0067                           1-  935     _02509_DS_:
                                    1-  936     	.line	1545, "main.c"; 	app_display_all();
                                    1-  937     	MCALL	_app_display_all
     0067 2rrr                      3-   65 m1      LCALL rom_address
     0068                           1-  938     _02512_DS_:
                                    1-  939     	.line	1547, "main.c"; 	if (!(timer_slice_16ms & 0x3F))
                                    1-  940     	BANKSEL	_timer_slice_16ms
     0068 rrrr                      3-  109 m1      .banksel ram_address
     0069 01rr                      1-  941     	MOVR	_timer_slice_16ms,W
     006A 223F                      1-  942     	ANDIA	0x3f
     006B 0903                      1-  943     	BTRSS	STATUS,2
                                    1-  944     	MGOTO	_02529_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  945     	.line	1552, "main.c"; 	if ((0 == bFlag_charger_on) && (!P_I2C_INT))
                                    1-  946     	BANKSEL	_vFlag_1
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 0Err                      1-  947     	BTRSC	_vFlag_1,5
                                    1-  948     	MGOTO	_02529_DS_
     006F 3rrr                      3-   62 m1      LGOTO rom_address
     0070 0Drr                      1-  949     	BTRSC	_PORTAbits,2
                                    1-  950     	MGOTO	_02529_DS_
     0071 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  951     	.line	1557, "main.c"; 	if (!delaySleepTimer)
                                    1-  952     	BANKSEL	_delaySleepTimer
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 01rr                      1-  953     	MOVR	_delaySleepTimer,W
     0074 0903                      1-  954     	BTRSS	STATUS,2
                                    1-  955     	MGOTO	_02517_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  956     	.line	1564, "main.c"; 	CLRWDT();
     0076 0002                      1-  957     	clrwdt
                                    1-  958     	.line	1565, "main.c"; 	INTE = 0x00;  // Timer0 overflow interrupt enable bit
     0077 02rr                      1-  959     	CLRR	_INTE
                                    1-  960     	.line	1566, "main.c"; 	PCON = 0x58;  // PCON = 0xC8;
     0078 2158                      1-  961     	MOVIA	0x58
     0079 00rr                      1-  962     	MOVAR	_PCON
                                    1-  963     	.line	1567, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     007A 0200                      1-  964     	CLRA	
     007B 000r                      1-  965     	IOST	_PCON1
                                    1-  966     	.line	1568, "main.c"; 	INTF = 0;
     007C 02rr                      1-  967     	CLRR	_INTF
                                    1-  968     	.line	1569, "main.c"; 	DISI();
     007D 0013                      1-  969     	DISI
                                    1-  970     	.line	1577, "main.c"; 	PORTA = 0x00;
     007E 02rr                      1-  971     	CLRR	_PORTA
                                    1-  972     	.line	1578, "main.c"; 	PORTB = 0x00;
     007F 02rr                      1-  973     	CLRR	_PORTB
                                    1-  974     	.line	1579, "main.c"; 	IOSTA = 0x00;
     0080 0200                      1-  975     	CLRA	
     0081 000r                      1-  976     	IOST	_IOSTA
                                    1-  977     	.line	1580, "main.c"; 	IOSTB = 0x00;
     0082 000r                      1-  978     	IOST	_IOSTB
                                    1-  979     	.line	1581, "main.c"; 	P_KEY_INPUT;
     0083 001r                      1-  980     	IOSTR	_IOSTB
                                    1-  981     	BANKSEL	r0x102E
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 00rr                      1-  982     	MOVAR	r0x102E
     0086 18rr                      1-  983     	BSR	r0x102E,0
     0087 01rr                      1-  984     	MOVR	r0x102E,W
     0088 000r                      1-  985     	IOST	_IOSTB
                                    1-  986     	.line	1582, "main.c"; 	P_KEY_IPS_INPUT;
     0089 001r                      1-  987     	IOSTR	_IOSTB
     008A 00rr                      1-  988     	MOVAR	r0x102E
     008B 18rr                      1-  989     	BSR	r0x102E,1
     008C 01rr                      1-  990     	MOVR	r0x102E,W
     008D 000r                      1-  991     	IOST	_IOSTB
                                    1-  992     	.line	1583, "main.c"; 	P_I2C_INT_INPUT;
     008E 001r                      1-  993     	IOSTR	_IOSTA
     008F 00rr                      1-  994     	MOVAR	r0x102E
     0090 19rr                      1-  995     	BSR	r0x102E,2
     0091 01rr                      1-  996     	MOVR	r0x102E,W
     0092 000r                      1-  997     	IOST	_IOSTA
                                    1-  998     	.line	1584, "main.c"; 	P_I2C_SCL_INPUT;
     0093 001r                      1-  999     	IOSTR	_IOSTA
     0094 00rr                      1- 1000     	MOVAR	r0x102E
     0095 1Arr                      1- 1001     	BSR	r0x102E,4
     0096 01rr                      1- 1002     	MOVR	r0x102E,W
     0097 000r                      1- 1003     	IOST	_IOSTA
                                    1- 1004     	.line	1585, "main.c"; 	P_I2C_SDA_INPUT;
     0098 001r                      1- 1005     	IOSTR	_IOSTA
     0099 00rr                      1- 1006     	MOVAR	r0x102E
     009A 19rr                      1- 1007     	BSR	r0x102E,3
     009B 01rr                      1- 1008     	MOVR	r0x102E,W
     009C 000r                      1- 1009     	IOST	_IOSTA
                                    1- 1010     	.line	1608, "main.c"; 	AWUCON = (C_PA2_Wakeup); // OK
     009D 2104                      1- 1011     	MOVIA	0x04
     009E 00rr                      1- 1012     	MOVAR	_AWUCON
                                    1- 1013     	.line	1609, "main.c"; 	BWUCON = C_PB0_Wakeup;   // OK
     009F 2101                      1- 1014     	MOVIA	0x01
     00A0 00rr                      1- 1015     	MOVAR	_BWUCON
                                    1- 1016     	.line	1611, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     00A1 2102                      1- 1017     	MOVIA	0x02
     00A2 00rr                      1- 1018     	MOVAR	_INTE
                                    1- 1019     	.line	1612, "main.c"; 	INTF = 0;
     00A3 02rr                      1- 1020     	CLRR	_INTF
                                    1- 1021     	.line	1618, "main.c"; 	if (!P_KEY)
     00A4 08rr                      1- 1022     	BTRSS	_PORTBbits,0
                                    1- 1023     	MGOTO	_02515_DS_
     00A5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1024     	.line	1622, "main.c"; 	NOP();
     00A6 0000                      1- 1025     	nop
                                    1- 1026     	.line	1623, "main.c"; 	NOP();
     00A7 0000                      1- 1027     	nop
                                    1- 1028     	.line	1624, "main.c"; 	UPDATE_REG(PORTB);
     00A8 01rr                      1- 1029     	MOVR	_PORTB,F
                                    1- 1030     	.line	1625, "main.c"; 	UPDATE_REG(PORTA);
     00A9 01rr                      1- 1031     	MOVR	_PORTA,F
                                    1- 1032     	.line	1626, "main.c"; 	NOP();
     00AA 0000                      1- 1033     	nop
                                    1- 1034     	.line	1627, "main.c"; 	NOP();
     00AB 0000                      1- 1035     	nop
                                    1- 1036     	.line	1628, "main.c"; 	SLEEP();
     00AC 0001                      1- 1037     	sleep
                                    1- 1038     	.line	1629, "main.c"; 	NOP();
     00AD 0000                      1- 1039     	nop
                                    1- 1040     	.line	1630, "main.c"; 	NOP();
     00AE 0000                      1- 1041     	nop
     00AF                           1- 1042     _02515_DS_:
                                    1- 1043     	.line	1632, "main.c"; 	INTFbits.PABIF = 0;
     00AF 21FD                      1- 1044     	MOVIA	0xfd
     00B0 00rr                      1- 1045     	MOVAR	(_INTFbits + 0)
                                    1- 1046     	.line	1636, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     00B1 2114                      1- 1047     	MOVIA	0x14
                                    1- 1048     	BANKSEL	_delaySleepTimer
     00B2 rrrr                      3-  109 m1      .banksel ram_address
     00B3 00rr                      1- 1049     	MOVAR	_delaySleepTimer
                                    1- 1050     	.line	1637, "main.c"; 	skipGetCapTimer = 3;
     00B4 2103                      1- 1051     	MOVIA	0x03
                                    1- 1052     	BANKSEL	_skipGetCapTimer
     00B5 rrrr                      3-  109 m1      .banksel ram_address
     00B6 00rr                      1- 1053     	MOVAR	_skipGetCapTimer
                                    1- 1054     	.line	1643, "main.c"; 	PCON = 0xC8;
     00B7 21C8                      1- 1055     	MOVIA	0xc8
     00B8 00rr                      1- 1056     	MOVAR	_PCON
                                    1- 1057     	.line	1656, "main.c"; 	PCON1 |= C_TMR0_En;            // Enable Timer0
     00B9 001r                      1- 1058     	IOSTR	_PCON1
                                    1- 1059     	BANKSEL	r0x102E
     00BA rrrr                      3-  109 m1      .banksel ram_address
     00BB 00rr                      1- 1060     	MOVAR	r0x102E
     00BC 18rr                      1- 1061     	BSR	r0x102E,0
     00BD 01rr                      1- 1062     	MOVR	r0x102E,W
     00BE 000r                      1- 1063     	IOST	_PCON1
                                    1- 1064     	.line	1657, "main.c"; 	INTE = (0x01 /*| C_INT_LVD*/); // Timer0 overflow interrupt enable bit
     00BF 2101                      1- 1065     	MOVIA	0x01
     00C0 00rr                      1- 1066     	MOVAR	_INTE
                                    1- 1067     	.line	1658, "main.c"; 	ENI();
     00C1 0004                      1- 1068     	ENI
                                    1- 1069     	MGOTO	_02529_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
     00C3                           1- 1070     _02517_DS_:
                                    1- 1071     	.line	1662, "main.c"; 	delaySleepTimer--;
                                    1- 1072     	BANKSEL	_delaySleepTimer
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 01rr                      1- 1073     	MOVR	_delaySleepTimer,W
                                    1- 1074     	BANKSEL	r0x102E
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 1075     	MOVAR	r0x102E
     00C7 06rr                      1- 1076     	DECR	r0x102E,W
                                    1- 1077     	BANKSEL	_delaySleepTimer
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 00rr                      1- 1078     	MOVAR	_delaySleepTimer
                                    1- 1079     	MGOTO	_02529_DS_
     00CA 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1080     	.line	1671, "main.c"; 	}
                                    1- 1081     	RETURN	
     00CB 0010                      3-   39 m1      ret
                                    1- 1082     ; exit point of _main
                                    1- 1084     ;***
                                    1- 1085     ;  pBlock Stats: dbName = C
                                    1- 1086     ;***
                                    1- 1087     ;has an exit
                                    1- 1088     ;functions called:
                                    1- 1089     ;   __gptrget1
                                    1- 1090     ;   __gptrget1
                                    1- 1091     ;   __divuchar
                                    1- 1092     ;   __moduchar
                                    1- 1093     ;   __gptrget1
                                    1- 1094     ;   __gptrget1
                                    1- 1095     ;   _disable_breathing_mode
                                    1- 1096     ;   __gptrget1
                                    1- 1097     ;   __gptrget1
                                    1- 1098     ;   __divuchar
                                    1- 1099     ;   __moduchar
                                    1- 1100     ;   __gptrget1
                                    1- 1101     ;   __gptrget1
                                    1- 1102     ;   __divuchar
                                    1- 1103     ;   __moduchar
                                    1- 1104     ;   __gptrget1
                                    1- 1105     ;   __gptrget1
                                    1- 1106     ;   __gptrget1
                                    1- 1107     ;   __gptrget1
                                    1- 1108     ;   __gptrget1
                                    1- 1109     ;   __gptrget1
                                    1- 1110     ;   __divuchar
                                    1- 1111     ;   __moduchar
                                    1- 1112     ;   __gptrget1
                                    1- 1113     ;   __gptrget1
                                    1- 1114     ;   _disable_breathing_mode
                                    1- 1115     ;   __gptrget1
                                    1- 1116     ;   __gptrget1
                                    1- 1117     ;   __divuchar
                                    1- 1118     ;   __moduchar
                                    1- 1119     ;   __gptrget1
                                    1- 1120     ;   __gptrget1
                                    1- 1121     ;   __divuchar
                                    1- 1122     ;   __moduchar
                                    1- 1123     ;   __gptrget1
                                    1- 1124     ;   __gptrget1
                                    1- 1125     ;   __gptrget1
                                    1- 1126     ;   __gptrget1
                                    1- 1127     ;5 compiler assigned registers:
                                    1- 1128     ;   r0x101B
                                    1- 1129     ;   STK01
                                    1- 1130     ;   STK00
                                    1- 1131     ;   r0x101C
                                    1- 1132     ;   r0x101D
                                    1- 1133     ;; Starting pCode block
                                    1- 1134     .segment "code"; module=main, function=_app_display_all
                                    1- 1136     ;local variable name mapping:
     0000                           1- 1139     _app_display_all:
                                    1- 1140     ; 2 exit points
                                    1- 1141     	.line	1231, "main.c"; 	if (forceDispTimer)
                                    1- 1142     	BANKSEL	_forceDispTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1143     	MOVR	_forceDispTimer,W
     0002 0D03                      1- 1144     	BTRSC	STATUS,2
                                    1- 1145     	MGOTO	_02495_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1146     	.line	1233, "main.c"; 	forceDispTimer--;
     0004 01rr                      1- 1147     	MOVR	_forceDispTimer,W
                                    1- 1148     	BANKSEL	r0x101B
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1149     	MOVAR	r0x101B
     0007 06rr                      1- 1150     	DECR	r0x101B,W
                                    1- 1151     	BANKSEL	_forceDispTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1152     	MOVAR	_forceDispTimer
                                    1- 1153     	.line	1234, "main.c"; 	displayHundred = DispTable[1];
     000A 21rr                      1- 1154     	MOVIA	(_DispTable + 1)
     000B 00rr                      1- 1155     	MOVAR	STK01
     000C 21rr                      1- 1156     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     000D 00rr                      1- 1157     	MOVAR	STK00
     000E 2180                      1- 1158     	MOVIA	0x80
                                    1- 1159     	MCALL	__gptrget1
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1160     	BANKSEL	_displayHundred
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1161     	MOVAR	_displayHundred
                                    1- 1162     	.line	1236, "main.c"; 	displayHundred |= (SEG_E | SEG_D);
     0012 2118                      1- 1163     	MOVIA	0x18
     0013 11rr                      1- 1164     	IORAR	_displayHundred,F
                                    1- 1165     	.line	1237, "main.c"; 	displayDecade = DispTable[8];
     0014 21rr                      1- 1166     	MOVIA	(_DispTable + 8)
     0015 00rr                      1- 1167     	MOVAR	STK01
     0016 21rr                      1- 1168     	MOVIA	((_DispTable + 8) >> 8) & 0xff
     0017 00rr                      1- 1169     	MOVAR	STK00
     0018 2180                      1- 1170     	MOVIA	0x80
                                    1- 1171     	MCALL	__gptrget1
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1172     	BANKSEL	_displayDigit
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1173     	MOVAR	_displayDigit
                                    1- 1174     	BANKSEL	r0x101B
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1175     	MOVAR	r0x101B
                                    1- 1176     	BANKSEL	_displayDecade
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1177     	MOVAR	_displayDecade
                                    1- 1178     ;;102	MOVR	r0x101B,W
                                    1- 1179     	.line	1240, "main.c"; 	if (!forceDispTimer)
                                    1- 1180     	BANKSEL	_forceDispTimer
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1- 1181     	MOVR	_forceDispTimer,W
     0022 0903                      1- 1182     	BTRSS	STATUS,2
                                    1- 1183     	MGOTO	_02497_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1184     	.line	1242, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1185     	BANKSEL	_displayHundred
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1- 1186     	CLRR	_displayHundred
                                    1- 1187     	.line	1243, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1188     	BANKSEL	_displayDecade
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 02rr                      1- 1189     	CLRR	_displayDecade
                                    1- 1190     	.line	1244, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1191     	BANKSEL	_displayDigit
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 02rr                      1- 1192     	CLRR	_displayDigit
                                    1- 1193     	MGOTO	_02497_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
     002B                           1- 1194     _02495_DS_:
                                    1- 1195     	.line	1249, "main.c"; 	else if (bFlag_charger_on) // bFlag_charger_nbFlag_vin_plug_in
                                    1- 1196     	BANKSEL	_vFlag_1
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 0Arr                      1- 1197     	BTRSS	_vFlag_1,5
                                    1- 1198     	MGOTO	_02492_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1199     	.line	1251, "main.c"; 	underVoltageDispTimer = 0;
                                    1- 1200     	BANKSEL	_underVoltageDispTimer
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 02rr                      1- 1201     	CLRR	_underVoltageDispTimer
                                    1- 1202     	.line	1253, "main.c"; 	displayTimer = CONST_TIMER_DISP; // 拨出显示5秒
     0030 2114                      1- 1203     	MOVIA	0x14
                                    1- 1204     	BANKSEL	_displayTimer
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1205     	MOVAR	_displayTimer
                                    1- 1206     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1207     	.line	1255, "main.c"; 	if (displayData < 100) // 充电
     0033 2164                      1- 1208     	MOVIA	0x64
                                    1- 1209     	BANKSEL	_displayData
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 04rr                      1- 1210     	SUBAR	_displayData,W
     0036 0C03                      1- 1211     	BTRSC	STATUS,0
                                    1- 1212     	MGOTO	_02454_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1213     	.line	1257, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1214     	BANKSEL	_displayHundred
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 02rr                      1- 1215     	CLRR	_displayHundred
                                    1- 1216     	.line	1258, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1217     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 0Arr                      1- 1218     	BTRSS	_vFlag_0,4
                                    1- 1219     	MGOTO	_00001_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1220     	.line	1260, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1221     	BANKSEL	_displayHundred
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 19rr                      1- 1222     	BSR	_displayHundred,3
     003F                           1- 1223     _00001_DS_:
                                    1- 1224     	.line	1263, "main.c"; 	if (bFlag_blink)
                                    1- 1225     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 0Brr                      1- 1226     	BTRSS	_vFlag_0,7
                                    1- 1227     	MGOTO	_02449_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1228     	.line	1265, "main.c"; 	i = displayData / 10;
     0042 210A                      1- 1229     	MOVIA	0x0a
     0043 00rr                      1- 1230     	MOVAR	STK00
                                    1- 1231     	BANKSEL	_displayData
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1232     	MOVR	_displayData,W
                                    1- 1233     	MCALL	__divuchar
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1234     	BANKSEL	r0x101B
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 1235     	MOVAR	r0x101B
                                    1- 1236     	.line	1266, "main.c"; 	j = displayData % 10;
     0049 210A                      1- 1237     	MOVIA	0x0a
     004A 00rr                      1- 1238     	MOVAR	STK00
                                    1- 1239     	BANKSEL	_displayData
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1240     	MOVR	_displayData,W
                                    1- 1241     	MCALL	__moduchar
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1242     	BANKSEL	r0x101C
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 1243     	MOVAR	r0x101C
                                    1- 1244     	.line	1267, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1245     	BANKSEL	_displayDecade
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 02rr                      1- 1246     	CLRR	_displayDecade
                                    1- 1247     	.line	1269, "main.c"; 	if (i) // 十位是0 不显示
                                    1- 1248     	BANKSEL	r0x101B
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1249     	MOVR	r0x101B,W
     0054 0D03                      1- 1250     	BTRSC	STATUS,2
                                    1- 1251     	MGOTO	_02447_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1252     	.line	1271, "main.c"; 	displayDecade = DispTable[i];
     0056 21rr                      1- 1253     	MOVIA	(_DispTable + 0)
     0057 03rr                      1- 1254     	ADDAR	r0x101B,F
     0058 21rr                      1- 1255     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0059 2600                      1- 1256     	ADCIA	0x00
                                    1- 1257     	BANKSEL	r0x101D
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1258     	MOVAR	r0x101D
                                    1- 1259     	BANKSEL	r0x101B
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1260     	MOVR	r0x101B,W
     005E 00rr                      1- 1261     	MOVAR	STK01
                                    1- 1262     	BANKSEL	r0x101D
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1263     	MOVR	r0x101D,W
     0061 00rr                      1- 1264     	MOVAR	STK00
     0062 2180                      1- 1265     	MOVIA	0x80
                                    1- 1266     	MCALL	__gptrget1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1267     	BANKSEL	_displayDecade
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1268     	MOVAR	_displayDecade
     0066                           1- 1269     _02447_DS_:
                                    1- 1270     	.line	1274, "main.c"; 	displayDigit = DispTable[j];
     0066 21rr                      1- 1271     	MOVIA	(_DispTable + 0)
                                    1- 1272     	BANKSEL	r0x101C
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1- 1273     	ADDAR	r0x101C,F
     0069 21rr                      1- 1274     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     006A 2600                      1- 1275     	ADCIA	0x00
                                    1- 1276     	BANKSEL	r0x101B
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1277     	MOVAR	r0x101B
                                    1- 1278     	BANKSEL	r0x101C
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1279     	MOVR	r0x101C,W
     006F 00rr                      1- 1280     	MOVAR	STK01
                                    1- 1281     	BANKSEL	r0x101B
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1282     	MOVR	r0x101B,W
     0072 00rr                      1- 1283     	MOVAR	STK00
     0073 2180                      1- 1284     	MOVIA	0x80
                                    1- 1285     	MCALL	__gptrget1
     0074 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1286     	BANKSEL	_displayDigit
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 00rr                      1- 1287     	MOVAR	_displayDigit
                                    1- 1288     	MGOTO	_02497_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 1289     _02449_DS_:
                                    1- 1290     	.line	1278, "main.c"; 	displayDigit = DISP_ALL_OFF; // 个位闪烁 充电
                                    1- 1291     	BANKSEL	_displayDigit
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 02rr                      1- 1292     	CLRR	_displayDigit
                                    1- 1293     	MGOTO	_02497_DS_
     007A 3rrr                      3-   62 m1      LGOTO rom_address
     007B                           1- 1294     _02454_DS_:
                                    1- 1295     	.line	1283, "main.c"; 	disable_breathing_mode();
                                    1- 1296     	MCALL	_disable_breathing_mode
     007B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1297     	.line	1284, "main.c"; 	P_LED_G_ON;
     007C 19rr                      1- 1298     	BSR	_PORTBbits,3
                                    1- 1299     	.line	1285, "main.c"; 	displayHundred = DispTable[1];
     007D 21rr                      1- 1300     	MOVIA	(_DispTable + 1)
     007E 00rr                      1- 1301     	MOVAR	STK01
     007F 21rr                      1- 1302     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0080 00rr                      1- 1303     	MOVAR	STK00
     0081 2180                      1- 1304     	MOVIA	0x80
                                    1- 1305     	MCALL	__gptrget1
     0082 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1306     	BANKSEL	_displayHundred
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 00rr                      1- 1307     	MOVAR	_displayHundred
                                    1- 1308     	.line	1286, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1309     	BANKSEL	_vFlag_0
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 0Arr                      1- 1310     	BTRSS	_vFlag_0,4
                                    1- 1311     	MGOTO	_00002_DS_
     0087 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1312     	.line	1288, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1313     	BANKSEL	_displayHundred
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 19rr                      1- 1314     	BSR	_displayHundred,3
     008A                           1- 1315     _00002_DS_:
                                    1- 1316     	.line	1290, "main.c"; 	displayDecade = DispTable[0];
     008A 21rr                      1- 1317     	MOVIA	(_DispTable + 0)
     008B 00rr                      1- 1318     	MOVAR	STK01
     008C 21rr                      1- 1319     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     008D 00rr                      1- 1320     	MOVAR	STK00
     008E 2180                      1- 1321     	MOVIA	0x80
                                    1- 1322     	MCALL	__gptrget1
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1323     	BANKSEL	_displayDigit
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 1324     	MOVAR	_displayDigit
                                    1- 1325     	BANKSEL	r0x101B
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 1326     	MOVAR	r0x101B
                                    1- 1327     	BANKSEL	_displayDecade
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 00rr                      1- 1328     	MOVAR	_displayDecade
                                    1- 1329     ;;101	MOVR	r0x101B,W
                                    1- 1330     	.line	1291, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1331     	MGOTO	_02497_DS_
     0096 3rrr                      3-   62 m1      LGOTO rom_address
     0097                           1- 1332     _02492_DS_:
                                    1- 1333     	.line	1298, "main.c"; 	if (underVoltageDispTimer) // 欠压关机显示
                                    1- 1334     	BANKSEL	_underVoltageDispTimer
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 01rr                      1- 1335     	MOVR	_underVoltageDispTimer,W
     0099 0D03                      1- 1336     	BTRSC	STATUS,2
                                    1- 1337     	MGOTO	_02489_DS_
     009A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1338     	.line	1300, "main.c"; 	underVoltageDispTimer--;
     009B 01rr                      1- 1339     	MOVR	_underVoltageDispTimer,W
                                    1- 1340     	BANKSEL	r0x101B
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 00rr                      1- 1341     	MOVAR	r0x101B
     009E 06rr                      1- 1342     	DECR	r0x101B,W
                                    1- 1343     	BANKSEL	_underVoltageDispTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 1344     	MOVAR	_underVoltageDispTimer
                                    1- 1345     	.line	1301, "main.c"; 	displayTimer = 0;
                                    1- 1346     	BANKSEL	_displayTimer
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1- 1347     	CLRR	_displayTimer
                                    1- 1348     	.line	1302, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1349     	BANKSEL	_displayHundred
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 02rr                      1- 1350     	CLRR	_displayHundred
                                    1- 1351     	.line	1303, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1352     	BANKSEL	_vFlag_0
     00A5 rrrr                      3-  109 m1      .banksel ram_address
     00A6 0Arr                      1- 1353     	BTRSS	_vFlag_0,4
                                    1- 1354     	MGOTO	_00003_DS_
     00A7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1355     	.line	1305, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1356     	BANKSEL	_displayHundred
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 19rr                      1- 1357     	BSR	_displayHundred,3
     00AA                           1- 1358     _00003_DS_:
                                    1- 1359     	.line	1314, "main.c"; 	if (underVoltageDispTimer % 2)
                                    1- 1360     	BANKSEL	_underVoltageDispTimer
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 08rr                      1- 1361     	BTRSS	_underVoltageDispTimer,0
                                    1- 1362     	MGOTO	_02464_DS_
     00AC 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1363     	.line	1316, "main.c"; 	i = displayData / 10;
     00AD 210A                      1- 1364     	MOVIA	0x0a
     00AE 00rr                      1- 1365     	MOVAR	STK00
                                    1- 1366     	BANKSEL	_displayData
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 01rr                      1- 1367     	MOVR	_displayData,W
                                    1- 1368     	MCALL	__divuchar
     00B1 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1369     	BANKSEL	r0x101B
     00B2 rrrr                      3-  109 m1      .banksel ram_address
     00B3 00rr                      1- 1370     	MOVAR	r0x101B
                                    1- 1371     	.line	1317, "main.c"; 	j = displayData % 10;
     00B4 210A                      1- 1372     	MOVIA	0x0a
     00B5 00rr                      1- 1373     	MOVAR	STK00
                                    1- 1374     	BANKSEL	_displayData
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 1375     	MOVR	_displayData,W
                                    1- 1376     	MCALL	__moduchar
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1377     	BANKSEL	r0x101C
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 1378     	MOVAR	r0x101C
                                    1- 1379     	.line	1319, "main.c"; 	if (i)
                                    1- 1380     	BANKSEL	r0x101B
     00BB rrrr                      3-  109 m1      .banksel ram_address
     00BC 01rr                      1- 1381     	MOVR	r0x101B,W
     00BD 0D03                      1- 1382     	BTRSC	STATUS,2
                                    1- 1383     	MGOTO	_02459_DS_
     00BE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1384     	.line	1321, "main.c"; 	displayDecade = DispTable[i];
     00BF 21rr                      1- 1385     	MOVIA	(_DispTable + 0)
     00C0 03rr                      1- 1386     	ADDAR	r0x101B,F
     00C1 21rr                      1- 1387     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00C2 2600                      1- 1388     	ADCIA	0x00
                                    1- 1389     	BANKSEL	r0x101D
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 00rr                      1- 1390     	MOVAR	r0x101D
                                    1- 1391     	BANKSEL	r0x101B
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 01rr                      1- 1392     	MOVR	r0x101B,W
     00C7 00rr                      1- 1393     	MOVAR	STK01
                                    1- 1394     	BANKSEL	r0x101D
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 01rr                      1- 1395     	MOVR	r0x101D,W
     00CA 00rr                      1- 1396     	MOVAR	STK00
     00CB 2180                      1- 1397     	MOVIA	0x80
                                    1- 1398     	MCALL	__gptrget1
     00CC 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1399     	BANKSEL	_displayDecade
     00CD rrrr                      3-  109 m1      .banksel ram_address
     00CE 00rr                      1- 1400     	MOVAR	_displayDecade
                                    1- 1401     	MGOTO	_02460_DS_
     00CF 3rrr                      3-   62 m1      LGOTO rom_address
     00D0                           1- 1402     _02459_DS_:
                                    1- 1403     	.line	1325, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1404     	BANKSEL	_displayDecade
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 02rr                      1- 1405     	CLRR	_displayDecade
     00D2                           1- 1406     _02460_DS_:
                                    1- 1407     	.line	1328, "main.c"; 	displayDigit = DispTable[j];
     00D2 21rr                      1- 1408     	MOVIA	(_DispTable + 0)
                                    1- 1409     	BANKSEL	r0x101C
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 03rr                      1- 1410     	ADDAR	r0x101C,F
     00D5 21rr                      1- 1411     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00D6 2600                      1- 1412     	ADCIA	0x00
                                    1- 1413     	BANKSEL	r0x101B
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 00rr                      1- 1414     	MOVAR	r0x101B
                                    1- 1415     	BANKSEL	r0x101C
     00D9 rrrr                      3-  109 m1      .banksel ram_address
     00DA 01rr                      1- 1416     	MOVR	r0x101C,W
     00DB 00rr                      1- 1417     	MOVAR	STK01
                                    1- 1418     	BANKSEL	r0x101B
     00DC rrrr                      3-  109 m1      .banksel ram_address
     00DD 01rr                      1- 1419     	MOVR	r0x101B,W
     00DE 00rr                      1- 1420     	MOVAR	STK00
     00DF 2180                      1- 1421     	MOVIA	0x80
                                    1- 1422     	MCALL	__gptrget1
     00E0 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1423     	BANKSEL	_displayDigit
     00E1 rrrr                      3-  109 m1      .banksel ram_address
     00E2 00rr                      1- 1424     	MOVAR	_displayDigit
                                    1- 1425     	MGOTO	_00004_DS_
     00E3 3rrr                      3-   62 m1      LGOTO rom_address
     00E4                           1- 1426     _02464_DS_:
                                    1- 1427     	.line	1332, "main.c"; 	if (0 == displayData)
                                    1- 1428     	BANKSEL	_displayData
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 01rr                      1- 1429     	MOVR	_displayData,W
     00E6 0903                      1- 1430     	BTRSS	STATUS,2
                                    1- 1431     	MGOTO	_00004_DS_
     00E7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1432     	.line	1334, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1433     	BANKSEL	_displayDigit
     00E8 rrrr                      3-  109 m1      .banksel ram_address
     00E9 02rr                      1- 1434     	CLRR	_displayDigit
     00EA                           1- 1435     _00004_DS_:
                                    1- 1436     	.line	1338, "main.c"; 	if (0 == underVoltageDispTimer)
                                    1- 1437     	BANKSEL	_underVoltageDispTimer
     00EA rrrr                      3-  109 m1      .banksel ram_address
     00EB 01rr                      1- 1438     	MOVR	_underVoltageDispTimer,W
     00EC 0903                      1- 1439     	BTRSS	STATUS,2
                                    1- 1440     	MGOTO	_02497_DS_
     00ED 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1441     	.line	1340, "main.c"; 	if (displayData)
                                    1- 1442     	BANKSEL	_displayData
     00EE rrrr                      3-  109 m1      .banksel ram_address
     00EF 01rr                      1- 1443     	MOVR	_displayData,W
     00F0 0D03                      1- 1444     	BTRSC	STATUS,2
                                    1- 1445     	MGOTO	_02497_DS_
     00F1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1446     	.line	1342, "main.c"; 	displayData--;
     00F2 01rr                      1- 1447     	MOVR	_displayData,W
                                    1- 1448     	BANKSEL	r0x101B
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 00rr                      1- 1449     	MOVAR	r0x101B
     00F5 06rr                      1- 1450     	DECR	r0x101B,W
                                    1- 1451     	BANKSEL	_displayData
     00F6 rrrr                      3-  109 m1      .banksel ram_address
     00F7 00rr                      1- 1452     	MOVAR	_displayData
                                    1- 1453     	.line	1343, "main.c"; 	underVoltageDispTimer = (CONST_TIMER_DISP_UV - 1);
     00F8 210A                      1- 1454     	MOVIA	0x0a
                                    1- 1455     	BANKSEL	_underVoltageDispTimer
     00F9 rrrr                      3-  109 m1      .banksel ram_address
     00FA 00rr                      1- 1456     	MOVAR	_underVoltageDispTimer
                                    1- 1457     	MGOTO	_02497_DS_
     00FB 3rrr                      3-   62 m1      LGOTO rom_address
     00FC                           1- 1458     _02489_DS_:
                                    1- 1459     	.line	1347, "main.c"; 	else if (displayTimer)
                                    1- 1460     	BANKSEL	_displayTimer
     00FC rrrr                      3-  109 m1      .banksel ram_address
     00FD 01rr                      1- 1461     	MOVR	_displayTimer,W
     00FE 0D03                      1- 1462     	BTRSC	STATUS,2
                                    1- 1463     	MGOTO	_02486_DS_
     00FF 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1464     	.line	1349, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1465     	BANKSEL	_displayHundred
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 02rr                      1- 1466     	CLRR	_displayHundred
                                    1- 1467     	.line	1351, "main.c"; 	displayTimer--;
                                    1- 1468     	BANKSEL	_displayTimer
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 01rr                      1- 1469     	MOVR	_displayTimer,W
                                    1- 1470     	BANKSEL	r0x101B
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 00rr                      1- 1471     	MOVAR	r0x101B
     0106 06rr                      1- 1472     	DECR	r0x101B,W
                                    1- 1473     	BANKSEL	_displayTimer
     0107 rrrr                      3-  109 m1      .banksel ram_address
     0108 00rr                      1- 1474     	MOVAR	_displayTimer
                                    1- 1475     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1476     	.line	1356, "main.c"; 	if (displayData < 100)
     0109 2164                      1- 1477     	MOVIA	0x64
                                    1- 1478     	BANKSEL	_displayData
     010A rrrr                      3-  109 m1      .banksel ram_address
     010B 04rr                      1- 1479     	SUBAR	_displayData,W
     010C 0C03                      1- 1480     	BTRSC	STATUS,0
                                    1- 1481     	MGOTO	_02483_DS_
     010D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1482     	.line	1358, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1483     	BANKSEL	_displayHundred
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 02rr                      1- 1484     	CLRR	_displayHundred
                                    1- 1485     	.line	1359, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1486     	BANKSEL	_vFlag_0
     0110 rrrr                      3-  109 m1      .banksel ram_address
     0111 0Arr                      1- 1487     	BTRSS	_vFlag_0,4
                                    1- 1488     	MGOTO	_00005_DS_
     0112 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1489     	.line	1361, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1490     	BANKSEL	_displayHundred
     0113 rrrr                      3-  109 m1      .banksel ram_address
     0114 19rr                      1- 1491     	BSR	_displayHundred,3
     0115                           1- 1492     _00005_DS_:
                                    1- 1493     	.line	1364, "main.c"; 	if (bFlag_blink)
                                    1- 1494     	BANKSEL	_vFlag_0
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 1495     	BTRSS	_vFlag_0,7
                                    1- 1496     	MGOTO	_02478_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1497     	.line	1366, "main.c"; 	i = displayData / 10;
     0118 210A                      1- 1498     	MOVIA	0x0a
     0119 00rr                      1- 1499     	MOVAR	STK00
                                    1- 1500     	BANKSEL	_displayData
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 01rr                      1- 1501     	MOVR	_displayData,W
                                    1- 1502     	MCALL	__divuchar
     011C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1503     	BANKSEL	r0x101B
     011D rrrr                      3-  109 m1      .banksel ram_address
     011E 00rr                      1- 1504     	MOVAR	r0x101B
                                    1- 1505     	.line	1367, "main.c"; 	j = displayData % 10;
     011F 210A                      1- 1506     	MOVIA	0x0a
     0120 00rr                      1- 1507     	MOVAR	STK00
                                    1- 1508     	BANKSEL	_displayData
     0121 rrrr                      3-  109 m1      .banksel ram_address
     0122 01rr                      1- 1509     	MOVR	_displayData,W
                                    1- 1510     	MCALL	__moduchar
     0123 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1511     	BANKSEL	r0x101C
     0124 rrrr                      3-  109 m1      .banksel ram_address
     0125 00rr                      1- 1512     	MOVAR	r0x101C
                                    1- 1513     	.line	1369, "main.c"; 	if (i)
                                    1- 1514     	BANKSEL	r0x101B
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 01rr                      1- 1515     	MOVR	r0x101B,W
     0128 0D03                      1- 1516     	BTRSC	STATUS,2
                                    1- 1517     	MGOTO	_02473_DS_
     0129 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1518     	.line	1371, "main.c"; 	displayDecade = DispTable[i];
     012A 21rr                      1- 1519     	MOVIA	(_DispTable + 0)
     012B 03rr                      1- 1520     	ADDAR	r0x101B,F
     012C 21rr                      1- 1521     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     012D 2600                      1- 1522     	ADCIA	0x00
                                    1- 1523     	BANKSEL	r0x101D
     012E rrrr                      3-  109 m1      .banksel ram_address
     012F 00rr                      1- 1524     	MOVAR	r0x101D
                                    1- 1525     	BANKSEL	r0x101B
     0130 rrrr                      3-  109 m1      .banksel ram_address
     0131 01rr                      1- 1526     	MOVR	r0x101B,W
     0132 00rr                      1- 1527     	MOVAR	STK01
                                    1- 1528     	BANKSEL	r0x101D
     0133 rrrr                      3-  109 m1      .banksel ram_address
     0134 01rr                      1- 1529     	MOVR	r0x101D,W
     0135 00rr                      1- 1530     	MOVAR	STK00
     0136 2180                      1- 1531     	MOVIA	0x80
                                    1- 1532     	MCALL	__gptrget1
     0137 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1533     	BANKSEL	_displayDecade
     0138 rrrr                      3-  109 m1      .banksel ram_address
     0139 00rr                      1- 1534     	MOVAR	_displayDecade
                                    1- 1535     	MGOTO	_02474_DS_
     013A 3rrr                      3-   62 m1      LGOTO rom_address
     013B                           1- 1536     _02473_DS_:
                                    1- 1537     	.line	1375, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1538     	BANKSEL	_displayDecade
     013B rrrr                      3-  109 m1      .banksel ram_address
     013C 02rr                      1- 1539     	CLRR	_displayDecade
     013D                           1- 1540     _02474_DS_:
                                    1- 1541     	.line	1378, "main.c"; 	displayDigit = DispTable[j];
     013D 21rr                      1- 1542     	MOVIA	(_DispTable + 0)
                                    1- 1543     	BANKSEL	r0x101C
     013E rrrr                      3-  109 m1      .banksel ram_address
     013F 03rr                      1- 1544     	ADDAR	r0x101C,F
     0140 21rr                      1- 1545     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0141 2600                      1- 1546     	ADCIA	0x00
                                    1- 1547     	BANKSEL	r0x101B
     0142 rrrr                      3-  109 m1      .banksel ram_address
     0143 00rr                      1- 1548     	MOVAR	r0x101B
                                    1- 1549     	BANKSEL	r0x101C
     0144 rrrr                      3-  109 m1      .banksel ram_address
     0145 01rr                      1- 1550     	MOVR	r0x101C,W
     0146 00rr                      1- 1551     	MOVAR	STK01
                                    1- 1552     	BANKSEL	r0x101B
     0147 rrrr                      3-  109 m1      .banksel ram_address
     0148 01rr                      1- 1553     	MOVR	r0x101B,W
     0149 00rr                      1- 1554     	MOVAR	STK00
     014A 2180                      1- 1555     	MOVIA	0x80
                                    1- 1556     	MCALL	__gptrget1
     014B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1557     	BANKSEL	_displayDigit
     014C rrrr                      3-  109 m1      .banksel ram_address
     014D 00rr                      1- 1558     	MOVAR	_displayDigit
                                    1- 1559     	MGOTO	_02497_DS_
     014E 3rrr                      3-   62 m1      LGOTO rom_address
     014F                           1- 1560     _02478_DS_:
                                    1- 1561     	.line	1383, "main.c"; 	if (0 == displayData)
                                    1- 1562     	BANKSEL	_displayData
     014F rrrr                      3-  109 m1      .banksel ram_address
     0150 01rr                      1- 1563     	MOVR	_displayData,W
     0151 0903                      1- 1564     	BTRSS	STATUS,2
                                    1- 1565     	MGOTO	_02497_DS_
     0152 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1566     	.line	1385, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1567     	BANKSEL	_displayDigit
     0153 rrrr                      3-  109 m1      .banksel ram_address
     0154 02rr                      1- 1568     	CLRR	_displayDigit
                                    1- 1569     	MGOTO	_02497_DS_
     0155 3rrr                      3-   62 m1      LGOTO rom_address
     0156                           1- 1570     _02483_DS_:
                                    1- 1571     	.line	1391, "main.c"; 	displayHundred = DispTable[1];
     0156 21rr                      1- 1572     	MOVIA	(_DispTable + 1)
     0157 00rr                      1- 1573     	MOVAR	STK01
     0158 21rr                      1- 1574     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0159 00rr                      1- 1575     	MOVAR	STK00
     015A 2180                      1- 1576     	MOVIA	0x80
                                    1- 1577     	MCALL	__gptrget1
     015B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1578     	BANKSEL	_displayHundred
     015C rrrr                      3-  109 m1      .banksel ram_address
     015D 00rr                      1- 1579     	MOVAR	_displayHundred
                                    1- 1580     	.line	1392, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1581     	BANKSEL	_vFlag_0
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 0Arr                      1- 1582     	BTRSS	_vFlag_0,4
                                    1- 1583     	MGOTO	_00006_DS_
     0160 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1584     	.line	1394, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1585     	BANKSEL	_displayHundred
     0161 rrrr                      3-  109 m1      .banksel ram_address
     0162 19rr                      1- 1586     	BSR	_displayHundred,3
     0163                           1- 1587     _00006_DS_:
                                    1- 1588     	.line	1396, "main.c"; 	displayDecade = DispTable[0];
     0163 21rr                      1- 1589     	MOVIA	(_DispTable + 0)
     0164 00rr                      1- 1590     	MOVAR	STK01
     0165 21rr                      1- 1591     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0166 00rr                      1- 1592     	MOVAR	STK00
     0167 2180                      1- 1593     	MOVIA	0x80
                                    1- 1594     	MCALL	__gptrget1
     0168 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1595     	BANKSEL	r0x101B
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 00rr                      1- 1596     	MOVAR	r0x101B
                                    1- 1597     	BANKSEL	_displayDecade
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 00rr                      1- 1598     	MOVAR	_displayDecade
                                    1- 1599     	.line	1397, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1600     	BANKSEL	r0x101B
     016D rrrr                      3-  109 m1      .banksel ram_address
     016E 01rr                      1- 1601     	MOVR	r0x101B,W
                                    1- 1602     	BANKSEL	_displayDigit
     016F rrrr                      3-  109 m1      .banksel ram_address
     0170 00rr                      1- 1603     	MOVAR	_displayDigit
                                    1- 1604     	MGOTO	_02497_DS_
     0171 3rrr                      3-   62 m1      LGOTO rom_address
     0172                           1- 1605     _02486_DS_:
                                    1- 1606     	.line	1402, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1607     	BANKSEL	_displayHundred
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 02rr                      1- 1608     	CLRR	_displayHundred
                                    1- 1609     	.line	1403, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1610     	BANKSEL	_displayDecade
     0174 rrrr                      3-  109 m1      .banksel ram_address
     0175 02rr                      1- 1611     	CLRR	_displayDecade
                                    1- 1612     	.line	1404, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1613     	BANKSEL	_displayDigit
     0176 rrrr                      3-  109 m1      .banksel ram_address
     0177 02rr                      1- 1614     	CLRR	_displayDigit
     0178                           1- 1615     _02497_DS_:
                                    1- 1616     	.line	1407, "main.c"; 	}
                                    1- 1617     	RETURN	
     0178 0010                      3-   39 m1      ret
                                    1- 1618     ; exit point of _app_display_all
                                    1- 1620     ;***
                                    1- 1621     ;  pBlock Stats: dbName = C
                                    1- 1622     ;***
                                    1- 1623     ;has an exit
                                    1- 1624     ;functions called:
                                    1- 1625     ;   _ip55xs_read4Bytes
                                    1- 1626     ;   _ip55xs_read4Bytes
                                    1- 1627     ;1 compiler assigned register :
                                    1- 1628     ;   STK00
                                    1- 1629     ;; Starting pCode block
                                    1- 1630     .segment "code"; module=main, function=_get_cap
     0000                           1- 1632     _get_cap:
                                    1- 1633     ; 2 exit points
                                    1- 1634     	.line	1219, "main.c"; 	ip55xs_read4Bytes(0x10C0);
     0000 21C0                      1- 1635     	MOVIA	0xc0
     0001 00rr                      1- 1636     	MOVAR	STK00
     0002 2110                      1- 1637     	MOVIA	0x10
                                    1- 1638     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1639     	.line	1220, "main.c"; 	displayData = IP_DATA[0];
                                    1- 1640     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1641     	MOVR	_IP_DATA,W
                                    1- 1642     	BANKSEL	_displayData
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1643     	MOVAR	_displayData
                                    1- 1644     	.line	1224, "main.c"; 	}
                                    1- 1645     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 1646     ; exit point of _get_cap
                                    1- 1648     ;***
                                    1- 1649     ;  pBlock Stats: dbName = C
                                    1- 1650     ;***
                                    1- 1651     ;has an exit
                                    1- 1652     ;functions called:
                                    1- 1653     ;   _ip55xs_read4Bytes
                                    1- 1654     ;   _disable_breathing_mode
                                    1- 1655     ;   _enable_breathing_mode
                                    1- 1656     ;   _ip55xs_read4Bytes
                                    1- 1657     ;   _disable_breathing_mode
                                    1- 1658     ;   _enable_breathing_mode
                                    1- 1659     ;2 compiler assigned registers:
                                    1- 1660     ;   STK00
                                    1- 1661     ;   r0x1029
                                    1- 1662     ;; Starting pCode block
                                    1- 1663     .segment "code"; module=main, function=_is_chg_or_dischg
                                    1- 1665     ;local variable name mapping:
     0000                           1- 1667     _is_chg_or_dischg:
                                    1- 1668     ; 2 exit points
                                    1- 1669     	.line	1132, "main.c"; 	ip55xs_read4Bytes(0X1090);
     0000 2190                      1- 1670     	MOVIA	0x90
     0001 00rr                      1- 1671     	MOVAR	STK00
     0002 2110                      1- 1672     	MOVIA	0x10
                                    1- 1673     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1674     	.line	1140, "main.c"; 	bFlag_qc_ok = 0;
                                    1- 1675     	BANKSEL	_vFlag_0
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 1Err                      1- 1676     	BCR	_vFlag_0,4
                                    1- 1677     	.line	1142, "main.c"; 	if (bFlag_charger_on) //! 在充电状态下
                                    1- 1678     	BANKSEL	_vFlag_1
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1679     	BTRSS	_vFlag_1,5
                                    1- 1680     	MGOTO	_02431_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1681     	.line	1144, "main.c"; 	delaySleepTimer = CONST_DSL_SHORT; //! 防止充电状态MCU关5356
     0009 2103                      1- 1682     	MOVIA	0x03
                                    1- 1683     	BANKSEL	_delaySleepTimer
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1684     	MOVAR	_delaySleepTimer
                                    1- 1685     	.line	1146, "main.c"; 	reg_ip53xs = (IP_DATA[2] & BIT3); // bit19
                                    1- 1686     	BANKSEL	_IP_DATA
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1687     	MOVR	(_IP_DATA + 2),W
                                    1- 1688     	BANKSEL	r0x1029
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1689     	MOVAR	r0x1029
     0010 09rr                      1- 1690     	BTRSS	r0x1029,3
                                    1- 1691     	MGOTO	_02417_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1692     	.line	1151, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1693     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Frr                      1- 1694     	BCR	_vFlag_1,6
                                    1- 1695     	.line	1152, "main.c"; 	if (++counter > 5) // CNST_FILTER_COM
                                    1- 1696     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1697     	INCR	_is_chg_or_dischg_counter_65536_126,F
                                    1- 1698     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1699     ;;unsigned compare: left >= lit(0x6=6), size=1
     0016 2106                      1- 1700     	MOVIA	0x06
     0017 04rr                      1- 1701     	SUBAR	_is_chg_or_dischg_counter_65536_126,W
     0018 0803                      1- 1702     	BTRSS	STATUS,0
                                    1- 1703     	MGOTO	_02433_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1704     	.line	1154, "main.c"; 	counter = 0;
     001A 02rr                      1- 1705     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1706     	.line	1155, "main.c"; 	bFlag_charger_on = 0; //! 放电
                                    1- 1707     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 1Err                      1- 1708     	BCR	_vFlag_1,5
                                    1- 1709     	.line	1156, "main.c"; 	disable_breathing_mode();
                                    1- 1710     	MCALL	_disable_breathing_mode
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1711     	MGOTO	_02433_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1712     _02417_DS_:
                                    1- 1713     	.line	1161, "main.c"; 	counter = 0;
                                    1- 1714     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1715     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1716     	.line	1163, "main.c"; 	if (IP_DATA[1] & BIT7)
                                    1- 1717     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1718     	MOVR	(_IP_DATA + 1),W
                                    1- 1719     	BANKSEL	r0x1029
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1720     	MOVAR	r0x1029
     0025 0Brr                      1- 1721     	BTRSS	r0x1029,7
                                    1- 1722     	MGOTO	_00007_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1723     	.line	1165, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1724     	BANKSEL	_vFlag_0
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 1Arr                      1- 1725     	BSR	_vFlag_0,4
     0029                           1- 1726     _00007_DS_:
                                    1- 1727     	.line	1167, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1728     	BANKSEL	_vFlag_1
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 1Brr                      1- 1729     	BSR	_vFlag_1,6
                                    1- 1730     	MGOTO	_02433_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 1731     _02431_DS_:
                                    1- 1732     	.line	1175, "main.c"; 	reg_ip53xs = (IP_DATA[1] & BIT3); // bit11
                                    1- 1733     	BANKSEL	_IP_DATA
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1734     	MOVR	(_IP_DATA + 1),W
                                    1- 1735     	BANKSEL	r0x1029
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1736     	MOVAR	r0x1029
     0030 09rr                      1- 1737     	BTRSS	r0x1029,3
                                    1- 1738     	MGOTO	_02428_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1739     	.line	1178, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1740     	BANKSEL	_vFlag_1
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 1Brr                      1- 1741     	BSR	_vFlag_1,6
                                    1- 1742     	.line	1179, "main.c"; 	if (++counter > CNST_FILTER_COM) // 2次
                                    1- 1743     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 05rr                      1- 1744     	INCR	_is_chg_or_dischg_counter_65536_126,F
                                    1- 1745     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1746     ;;unsigned compare: left >= lit(0x3=3), size=1
     0036 2103                      1- 1747     	MOVIA	0x03
     0037 04rr                      1- 1748     	SUBAR	_is_chg_or_dischg_counter_65536_126,W
     0038 0803                      1- 1749     	BTRSS	STATUS,0
                                    1- 1750     	MGOTO	_02433_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1751     	.line	1181, "main.c"; 	counter = 0;
     003A 02rr                      1- 1752     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1753     	.line	1182, "main.c"; 	bFlag_charger_on = 1; //! 充电
                                    1- 1754     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Arr                      1- 1755     	BSR	_vFlag_1,5
                                    1- 1756     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1757     	.line	1183, "main.c"; 	if (displayData < 100)
     003D 2164                      1- 1758     	MOVIA	0x64
                                    1- 1759     	BANKSEL	_displayData
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 04rr                      1- 1760     	SUBAR	_displayData,W
     0040 0803                      1- 1761     	BTRSS	STATUS,0
                                    1- 1762     	.line	1185, "main.c"; 	enable_breathing_mode();
                                    1- 1763     	MCALL	_enable_breathing_mode
     0041 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1764     	.line	1187, "main.c"; 	forceDispTimer = 10;
     0042 210A                      1- 1765     	MOVIA	0x0a
                                    1- 1766     	BANKSEL	_forceDispTimer
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1- 1767     	MOVAR	_forceDispTimer
                                    1- 1768     	MGOTO	_02433_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1- 1769     _02428_DS_:
                                    1- 1770     	.line	1192, "main.c"; 	counter = 0;
                                    1- 1771     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 02rr                      1- 1772     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1773     	.line	1193, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1774     	BANKSEL	_vFlag_1
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 1Frr                      1- 1775     	BCR	_vFlag_1,6
                                    1- 1776     	.line	1194, "main.c"; 	if (IP_DATA[3] & BIT3)
                                    1- 1777     	BANKSEL	_IP_DATA
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1- 1778     	MOVR	(_IP_DATA + 3),W
                                    1- 1779     	BANKSEL	r0x1029
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 00rr                      1- 1780     	MOVAR	r0x1029
     004E 09rr                      1- 1781     	BTRSS	r0x1029,3
                                    1- 1782     	MGOTO	_00008_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1783     	.line	1196, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1784     	BANKSEL	_vFlag_0
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 1Arr                      1- 1785     	BSR	_vFlag_0,4
     0052                           1- 1786     _00008_DS_:
                                    1- 1787     	.line	1199, "main.c"; 	if ((IP_DATA[2] & BIT3)) // bit19
                                    1- 1788     	BANKSEL	_IP_DATA
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1789     	MOVR	(_IP_DATA + 2),W
                                    1- 1790     	BANKSEL	r0x1029
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 00rr                      1- 1791     	MOVAR	r0x1029
     0056 09rr                      1- 1792     	BTRSS	r0x1029,3
                                    1- 1793     	MGOTO	_02433_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1794     	.line	1201, "main.c"; 	displayTimer = CONST_TIMER_DISP_XSEC; //! 电量==0的时候 闪烁5秒后熄灭,反之一直显示
     0058 210A                      1- 1795     	MOVIA	0x0a
                                    1- 1796     	BANKSEL	_displayTimer
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 00rr                      1- 1797     	MOVAR	_displayTimer
     005B                           1- 1798     _02433_DS_:
                                    1- 1799     	.line	1215, "main.c"; 	}
                                    1- 1800     	RETURN	
     005B 0010                      3-   39 m1      ret
                                    1- 1801     ; exit point of _is_chg_or_dischg
                                    1- 1803     ;***
                                    1- 1804     ;  pBlock Stats: dbName = C
                                    1- 1805     ;***
                                    1- 1806     ;has an exit
                                    1- 1807     ;functions called:
                                    1- 1808     ;   _ip55xs_read4Bytes
                                    1- 1809     ;   _ip55xs_write4Bytes
                                    1- 1810     ;   _ip55xs_read4Bytes
                                    1- 1811     ;   _ip55xs_write4Bytes
                                    1- 1812     ;7 compiler assigned registers:
                                    1- 1813     ;   STK00
                                    1- 1814     ;   r0x102B
                                    1- 1815     ;   r0x102C
                                    1- 1816     ;   r0x102D
                                    1- 1817     ;   STK03
                                    1- 1818     ;   STK02
                                    1- 1819     ;   STK01
                                    1- 1820     ;; Starting pCode block
                                    1- 1821     .segment "code"; module=main, function=_get_p_ext_int_status
                                    1- 1823     ;local variable name mapping:
     0000                           1- 1825     _get_p_ext_int_status:
                                    1- 1826     ; 2 exit points
                                    1- 1827     	.line	1057, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1- 1828     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1- 1829     	BTRSS	_vFlag_1,3
                                    1- 1830     	MGOTO	_02405_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1831     	.line	1059, "main.c"; 	if (!P_I2C_INT)
     0003 0Drr                      1- 1832     	BTRSC	_PORTAbits,2
                                    1- 1833     	MGOTO	_02397_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1834     	.line	1061, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1835     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 05rr                      1- 1836     	INCR	_get_p_ext_int_status_counter_65536_116,F
                                    1- 1837     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1838     ;;unsigned compare: left >= lit(0x20=32), size=1
     0007 2120                      1- 1839     	MOVIA	0x20
     0008 04rr                      1- 1840     	SUBAR	_get_p_ext_int_status_counter_65536_116,W
     0009 0803                      1- 1841     	BTRSS	STATUS,0
                                    1- 1842     	MGOTO	_02407_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1843     	.line	1063, "main.c"; 	counter = 0;
     000B 02rr                      1- 1844     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1845     	.line	1064, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1846     	BANKSEL	_vFlag_1
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Drr                      1- 1847     	BCR	_vFlag_1,3
                                    1- 1848     	.line	1065, "main.c"; 	bFlag_charger_on = 0; //! 放电
     000E 1Err                      1- 1849     	BCR	_vFlag_1,5
                                    1- 1850     	.line	1065, "main.c"; 	// io_uart_tx(0x22);
                                    1- 1851     	MGOTO	_02407_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1- 1852     _02397_DS_:
                                    1- 1853     	.line	1081, "main.c"; 	counter = 0;
                                    1- 1854     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 02rr                      1- 1855     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1856     	MGOTO	_02407_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
     0013                           1- 1857     _02405_DS_:
                                    1- 1858     	.line	1086, "main.c"; 	if (P_I2C_INT)
     0013 09rr                      1- 1859     	BTRSS	_PORTAbits,2
                                    1- 1860     	MGOTO	_02402_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1861     	.line	1088, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1862     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 05rr                      1- 1863     	INCR	_get_p_ext_int_status_counter_65536_116,F
                                    1- 1864     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1865     ;;unsigned compare: left >= lit(0x20=32), size=1
     0017 2120                      1- 1866     	MOVIA	0x20
     0018 04rr                      1- 1867     	SUBAR	_get_p_ext_int_status_counter_65536_116,W
     0019 0803                      1- 1868     	BTRSS	STATUS,0
                                    1- 1869     	MGOTO	_02407_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1870     	.line	1090, "main.c"; 	counter = 0;
     001B 02rr                      1- 1871     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1872     	.line	1091, "main.c"; 	bFlag_p_ext_int_is_high = 1;
                                    1- 1873     	BANKSEL	_vFlag_1
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 19rr                      1- 1874     	BSR	_vFlag_1,3
                                    1- 1875     	.line	1094, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     001E 21C0                      1- 1876     	MOVIA	0xc0
     001F 00rr                      1- 1877     	MOVAR	STK00
     0020 2100                      1- 1878     	MOVIA	0x00
                                    1- 1879     	MCALL	_ip55xs_read4Bytes
     0021 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1880     	.line	1096, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1881     	BANKSEL	_IP_DATA
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1- 1882     	MOVR	(_IP_DATA + 3),W
                                    1- 1883     	BANKSEL	r0x102B
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 1884     	MOVAR	r0x102B
     0026 1Drr                      1- 1885     	BCR	r0x102B,2
     0027 01rr                      1- 1886     	MOVR	r0x102B,W
                                    1- 1887     	BANKSEL	_IP_DATA
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 00rr                      1- 1888     	MOVAR	(_IP_DATA + 3)
                                    1- 1889     	.line	1097, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     002A 01rr                      1- 1890     	MOVR	(_IP_DATA + 3),W
                                    1- 1891     	BANKSEL	r0x102B
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 00rr                      1- 1892     	MOVAR	r0x102B
     002D 1Crr                      1- 1893     	BCR	r0x102B,0
     002E 01rr                      1- 1894     	MOVR	r0x102B,W
                                    1- 1895     	BANKSEL	_IP_DATA
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1- 1896     	MOVAR	(_IP_DATA + 3)
                                    1- 1897     	.line	1098, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0031 21rr                      1- 1898     	MOVIA	(_IP_DATA + 0)
                                    1- 1899     	BANKSEL	r0x102B
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1- 1900     	MOVAR	r0x102B
     0034 00rr                      1- 1901     	MOVAR	STK03
     0035 2100                      1- 1902     	MOVIA	0x00
     0036 00rr                      1- 1903     	MOVAR	STK02
     0037 00rr                      1- 1904     	MOVAR	STK01
     0038 21C0                      1- 1905     	MOVIA	0xc0
     0039 00rr                      1- 1906     	MOVAR	STK00
     003A 2100                      1- 1907     	MOVIA	0x00
                                    1- 1908     	MCALL	_ip55xs_write4Bytes
     003B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1909     	.line	1099, "main.c"; 	delaySleepTimer = CNST_TIMER_DLY_SLP;
     003C 2114                      1- 1910     	MOVIA	0x14
                                    1- 1911     	BANKSEL	_delaySleepTimer
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 1912     	MOVAR	_delaySleepTimer
                                    1- 1913     	MGOTO	_02407_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 1914     _02402_DS_:
                                    1- 1915     	.line	1105, "main.c"; 	counter = 0;
                                    1- 1916     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 02rr                      1- 1917     	CLRR	_get_p_ext_int_status_counter_65536_116
     0042                           1- 1918     _02407_DS_:
                                    1- 1919     	.line	1108, "main.c"; 	}
                                    1- 1920     	RETURN	
     0042 0010                      3-   39 m1      ret
                                    1- 1921     ; exit point of _get_p_ext_int_status
                                    1- 1923     ;***
                                    1- 1924     ;  pBlock Stats: dbName = C
                                    1- 1925     ;***
                                    1- 1926     ;has an exit
                                    1- 1927     ;functions called:
                                    1- 1928     ;   _ip55xs_read4Bytes
                                    1- 1929     ;   _ip55xs_write4Bytes
                                    1- 1930     ;   _ip55xs_read4Bytes
                                    1- 1931     ;   _ip55xs_write4Bytes
                                    1- 1932     ;7 compiler assigned registers:
                                    1- 1933     ;   STK00
                                    1- 1934     ;   r0x102F
                                    1- 1935     ;   r0x1030
                                    1- 1936     ;   r0x1031
                                    1- 1937     ;   STK03
                                    1- 1938     ;   STK02
                                    1- 1939     ;   STK01
                                    1- 1940     ;; Starting pCode block
                                    1- 1941     .segment "code"; module=main, function=_init_ip53xs
     0000                           1- 1943     _init_ip53xs:
                                    1- 1944     ; 2 exit points
                                    1- 1945     	.line	1045, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     0000 21C0                      1- 1946     	MOVIA	0xc0
     0001 00rr                      1- 1947     	MOVAR	STK00
     0002 2100                      1- 1948     	MOVIA	0x00
                                    1- 1949     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1950     	.line	1047, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1951     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1952     	MOVR	(_IP_DATA + 3),W
                                    1- 1953     	BANKSEL	r0x102F
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1954     	MOVAR	r0x102F
     0008 1Drr                      1- 1955     	BCR	r0x102F,2
     0009 01rr                      1- 1956     	MOVR	r0x102F,W
                                    1- 1957     	BANKSEL	_IP_DATA
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1958     	MOVAR	(_IP_DATA + 3)
                                    1- 1959     	.line	1048, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     000C 01rr                      1- 1960     	MOVR	(_IP_DATA + 3),W
                                    1- 1961     	BANKSEL	r0x102F
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1962     	MOVAR	r0x102F
     000F 1Crr                      1- 1963     	BCR	r0x102F,0
     0010 01rr                      1- 1964     	MOVR	r0x102F,W
                                    1- 1965     	BANKSEL	_IP_DATA
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1966     	MOVAR	(_IP_DATA + 3)
                                    1- 1967     	.line	1049, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0013 21rr                      1- 1968     	MOVIA	(_IP_DATA + 0)
                                    1- 1969     	BANKSEL	r0x102F
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1970     	MOVAR	r0x102F
     0016 00rr                      1- 1971     	MOVAR	STK03
     0017 2100                      1- 1972     	MOVIA	0x00
     0018 00rr                      1- 1973     	MOVAR	STK02
     0019 00rr                      1- 1974     	MOVAR	STK01
     001A 21C0                      1- 1975     	MOVIA	0xc0
     001B 00rr                      1- 1976     	MOVAR	STK00
     001C 2100                      1- 1977     	MOVIA	0x00
                                    1- 1978     	MCALL	_ip55xs_write4Bytes
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1979     	.line	1050, "main.c"; 	}
                                    1- 1980     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 1981     ; exit point of _init_ip53xs
                                    1- 1983     ;***
                                    1- 1984     ;  pBlock Stats: dbName = C
                                    1- 1985     ;***
                                    1- 1986     ;has an exit
                                    1- 1987     ;functions called:
                                    1- 1988     ;   _ip53xs_writeByte
                                    1- 1989     ;   _ip53xs_writeByte
                                    1- 1990     ;   _ip53xs_writeByte
                                    1- 1991     ;   _ip53xs_writeByte
                                    1- 1992     ;   _ip53xs_readByte
                                    1- 1993     ;   _ip53xs_readByte
                                    1- 1994     ;   _ip53xs_readByte
                                    1- 1995     ;   _ip53xs_readByte
                                    1- 1996     ;   _ip53xs_readByte
                                    1- 1997     ;   _ip53xs_writeByte
                                    1- 1998     ;   _ip53xs_writeByte
                                    1- 1999     ;   _ip53xs_writeByte
                                    1- 2000     ;   _ip53xs_writeByte
                                    1- 2001     ;   _ip53xs_writeByte
                                    1- 2002     ;   _ip53xs_writeByte
                                    1- 2003     ;   _ip53xs_writeByte
                                    1- 2004     ;   _ip53xs_writeByte
                                    1- 2005     ;   _ip53xs_readByte
                                    1- 2006     ;   _ip53xs_readByte
                                    1- 2007     ;   _ip53xs_readByte
                                    1- 2008     ;   _ip53xs_readByte
                                    1- 2009     ;   _ip53xs_readByte
                                    1- 2010     ;   _ip53xs_writeByte
                                    1- 2011     ;   _ip53xs_writeByte
                                    1- 2012     ;   _ip53xs_writeByte
                                    1- 2013     ;   _ip53xs_writeByte
                                    1- 2014     ;7 compiler assigned registers:
                                    1- 2015     ;   r0x1024
                                    1- 2016     ;   STK00
                                    1- 2017     ;   r0x1025
                                    1- 2018     ;   r0x1026
                                    1- 2019     ;   STK01
                                    1- 2020     ;   r0x1027
                                    1- 2021     ;   r0x1028
                                    1- 2022     ;; Starting pCode block
                                    1- 2023     .segment "code"; module=main, function=_ip55xs_read4Bytes
                                    1- 2025     ;local variable name mapping:
     0000                           1- 2029     _ip55xs_read4Bytes:
                                    1- 2030     ; 2 exit points
                                    1- 2031     	.line	998, "main.c"; 	BOOL ip55xs_read4Bytes(/*unsigned char deviceAddr,*/ unsigned int regAddr) //(unsigned char regAddr)
                                    1- 2032     	BANKSEL	r0x1024
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2033     	MOVAR	r0x1024
     0002 01rr                      1- 2034     	MOVR	STK00,W
                                    1- 2035     	BANKSEL	r0x1025
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2036     	MOVAR	r0x1025
                                    1- 2037     	.line	1004, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2038     	BANKSEL	r0x1026
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 2039     	MOVAR	r0x1026
     0007 00rr                      1- 2040     	MOVAR	STK01
     0008 2110                      1- 2041     	MOVIA	0x10
     0009 00rr                      1- 2042     	MOVAR	STK00
     000A 21EA                      1- 2043     	MOVIA	0xea
                                    1- 2044     	MCALL	_ip53xs_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2045     	.line	1005, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2046     	BANKSEL	r0x1024
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 2047     	MOVR	r0x1024,W
                                    1- 2048     	BANKSEL	r0x1027
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2049     	MOVAR	r0x1027
                                    1- 2050     	BANKSEL	r0x1025
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 2051     	MOVAR	r0x1025
     0012 00rr                      1- 2052     	MOVAR	STK01
     0013 2111                      1- 2053     	MOVIA	0x11
     0014 00rr                      1- 2054     	MOVAR	STK00
     0015 21EA                      1- 2055     	MOVIA	0xea
                                    1- 2056     	MCALL	_ip53xs_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2057     	.line	1006, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x11);
     0017 2111                      1- 2058     	MOVIA	0x11
     0018 00rr                      1- 2059     	MOVAR	STK01
     0019 2112                      1- 2060     	MOVIA	0x12
     001A 00rr                      1- 2061     	MOVAR	STK00
     001B 21EA                      1- 2062     	MOVIA	0xea
                                    1- 2063     	MCALL	_ip53xs_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2064     	.line	1007, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x11);
     001D 2111                      1- 2065     	MOVIA	0x11
     001E 00rr                      1- 2066     	MOVAR	STK01
     001F 2113                      1- 2067     	MOVIA	0x13
     0020 00rr                      1- 2068     	MOVAR	STK00
     0021 21EA                      1- 2069     	MOVIA	0xea
                                    1- 2070     	MCALL	_ip53xs_writeByte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2071     	.line	1011, "main.c"; 	do
     0023 2164                      1- 2072     	MOVIA	0x64
                                    1- 2073     	BANKSEL	r0x1024
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2074     	MOVAR	r0x1024
     0026                           1- 2075     _02382_DS_:
                                    1- 2076     	.line	1013, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0026 2100                      1- 2077     	MOVIA	0x00
     0027 00rr                      1- 2078     	MOVAR	STK00
     0028 21EA                      1- 2079     	MOVIA	0xea
                                    1- 2080     	MCALL	_ip53xs_readByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2081     	BANKSEL	r0x1027
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 2082     	MOVAR	r0x1027
                                    1- 2083     	.line	1014, "main.c"; 	if (0 == timer_out)
                                    1- 2084     	BANKSEL	r0x1024
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 2085     	MOVR	r0x1024,W
     002E 0903                      1- 2086     	BTRSS	STATUS,2
                                    1- 2087     	MGOTO	_02380_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2088     	.line	1016, "main.c"; 	return FALSE;
     0030 2100                      1- 2089     	MOVIA	0x00
                                    1- 2090     	MGOTO	_02385_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 2091     _02380_DS_:
                                    1- 2092     	.line	1021, "main.c"; 	timer_out--;
                                    1- 2093     	BANKSEL	r0x1024
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 06rr                      1- 2094     	DECR	r0x1024,F
                                    1- 2095     	.line	1023, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2096     	BANKSEL	r0x1027
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 01rr                      1- 2097     	MOVR	r0x1027,W
     0036 24AA                      1- 2098     	XORIA	0xaa
     0037 0903                      1- 2099     	BTRSS	STATUS,2
                                    1- 2100     	MGOTO	_02382_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2101     	.line	1024, "main.c"; 	IP_DATA[0] = ip53xs_readByte(0xEA, 0x0C);
     0039 210C                      1- 2102     	MOVIA	0x0c
     003A 00rr                      1- 2103     	MOVAR	STK00
     003B 21EA                      1- 2104     	MOVIA	0xea
                                    1- 2105     	MCALL	_ip53xs_readByte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2106     	BANKSEL	r0x1024
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 2107     	MOVAR	r0x1024
                                    1- 2108     	BANKSEL	_IP_DATA
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 2109     	MOVAR	(_IP_DATA + 0)
                                    1- 2110     	.line	1025, "main.c"; 	IP_DATA[1] = ip53xs_readByte(0xEA, 0x0D);
     0041 210D                      1- 2111     	MOVIA	0x0d
     0042 00rr                      1- 2112     	MOVAR	STK00
     0043 21EA                      1- 2113     	MOVIA	0xea
                                    1- 2114     	MCALL	_ip53xs_readByte
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2115     	BANKSEL	r0x1024
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 2116     	MOVAR	r0x1024
                                    1- 2117     	BANKSEL	_IP_DATA
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2118     	MOVAR	(_IP_DATA + 1)
                                    1- 2119     	.line	1026, "main.c"; 	IP_DATA[2] = ip53xs_readByte(0xEA, 0x0E);
     0049 210E                      1- 2120     	MOVIA	0x0e
     004A 00rr                      1- 2121     	MOVAR	STK00
     004B 21EA                      1- 2122     	MOVIA	0xea
                                    1- 2123     	MCALL	_ip53xs_readByte
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2124     	BANKSEL	r0x1024
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 2125     	MOVAR	r0x1024
                                    1- 2126     	BANKSEL	_IP_DATA
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2127     	MOVAR	(_IP_DATA + 2)
                                    1- 2128     	.line	1027, "main.c"; 	IP_DATA[3] = ip53xs_readByte(0xEA, 0x0F);
     0051 210F                      1- 2129     	MOVIA	0x0f
     0052 00rr                      1- 2130     	MOVAR	STK00
     0053 21EA                      1- 2131     	MOVIA	0xea
                                    1- 2132     	MCALL	_ip53xs_readByte
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2133     	BANKSEL	r0x1024
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 2134     	MOVAR	r0x1024
                                    1- 2135     	BANKSEL	_IP_DATA
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2136     	MOVAR	(_IP_DATA + 3)
                                    1- 2137     	.line	1028, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2138     	BANKSEL	r0x1026
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1- 2139     	MOVR	r0x1026,W
     005B 00rr                      1- 2140     	MOVAR	STK01
     005C 2110                      1- 2141     	MOVIA	0x10
     005D 00rr                      1- 2142     	MOVAR	STK00
     005E 21EA                      1- 2143     	MOVIA	0xea
                                    1- 2144     	MCALL	_ip53xs_writeByte
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2145     	.line	1029, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2146     	BANKSEL	r0x1025
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2147     	MOVR	r0x1025,W
     0062 00rr                      1- 2148     	MOVAR	STK01
     0063 2111                      1- 2149     	MOVIA	0x11
     0064 00rr                      1- 2150     	MOVAR	STK00
     0065 21EA                      1- 2151     	MOVIA	0xea
                                    1- 2152     	MCALL	_ip53xs_writeByte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2153     	.line	1030, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x22);
     0067 2122                      1- 2154     	MOVIA	0x22
     0068 00rr                      1- 2155     	MOVAR	STK01
     0069 2112                      1- 2156     	MOVIA	0x12
     006A 00rr                      1- 2157     	MOVAR	STK00
     006B 21EA                      1- 2158     	MOVIA	0xea
                                    1- 2159     	MCALL	_ip53xs_writeByte
     006C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2160     	.line	1031, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x22);
     006D 2122                      1- 2161     	MOVIA	0x22
     006E 00rr                      1- 2162     	MOVAR	STK01
     006F 2113                      1- 2163     	MOVIA	0x13
     0070 00rr                      1- 2164     	MOVAR	STK00
     0071 21EA                      1- 2165     	MOVIA	0xea
                                    1- 2166     	MCALL	_ip53xs_writeByte
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2167     	.line	1032, "main.c"; 	return TRUE;
     0073 2101                      1- 2168     	MOVIA	0x01
     0074                           1- 2169     _02385_DS_:
                                    1- 2170     	.line	1033, "main.c"; 	}
                                    1- 2171     	RETURN	
     0074 0010                      3-   39 m1      ret
                                    1- 2172     ; exit point of _ip55xs_read4Bytes
                                    1- 2174     ;***
                                    1- 2175     ;  pBlock Stats: dbName = C
                                    1- 2176     ;***
                                    1- 2177     ;has an exit
                                    1- 2178     ;functions called:
                                    1- 2179     ;   _ip53xs_writeByte
                                    1- 2180     ;   _ip53xs_writeByte
                                    1- 2181     ;   _ip53xs_writeByte
                                    1- 2182     ;   _ip53xs_writeByte
                                    1- 2183     ;   _ip53xs_readByte
                                    1- 2184     ;   __gptrget1
                                    1- 2185     ;   _ip53xs_writeByte
                                    1- 2186     ;   __gptrget1
                                    1- 2187     ;   _ip53xs_writeByte
                                    1- 2188     ;   _ip53xs_writeByte
                                    1- 2189     ;   _ip53xs_writeByte
                                    1- 2190     ;   _ip53xs_readByte
                                    1- 2191     ;   __gptrget1
                                    1- 2192     ;   _ip53xs_writeByte
                                    1- 2193     ;   __gptrget1
                                    1- 2194     ;   _ip53xs_writeByte
                                    1- 2195     ;   _ip53xs_writeByte
                                    1- 2196     ;   _ip53xs_writeByte
                                    1- 2197     ;   _ip53xs_readByte
                                    1- 2198     ;   _ip53xs_writeByte
                                    1- 2199     ;   _ip53xs_writeByte
                                    1- 2200     ;   _ip53xs_writeByte
                                    1- 2201     ;   _ip53xs_writeByte
                                    1- 2202     ;   _ip53xs_readByte
                                    1- 2203     ;   __gptrget1
                                    1- 2204     ;   _ip53xs_writeByte
                                    1- 2205     ;   __gptrget1
                                    1- 2206     ;   _ip53xs_writeByte
                                    1- 2207     ;   _ip53xs_writeByte
                                    1- 2208     ;   _ip53xs_writeByte
                                    1- 2209     ;   _ip53xs_readByte
                                    1- 2210     ;   __gptrget1
                                    1- 2211     ;   _ip53xs_writeByte
                                    1- 2212     ;   __gptrget1
                                    1- 2213     ;   _ip53xs_writeByte
                                    1- 2214     ;   _ip53xs_writeByte
                                    1- 2215     ;   _ip53xs_writeByte
                                    1- 2216     ;   _ip53xs_readByte
                                    1- 2217     ;11 compiler assigned registers:
                                    1- 2218     ;   r0x1024
                                    1- 2219     ;   STK00
                                    1- 2220     ;   r0x1025
                                    1- 2221     ;   STK01
                                    1- 2222     ;   r0x1026
                                    1- 2223     ;   STK02
                                    1- 2224     ;   r0x1027
                                    1- 2225     ;   STK03
                                    1- 2226     ;   r0x1028
                                    1- 2227     ;   r0x1029
                                    1- 2228     ;   r0x102A
                                    1- 2229     ;; Starting pCode block
                                    1- 2230     .segment "code"; module=main, function=_ip55xs_write4Bytes
                                    1- 2232     ;local variable name mapping:
     0000                           1- 2237     _ip55xs_write4Bytes:
                                    1- 2238     ; 2 exit points
                                    1- 2239     	.line	929, "main.c"; 	BOOL ip55xs_write4Bytes(unsigned int regAddr, unsigned char *pdata)
                                    1- 2240     	BANKSEL	r0x1024
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2241     	MOVAR	r0x1024
     0002 01rr                      1- 2242     	MOVR	STK00,W
                                    1- 2243     	BANKSEL	r0x1025
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2244     	MOVAR	r0x1025
     0005 01rr                      1- 2245     	MOVR	STK01,W
                                    1- 2246     	BANKSEL	r0x1026
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2247     	MOVAR	r0x1026
     0008 01rr                      1- 2248     	MOVR	STK02,W
                                    1- 2249     	BANKSEL	r0x1027
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 2250     	MOVAR	r0x1027
     000B 01rr                      1- 2251     	MOVR	STK03,W
                                    1- 2252     	BANKSEL	r0x1028
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 2253     	MOVAR	r0x1028
                                    1- 2254     	.line	934, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2255     	BANKSEL	r0x1025
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 2256     	MOVR	r0x1025,W
                                    1- 2257     ;;100	MOVAR	r0x1029
     0010 00rr                      1- 2258     	MOVAR	STK01
     0011 2110                      1- 2259     	MOVIA	0x10
     0012 00rr                      1- 2260     	MOVAR	STK00
     0013 21EA                      1- 2261     	MOVIA	0xea
                                    1- 2262     	MCALL	_ip53xs_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2263     	.line	935, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2264     	BANKSEL	r0x1024
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2265     	MOVR	r0x1024,W
                                    1- 2266     ;;99	MOVAR	r0x1029
                                    1- 2267     	BANKSEL	r0x1025
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 2268     	MOVAR	r0x1025
     0019 00rr                      1- 2269     	MOVAR	STK01
     001A 2111                      1- 2270     	MOVIA	0x11
     001B 00rr                      1- 2271     	MOVAR	STK00
     001C 21EA                      1- 2272     	MOVIA	0xea
                                    1- 2273     	MCALL	_ip53xs_writeByte
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2274     	.line	936, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x55);
     001E 2155                      1- 2275     	MOVIA	0x55
     001F 00rr                      1- 2276     	MOVAR	STK01
     0020 2112                      1- 2277     	MOVIA	0x12
     0021 00rr                      1- 2278     	MOVAR	STK00
     0022 21EA                      1- 2279     	MOVIA	0xea
                                    1- 2280     	MCALL	_ip53xs_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2281     	.line	937, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x55);
     0024 2155                      1- 2282     	MOVIA	0x55
     0025 00rr                      1- 2283     	MOVAR	STK01
     0026 2113                      1- 2284     	MOVIA	0x13
     0027 00rr                      1- 2285     	MOVAR	STK00
     0028 21EA                      1- 2286     	MOVIA	0xea
                                    1- 2287     	MCALL	_ip53xs_writeByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2288     	.line	939, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     002A 2100                      1- 2289     	MOVIA	0x00
     002B 00rr                      1- 2290     	MOVAR	STK00
     002C 21EA                      1- 2291     	MOVIA	0xea
                                    1- 2292     	MCALL	_ip53xs_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2293     	BANKSEL	r0x1025
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2294     	MOVAR	r0x1025
                                    1- 2295     	.line	941, "main.c"; 	do
     0030 2164                      1- 2296     	MOVIA	0x64
                                    1- 2297     	BANKSEL	r0x1024
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 2298     	MOVAR	r0x1024
     0033                           1- 2299     _02359_DS_:
                                    1- 2300     	.line	943, "main.c"; 	if (timer_out)
                                    1- 2301     	BANKSEL	r0x1024
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 2302     	MOVR	r0x1024,W
     0035 0D03                      1- 2303     	BTRSC	STATUS,2
                                    1- 2304     	MGOTO	_02357_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2305     	.line	945, "main.c"; 	timer_out--;
     0037 06rr                      1- 2306     	DECR	r0x1024,F
                                    1- 2307     	MGOTO	_02360_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1- 2308     _02357_DS_:
                                    1- 2309     	.line	949, "main.c"; 	return FALSE;
     0039 2100                      1- 2310     	MOVIA	0x00
                                    1- 2311     	MGOTO	_02374_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 2312     _02360_DS_:
                                    1- 2313     	.line	951, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2314     	BANKSEL	r0x1025
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 2315     	MOVR	r0x1025,W
     003D 24AA                      1- 2316     	XORIA	0xaa
     003E 0903                      1- 2317     	BTRSS	STATUS,2
                                    1- 2318     	MGOTO	_02359_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2319     	.line	952, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA0
                                    1- 2320     	BANKSEL	r0x1028
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 2321     	MOVR	r0x1028,W
     0042 00rr                      1- 2322     	MOVAR	STK01
                                    1- 2323     	BANKSEL	r0x1027
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 2324     	MOVR	r0x1027,W
     0045 00rr                      1- 2325     	MOVAR	STK00
                                    1- 2326     	BANKSEL	r0x1026
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 2327     	MOVR	r0x1026,W
                                    1- 2328     	MCALL	__gptrget1
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2329     	BANKSEL	r0x1025
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 2330     	MOVAR	r0x1025
     004B 00rr                      1- 2331     	MOVAR	STK01
     004C 2110                      1- 2332     	MOVIA	0x10
     004D 00rr                      1- 2333     	MOVAR	STK00
     004E 21EA                      1- 2334     	MOVIA	0xea
                                    1- 2335     	MCALL	_ip53xs_writeByte
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2336     	.line	953, "main.c"; 	pdata++;
                                    1- 2337     	BANKSEL	r0x1028
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 05rr                      1- 2338     	INCR	r0x1028,F
     0052 0903                      1- 2339     	BTRSS	STATUS,2
                                    1- 2340     	MGOTO	_00009_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2341     	BANKSEL	r0x1027
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 05rr                      1- 2342     	INCR	r0x1027,F
     0056                           1- 2343     _00009_DS_:
     0056 0903                      1- 2344     	BTRSS	STATUS,2
                                    1- 2345     	MGOTO	_00010_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2346     	BANKSEL	r0x1026
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 05rr                      1- 2347     	INCR	r0x1026,F
     005A                           1- 2348     _00010_DS_:
                                    1- 2349     	.line	954, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA1
                                    1- 2350     	BANKSEL	r0x1028
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1- 2351     	MOVR	r0x1028,W
     005C 00rr                      1- 2352     	MOVAR	STK01
                                    1- 2353     	BANKSEL	r0x1027
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1- 2354     	MOVR	r0x1027,W
     005F 00rr                      1- 2355     	MOVAR	STK00
                                    1- 2356     	BANKSEL	r0x1026
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2357     	MOVR	r0x1026,W
                                    1- 2358     	MCALL	__gptrget1
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2359     	BANKSEL	r0x1025
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 00rr                      1- 2360     	MOVAR	r0x1025
     0065 00rr                      1- 2361     	MOVAR	STK01
     0066 2111                      1- 2362     	MOVIA	0x11
     0067 00rr                      1- 2363     	MOVAR	STK00
     0068 21EA                      1- 2364     	MOVIA	0xea
                                    1- 2365     	MCALL	_ip53xs_writeByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2366     	.line	956, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x66);
     006A 2166                      1- 2367     	MOVIA	0x66
     006B 00rr                      1- 2368     	MOVAR	STK01
     006C 2112                      1- 2369     	MOVIA	0x12
     006D 00rr                      1- 2370     	MOVAR	STK00
     006E 21EA                      1- 2371     	MOVIA	0xea
                                    1- 2372     	MCALL	_ip53xs_writeByte
     006F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2373     	.line	958, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x66);
     0070 2166                      1- 2374     	MOVIA	0x66
     0071 00rr                      1- 2375     	MOVAR	STK01
     0072 2113                      1- 2376     	MOVIA	0x13
     0073 00rr                      1- 2377     	MOVAR	STK00
     0074 21EA                      1- 2378     	MOVIA	0xea
                                    1- 2379     	MCALL	_ip53xs_writeByte
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2380     	.line	960, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0076 2100                      1- 2381     	MOVIA	0x00
     0077 00rr                      1- 2382     	MOVAR	STK00
     0078 21EA                      1- 2383     	MOVIA	0xea
                                    1- 2384     	MCALL	_ip53xs_readByte
     0079 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2385     	BANKSEL	r0x1025
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 00rr                      1- 2386     	MOVAR	r0x1025
                                    1- 2387     	.line	962, "main.c"; 	do
     007C 2164                      1- 2388     	MOVIA	0x64
                                    1- 2389     	BANKSEL	r0x1024
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 2390     	MOVAR	r0x1024
     007F                           1- 2391     _02365_DS_:
                                    1- 2392     	.line	964, "main.c"; 	if (timer_out)
                                    1- 2393     	BANKSEL	r0x1024
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1- 2394     	MOVR	r0x1024,W
     0081 0D03                      1- 2395     	BTRSC	STATUS,2
                                    1- 2396     	MGOTO	_02363_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2397     	.line	966, "main.c"; 	timer_out--;
     0083 06rr                      1- 2398     	DECR	r0x1024,F
                                    1- 2399     	MGOTO	_02366_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2400     _02363_DS_:
                                    1- 2401     	.line	970, "main.c"; 	return FALSE;
     0085 2100                      1- 2402     	MOVIA	0x00
                                    1- 2403     	MGOTO	_02374_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 2404     _02366_DS_:
                                    1- 2405     	.line	972, "main.c"; 	} while (0x55 != reg_ip55xs);
                                    1- 2406     	BANKSEL	r0x1025
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 2407     	MOVR	r0x1025,W
     0089 2455                      1- 2408     	XORIA	0x55
     008A 0903                      1- 2409     	BTRSS	STATUS,2
                                    1- 2410     	MGOTO	_02365_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2411     	.line	974, "main.c"; 	pdata++;
                                    1- 2412     	BANKSEL	r0x1028
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 05rr                      1- 2413     	INCR	r0x1028,F
     008E 0903                      1- 2414     	BTRSS	STATUS,2
                                    1- 2415     	MGOTO	_00011_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2416     	BANKSEL	r0x1027
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 2417     	INCR	r0x1027,F
     0092                           1- 2418     _00011_DS_:
     0092 0903                      1- 2419     	BTRSS	STATUS,2
                                    1- 2420     	MGOTO	_00012_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2421     	BANKSEL	r0x1026
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 2422     	INCR	r0x1026,F
     0096                           1- 2423     _00012_DS_:
                                    1- 2424     	.line	975, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA2
                                    1- 2425     	BANKSEL	r0x1028
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 2426     	MOVR	r0x1028,W
     0098 00rr                      1- 2427     	MOVAR	STK01
                                    1- 2428     	BANKSEL	r0x1027
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 2429     	MOVR	r0x1027,W
     009B 00rr                      1- 2430     	MOVAR	STK00
                                    1- 2431     	BANKSEL	r0x1026
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 01rr                      1- 2432     	MOVR	r0x1026,W
                                    1- 2433     	MCALL	__gptrget1
     009E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2434     	BANKSEL	r0x1025
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 2435     	MOVAR	r0x1025
     00A1 00rr                      1- 2436     	MOVAR	STK01
     00A2 2110                      1- 2437     	MOVIA	0x10
     00A3 00rr                      1- 2438     	MOVAR	STK00
     00A4 21EA                      1- 2439     	MOVIA	0xea
                                    1- 2440     	MCALL	_ip53xs_writeByte
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2441     	.line	976, "main.c"; 	pdata++;
                                    1- 2442     	BANKSEL	r0x1028
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 05rr                      1- 2443     	INCR	r0x1028,F
     00A8 0903                      1- 2444     	BTRSS	STATUS,2
                                    1- 2445     	MGOTO	_00013_DS_
     00A9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2446     	BANKSEL	r0x1027
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 05rr                      1- 2447     	INCR	r0x1027,F
     00AC                           1- 2448     _00013_DS_:
     00AC 0903                      1- 2449     	BTRSS	STATUS,2
                                    1- 2450     	MGOTO	_00014_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2451     	BANKSEL	r0x1026
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 05rr                      1- 2452     	INCR	r0x1026,F
     00B0                           1- 2453     _00014_DS_:
                                    1- 2454     	.line	977, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA3
                                    1- 2455     	BANKSEL	r0x1028
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 01rr                      1- 2456     	MOVR	r0x1028,W
     00B2 00rr                      1- 2457     	MOVAR	STK01
                                    1- 2458     	BANKSEL	r0x1027
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 01rr                      1- 2459     	MOVR	r0x1027,W
     00B5 00rr                      1- 2460     	MOVAR	STK00
                                    1- 2461     	BANKSEL	r0x1026
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 2462     	MOVR	r0x1026,W
                                    1- 2463     	MCALL	__gptrget1
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2464     	BANKSEL	r0x1025
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 2465     	MOVAR	r0x1025
     00BB 00rr                      1- 2466     	MOVAR	STK01
     00BC 2111                      1- 2467     	MOVIA	0x11
     00BD 00rr                      1- 2468     	MOVAR	STK00
     00BE 21EA                      1- 2469     	MOVIA	0xea
                                    1- 2470     	MCALL	_ip53xs_writeByte
     00BF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2471     	.line	978, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x77);
     00C0 2177                      1- 2472     	MOVIA	0x77
     00C1 00rr                      1- 2473     	MOVAR	STK01
     00C2 2112                      1- 2474     	MOVIA	0x12
     00C3 00rr                      1- 2475     	MOVAR	STK00
     00C4 21EA                      1- 2476     	MOVIA	0xea
                                    1- 2477     	MCALL	_ip53xs_writeByte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2478     	.line	980, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x77);
     00C6 2177                      1- 2479     	MOVIA	0x77
     00C7 00rr                      1- 2480     	MOVAR	STK01
     00C8 2113                      1- 2481     	MOVIA	0x13
     00C9 00rr                      1- 2482     	MOVAR	STK00
     00CA 21EA                      1- 2483     	MOVIA	0xea
                                    1- 2484     	MCALL	_ip53xs_writeByte
     00CB 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2485     	.line	982, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     00CC 2100                      1- 2486     	MOVIA	0x00
     00CD 00rr                      1- 2487     	MOVAR	STK00
     00CE 21EA                      1- 2488     	MOVIA	0xea
                                    1- 2489     	MCALL	_ip53xs_readByte
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2490     	BANKSEL	r0x1025
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 00rr                      1- 2491     	MOVAR	r0x1025
                                    1- 2492     	.line	984, "main.c"; 	do
     00D2 2164                      1- 2493     	MOVIA	0x64
                                    1- 2494     	BANKSEL	r0x1024
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1- 2495     	MOVAR	r0x1024
     00D5                           1- 2496     _02371_DS_:
                                    1- 2497     	.line	986, "main.c"; 	if (timer_out)
                                    1- 2498     	BANKSEL	r0x1024
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 01rr                      1- 2499     	MOVR	r0x1024,W
     00D7 0D03                      1- 2500     	BTRSC	STATUS,2
                                    1- 2501     	MGOTO	_02369_DS_
     00D8 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2502     	.line	988, "main.c"; 	timer_out--;
     00D9 06rr                      1- 2503     	DECR	r0x1024,F
                                    1- 2504     	MGOTO	_02372_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
     00DB                           1- 2505     _02369_DS_:
                                    1- 2506     	.line	992, "main.c"; 	return FALSE;
     00DB 2100                      1- 2507     	MOVIA	0x00
                                    1- 2508     	MGOTO	_02374_DS_
     00DC 3rrr                      3-   62 m1      LGOTO rom_address
     00DD                           1- 2509     _02372_DS_:
                                    1- 2510     	.line	994, "main.c"; 	} while (0xFF != reg_ip55xs);
                                    1- 2511     	BANKSEL	r0x1025
     00DD rrrr                      3-  109 m1      .banksel ram_address
     00DE 01rr                      1- 2512     	MOVR	r0x1025,W
     00DF 24FF                      1- 2513     	XORIA	0xff
     00E0 0903                      1- 2514     	BTRSS	STATUS,2
                                    1- 2515     	MGOTO	_02371_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2516     	.line	995, "main.c"; 	return TRUE;
     00E2 2101                      1- 2517     	MOVIA	0x01
     00E3                           1- 2518     _02374_DS_:
                                    1- 2519     	.line	996, "main.c"; 	}
                                    1- 2520     	RETURN	
     00E3 0010                      3-   39 m1      ret
                                    1- 2521     ; exit point of _ip55xs_write4Bytes
                                    1- 2523     ;***
                                    1- 2524     ;  pBlock Stats: dbName = C
                                    1- 2525     ;***
                                    1- 2526     ;has an exit
                                    1- 2527     ;functions called:
                                    1- 2528     ;   _i2c_start
                                    1- 2529     ;   _i2c_writeByte
                                    1- 2530     ;   _i2c_stop
                                    1- 2531     ;   _i2c_writeByte
                                    1- 2532     ;   _i2c_stop
                                    1- 2533     ;   _i2c_start
                                    1- 2534     ;   _i2c_writeByte
                                    1- 2535     ;   _i2c_stop
                                    1- 2536     ;   _i2c_readByte
                                    1- 2537     ;   _i2c_send_nack
                                    1- 2538     ;   _i2c_stop
                                    1- 2539     ;   _i2c_start
                                    1- 2540     ;   _i2c_writeByte
                                    1- 2541     ;   _i2c_stop
                                    1- 2542     ;   _i2c_writeByte
                                    1- 2543     ;   _i2c_stop
                                    1- 2544     ;   _i2c_start
                                    1- 2545     ;   _i2c_writeByte
                                    1- 2546     ;   _i2c_stop
                                    1- 2547     ;   _i2c_readByte
                                    1- 2548     ;   _i2c_send_nack
                                    1- 2549     ;   _i2c_stop
                                    1- 2550     ;5 compiler assigned registers:
                                    1- 2551     ;   r0x1020
                                    1- 2552     ;   STK00
                                    1- 2553     ;   r0x1021
                                    1- 2554     ;   r0x1022
                                    1- 2555     ;   r0x1023
                                    1- 2556     ;; Starting pCode block
                                    1- 2557     .segment "code"; module=main, function=_ip53xs_readByte
                                    1- 2559     ;local variable name mapping:
     0000                           1- 2563     _ip53xs_readByte:
                                    1- 2564     ; 2 exit points
                                    1- 2565     	.line	894, "main.c"; 	unsigned char ip53xs_readByte(unsigned char deviceAddr, unsigned char regAddr) //(unsigned char regAddr)
                                    1- 2566     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2567     	MOVAR	r0x1020
     0002 01rr                      1- 2568     	MOVR	STK00,W
                                    1- 2569     	BANKSEL	r0x1021
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2570     	MOVAR	r0x1021
                                    1- 2571     	.line	896, "main.c"; 	unsigned char readByte = 0;
                                    1- 2572     	BANKSEL	r0x1022
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 2573     	CLRR	r0x1022
                                    1- 2574     	.line	897, "main.c"; 	if (P_I2C_INT)
     0007 09rr                      1- 2575     	BTRSS	_PORTAbits,2
                                    1- 2576     	MGOTO	_02350_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2577     	.line	899, "main.c"; 	i2c_start();
                                    1- 2578     	MCALL	_i2c_start
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2579     	.line	901, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2580     	BANKSEL	r0x1020
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1- 2581     	MOVR	r0x1020,W
                                    1- 2582     	MCALL	_i2c_writeByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2583     	BANKSEL	r0x1023
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2584     	MOVAR	r0x1023
     000F 01rr                      1- 2585     	MOVR	r0x1023,W
     0010 0D03                      1- 2586     	BTRSC	STATUS,2
                                    1- 2587     	MGOTO	_02344_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2588     	.line	903, "main.c"; 	i2c_stop();
                                    1- 2589     	MCALL	_i2c_stop
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2590     	.line	904, "main.c"; 	return FALSE;
     0013 2100                      1- 2591     	MOVIA	0x00
                                    1- 2592     	MGOTO	_02351_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
     0015                           1- 2593     _02344_DS_:
                                    1- 2594     	.line	907, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2595     	BANKSEL	r0x1021
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2596     	MOVR	r0x1021,W
                                    1- 2597     	MCALL	_i2c_writeByte
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2598     	BANKSEL	r0x1021
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2599     	MOVAR	r0x1021
     001A 01rr                      1- 2600     	MOVR	r0x1021,W
     001B 0D03                      1- 2601     	BTRSC	STATUS,2
                                    1- 2602     	MGOTO	_02346_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2603     	.line	909, "main.c"; 	i2c_stop();
                                    1- 2604     	MCALL	_i2c_stop
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2605     	.line	910, "main.c"; 	return FALSE;
     001E 2100                      1- 2606     	MOVIA	0x00
                                    1- 2607     	MGOTO	_02351_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2608     _02346_DS_:
                                    1- 2609     	.line	913, "main.c"; 	i2c_start();
                                    1- 2610     	MCALL	_i2c_start
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2611     	.line	915, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 2612     	BANKSEL	r0x1020
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 18rr                      1- 2613     	BSR	r0x1020,0
     0023 01rr                      1- 2614     	MOVR	r0x1020,W
                                    1- 2615     	MCALL	_i2c_writeByte
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2616     	BANKSEL	r0x1020
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 2617     	MOVAR	r0x1020
     0027 01rr                      1- 2618     	MOVR	r0x1020,W
     0028 0D03                      1- 2619     	BTRSC	STATUS,2
                                    1- 2620     	MGOTO	_02348_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2621     	.line	917, "main.c"; 	i2c_stop();
                                    1- 2622     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2623     	.line	918, "main.c"; 	return FALSE;
     002B 2100                      1- 2624     	MOVIA	0x00
                                    1- 2625     	MGOTO	_02351_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 2626     _02348_DS_:
                                    1- 2627     	.line	921, "main.c"; 	readByte = i2c_readByte();
                                    1- 2628     	MCALL	_i2c_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2629     	BANKSEL	r0x1022
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2630     	MOVAR	r0x1022
                                    1- 2631     	.line	922, "main.c"; 	i2c_send_nack();
                                    1- 2632     	MCALL	_i2c_send_nack
     0030 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2633     	.line	923, "main.c"; 	i2c_stop();
                                    1- 2634     	MCALL	_i2c_stop
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1- 2635     _02350_DS_:
                                    1- 2636     	.line	926, "main.c"; 	return readByte;
                                    1- 2637     	BANKSEL	r0x1022
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 2638     	MOVR	r0x1022,W
     0034                           1- 2639     _02351_DS_:
                                    1- 2640     	.line	927, "main.c"; 	}
                                    1- 2641     	RETURN	
     0034 0010                      3-   39 m1      ret
                                    1- 2642     ; exit point of _ip53xs_readByte
                                    1- 2644     ;***
                                    1- 2645     ;  pBlock Stats: dbName = C
                                    1- 2646     ;***
                                    1- 2647     ;has an exit
                                    1- 2648     ;functions called:
                                    1- 2649     ;   _i2c_start
                                    1- 2650     ;   _i2c_writeByte
                                    1- 2651     ;   _i2c_stop
                                    1- 2652     ;   _i2c_writeByte
                                    1- 2653     ;   _i2c_stop
                                    1- 2654     ;   _i2c_writeByte
                                    1- 2655     ;   _i2c_stop
                                    1- 2656     ;   _i2c_stop
                                    1- 2657     ;   _i2c_start
                                    1- 2658     ;   _i2c_writeByte
                                    1- 2659     ;   _i2c_stop
                                    1- 2660     ;   _i2c_writeByte
                                    1- 2661     ;   _i2c_stop
                                    1- 2662     ;   _i2c_writeByte
                                    1- 2663     ;   _i2c_stop
                                    1- 2664     ;   _i2c_stop
                                    1- 2665     ;5 compiler assigned registers:
                                    1- 2666     ;   r0x1020
                                    1- 2667     ;   STK00
                                    1- 2668     ;   r0x1021
                                    1- 2669     ;   STK01
                                    1- 2670     ;   r0x1022
                                    1- 2671     ;; Starting pCode block
                                    1- 2672     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 2674     ;local variable name mapping:
     0000                           1- 2678     _ip53xs_writeByte:
                                    1- 2679     ; 2 exit points
                                    1- 2680     	.line	864, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 2681     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2682     	MOVAR	r0x1020
     0002 01rr                      1- 2683     	MOVR	STK00,W
                                    1- 2684     	BANKSEL	r0x1021
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2685     	MOVAR	r0x1021
     0005 01rr                      1- 2686     	MOVR	STK01,W
                                    1- 2687     	BANKSEL	r0x1022
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2688     	MOVAR	r0x1022
                                    1- 2689     	.line	866, "main.c"; 	if (P_I2C_INT)
     0008 09rr                      1- 2690     	BTRSS	_PORTAbits,2
                                    1- 2691     	MGOTO	_02337_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2692     	.line	868, "main.c"; 	i2c_start();
                                    1- 2693     	MCALL	_i2c_start
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2694     	.line	870, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2695     	BANKSEL	r0x1020
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2696     	MOVR	r0x1020,W
                                    1- 2697     	MCALL	_i2c_writeByte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2698     	BANKSEL	r0x1020
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2699     	MOVAR	r0x1020
     0010 01rr                      1- 2700     	MOVR	r0x1020,W
     0011 0D03                      1- 2701     	BTRSC	STATUS,2
                                    1- 2702     	MGOTO	_02331_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2703     	.line	872, "main.c"; 	i2c_stop();
                                    1- 2704     	MCALL	_i2c_stop
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2705     	.line	873, "main.c"; 	return FALSE;
     0014 2100                      1- 2706     	MOVIA	0x00
                                    1- 2707     	MGOTO	_02338_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2708     _02331_DS_:
                                    1- 2709     	.line	876, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2710     	BANKSEL	r0x1021
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 2711     	MOVR	r0x1021,W
                                    1- 2712     	MCALL	_i2c_writeByte
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2713     	BANKSEL	r0x1020
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2714     	MOVAR	r0x1020
     001B 01rr                      1- 2715     	MOVR	r0x1020,W
     001C 0D03                      1- 2716     	BTRSC	STATUS,2
                                    1- 2717     	MGOTO	_02333_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2718     	.line	878, "main.c"; 	i2c_stop();
                                    1- 2719     	MCALL	_i2c_stop
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2720     	.line	879, "main.c"; 	return FALSE;
     001F 2100                      1- 2721     	MOVIA	0x00
                                    1- 2722     	MGOTO	_02338_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2723     _02333_DS_:
                                    1- 2724     	.line	882, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 2725     	BANKSEL	r0x1022
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 2726     	MOVR	r0x1022,W
                                    1- 2727     	MCALL	_i2c_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2728     	BANKSEL	r0x1020
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2729     	MOVAR	r0x1020
     0026 01rr                      1- 2730     	MOVR	r0x1020,W
     0027 0D03                      1- 2731     	BTRSC	STATUS,2
                                    1- 2732     	MGOTO	_02335_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2733     	.line	884, "main.c"; 	i2c_stop();
                                    1- 2734     	MCALL	_i2c_stop
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2735     	.line	885, "main.c"; 	return FALSE;
     002A 2100                      1- 2736     	MOVIA	0x00
                                    1- 2737     	MGOTO	_02338_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 2738     _02335_DS_:
                                    1- 2739     	.line	888, "main.c"; 	i2c_stop();
                                    1- 2740     	MCALL	_i2c_stop
     002C 2rrr                      3-   65 m1      LCALL rom_address
     002D                           1- 2741     _02337_DS_:
                                    1- 2742     	.line	891, "main.c"; 	return TRUE;
     002D 2101                      1- 2743     	MOVIA	0x01
     002E                           1- 2744     _02338_DS_:
                                    1- 2745     	.line	892, "main.c"; 	}
                                    1- 2746     	RETURN	
     002E 0010                      3-   39 m1      ret
                                    1- 2747     ; exit point of _ip53xs_writeByte
                                    1- 2749     ;***
                                    1- 2750     ;  pBlock Stats: dbName = C
                                    1- 2751     ;***
                                    1- 2752     ;has an exit
                                    1- 2753     ;functions called:
                                    1- 2754     ;   __dly_us
                                    1- 2755     ;   __dly_us
                                    1- 2756     ;   __dly_us
                                    1- 2757     ;   __dly_us
                                    1- 2758     ;3 compiler assigned registers:
                                    1- 2759     ;   r0x101C
                                    1- 2760     ;   r0x101D
                                    1- 2761     ;   r0x101E
                                    1- 2762     ;; Starting pCode block
                                    1- 2763     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2765     ;local variable name mapping:
     0000                           1- 2768     _i2c_readByte:
                                    1- 2769     ; 2 exit points
                                    1- 2770     	.line	838, "main.c"; 	unsigned char readByte = 0;
                                    1- 2771     	BANKSEL	r0x101C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2772     	CLRR	r0x101C
                                    1- 2773     	.line	840, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Err                      1- 2774     	BCR	_PORTAbits,4
                                    1- 2775     	.line	841, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2776     	IOSTR	_IOSTA
                                    1- 2777     	BANKSEL	r0x101D
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2778     	MOVAR	r0x101D
     0006 19rr                      1- 2779     	BSR	r0x101D,3
     0007 01rr                      1- 2780     	MOVR	r0x101D,W
     0008 000r                      1- 2781     	IOST	_IOSTA
                                    1- 2782     	.line	843, "main.c"; 	while (i--)
     0009 2108                      1- 2783     	MOVIA	0x08
     000A 00rr                      1- 2784     	MOVAR	r0x101D
     000B                           1- 2785     _02323_DS_:
                                    1- 2786     	BANKSEL	r0x101D
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2787     	MOVR	r0x101D,W
                                    1- 2788     	BANKSEL	r0x101E
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2789     	MOVAR	r0x101E
                                    1- 2790     	BANKSEL	r0x101D
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2791     	DECR	r0x101D,F
                                    1- 2792     	BANKSEL	r0x101E
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2793     	MOVR	r0x101E,W
     0013 0D03                      1- 2794     	BTRSC	STATUS,2
                                    1- 2795     	MGOTO	_02325_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2796     	.line	846, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 1Arr                      1- 2797     	BSR	_PORTAbits,4
                                    1- 2798     	.line	847, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2799     	MOVIA	0x00
                                    1- 2800     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2801     	.line	848, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2802     	BCR	STATUS,0
                                    1- 2803     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2804     	RLR	r0x101C,F
                                    1- 2805     	.line	850, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2806     	BTRSC	_PORTAbits,3
                                    1- 2807     	.line	852, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2808     	BSR	r0x101C,0
                                    1- 2809     	.line	855, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Err                      1- 2810     	BCR	_PORTAbits,4
                                    1- 2811     	.line	856, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2812     	MOVIA	0x00
                                    1- 2813     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2814     	MGOTO	_02323_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2815     _02325_DS_:
                                    1- 2816     	.line	860, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2817     	IOSTR	_IOSTA
                                    1- 2818     	BANKSEL	r0x101D
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2819     	MOVAR	r0x101D
     0024 1Drr                      1- 2820     	BCR	r0x101D,3
     0025 01rr                      1- 2821     	MOVR	r0x101D,W
     0026 000r                      1- 2822     	IOST	_IOSTA
                                    1- 2823     	.line	861, "main.c"; 	return readByte;  // 返回数据
                                    1- 2824     	BANKSEL	r0x101C
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2825     	MOVR	r0x101C,W
                                    1- 2826     	.line	862, "main.c"; 	}
                                    1- 2827     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2828     ; exit point of _i2c_readByte
                                    1- 2830     ;***
                                    1- 2831     ;  pBlock Stats: dbName = C
                                    1- 2832     ;***
                                    1- 2833     ;has an exit
                                    1- 2834     ;functions called:
                                    1- 2835     ;   __dly_us
                                    1- 2836     ;   __dly_us
                                    1- 2837     ;   _i2c_chk_ack
                                    1- 2838     ;   __dly_us
                                    1- 2839     ;   __dly_us
                                    1- 2840     ;   _i2c_chk_ack
                                    1- 2841     ;3 compiler assigned registers:
                                    1- 2842     ;   r0x101D
                                    1- 2843     ;   r0x101E
                                    1- 2844     ;   r0x101F
                                    1- 2845     ;; Starting pCode block
                                    1- 2846     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2848     ;local variable name mapping:
     0000                           1- 2851     _i2c_writeByte:
                                    1- 2852     ; 2 exit points
                                    1- 2853     	.line	810, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2854     	BANKSEL	r0x101D
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2855     	MOVAR	r0x101D
                                    1- 2856     	.line	814, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2857     	MOVIA	0x08
                                    1- 2858     	BANKSEL	r0x101E
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2859     	MOVAR	r0x101E
     0005                           1- 2860     _02314_DS_:
                                    1- 2861     	BANKSEL	r0x101E
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2862     	MOVR	r0x101E,W
                                    1- 2863     	BANKSEL	r0x101F
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2864     	MOVAR	r0x101F
                                    1- 2865     	BANKSEL	r0x101E
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2866     	DECR	r0x101E,F
                                    1- 2867     	BANKSEL	r0x101F
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2868     	MOVR	r0x101F,W
     000D 0D03                      1- 2869     	BTRSC	STATUS,2
                                    1- 2870     	MGOTO	_02316_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2871     	.line	816, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Err                      1- 2872     	BCR	_PORTAbits,4
                                    1- 2873     	.line	817, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2874     	MOVIA	0x00
                                    1- 2875     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2876     	.line	818, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2877     	BANKSEL	r0x101D
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2878     	BTRSS	r0x101D,7
                                    1- 2879     	MGOTO	_02312_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2880     	.line	820, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2881     	BSR	_PORTAbits,3
                                    1- 2882     	MGOTO	_02313_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2883     _02312_DS_:
                                    1- 2884     	.line	824, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2885     	BCR	_PORTAbits,3
     0018                           1- 2886     _02313_DS_:
                                    1- 2887     	.line	826, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2888     	BCR	STATUS,0
                                    1- 2889     	BANKSEL	r0x101D
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2890     	RLR	r0x101D,F
                                    1- 2891     	.line	827, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 1Arr                      1- 2892     	BSR	_PORTAbits,4
                                    1- 2893     	.line	828, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2894     	MOVIA	0x00
                                    1- 2895     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2896     	.line	829, "main.c"; 	NOP();
     001E 0000                      1- 2897     	nop
                                    1- 2898     	MGOTO	_02314_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2899     _02316_DS_:
                                    1- 2900     	.line	832, "main.c"; 	return i2c_chk_ack();
                                    1- 2901     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2902     	BANKSEL	r0x101D
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2903     	MOVAR	r0x101D
                                    1- 2904     	.line	833, "main.c"; 	}
                                    1- 2905     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2906     ; exit point of _i2c_writeByte
                                    1- 2908     ;***
                                    1- 2909     ;  pBlock Stats: dbName = C
                                    1- 2910     ;***
                                    1- 2911     ;has an exit
                                    1- 2912     ;functions called:
                                    1- 2913     ;   __dly_us
                                    1- 2914     ;   __dly_us
                                    1- 2915     ;   __dly_us
                                    1- 2916     ;   __dly_us
                                    1- 2917     ;; Starting pCode block
                                    1- 2918     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2920     _i2c_send_nack:
                                    1- 2921     ; 2 exit points
                                    1- 2922     	.line	801, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2923     	BCR	_PORTAbits,4
                                    1- 2924     	.line	802, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2925     	BSR	_PORTAbits,3
                                    1- 2926     	.line	803, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2927     	MOVIA	0x0a
                                    1- 2928     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2929     	.line	804, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2930     	BSR	_PORTAbits,4
                                    1- 2931     	.line	805, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2932     	MOVIA	0x0a
                                    1- 2933     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2934     	.line	806, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2935     	BCR	_PORTAbits,4
                                    1- 2936     	.line	807, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2937     	BCR	_PORTAbits,3
                                    1- 2938     	.line	808, "main.c"; 	}
                                    1- 2939     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2940     ; exit point of _i2c_send_nack
                                    1- 2942     ;***
                                    1- 2943     ;  pBlock Stats: dbName = C
                                    1- 2944     ;***
                                    1- 2945     ;has an exit
                                    1- 2946     ;functions called:
                                    1- 2947     ;   __dly_us
                                    1- 2948     ;   __dly_us
                                    1- 2949     ;   __dly_us
                                    1- 2950     ;   __dly_us
                                    1- 2951     ;; Starting pCode block
                                    1- 2952     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2954     _i2c_send_ack:
                                    1- 2955     ; 2 exit points
                                    1- 2956     	.line	790, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2957     	BCR	_PORTAbits,4
                                    1- 2958     	.line	791, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2959     	BCR	_PORTAbits,3
                                    1- 2960     	.line	792, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2961     	MOVIA	0x0a
                                    1- 2962     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2963     	.line	793, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2964     	BSR	_PORTAbits,4
                                    1- 2965     	.line	794, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2966     	MOVIA	0x0a
                                    1- 2967     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2968     	.line	795, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2969     	BCR	_PORTAbits,4
                                    1- 2970     	.line	796, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2971     	BCR	_PORTAbits,3
                                    1- 2972     	.line	797, "main.c"; 	}
                                    1- 2973     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2974     ; exit point of _i2c_send_ack
                                    1- 2976     ;***
                                    1- 2977     ;  pBlock Stats: dbName = C
                                    1- 2978     ;***
                                    1- 2979     ;has an exit
                                    1- 2980     ;functions called:
                                    1- 2981     ;   __dly_us
                                    1- 2982     ;   __dly_us
                                    1- 2983     ;   __dly_us
                                    1- 2984     ;   __dly_us
                                    1- 2985     ;1 compiler assigned register :
                                    1- 2986     ;   r0x101C
                                    1- 2987     ;; Starting pCode block
                                    1- 2988     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2990     ;local variable name mapping:
     0000                           1- 2992     _i2c_chk_ack:
                                    1- 2993     ; 2 exit points
                                    1- 2994     	.line	767, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Err                      1- 2995     	BCR	_PORTAbits,4
                                    1- 2996     	.line	768, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2997     	IOSTR	_IOSTA
                                    1- 2998     	BANKSEL	r0x101C
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2999     	MOVAR	r0x101C
     0004 19rr                      1- 3000     	BSR	r0x101C,3
     0005 01rr                      1- 3001     	MOVR	r0x101C,W
     0006 000r                      1- 3002     	IOST	_IOSTA
                                    1- 3003     	.line	770, "main.c"; 	_dly_us(0);
     0007 2100                      1- 3004     	MOVIA	0x00
                                    1- 3005     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3006     	.line	771, "main.c"; 	P_I2C_SCL_SET;
     0009 1Arr                      1- 3007     	BSR	_PORTAbits,4
                                    1- 3008     	.line	772, "main.c"; 	_dly_us(0);
     000A 2100                      1- 3009     	MOVIA	0x00
                                    1- 3010     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3011     	.line	773, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 3012     	MOVIA	0xfa
                                    1- 3013     	BANKSEL	r0x101C
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 3014     	MOVAR	r0x101C
     000F                           1- 3015     _02295_DS_:
     000F 09rr                      1- 3016     	BTRSS	_PORTAbits,3
                                    1- 3017     	MGOTO	_02297_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3018     	.line	775, "main.c"; 	--getAckTime;
                                    1- 3019     	BANKSEL	r0x101C
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 3020     	DECRSZ	r0x101C,F
                                    1- 3021     	.line	777, "main.c"; 	if (0 == getAckTime)
                                    1- 3022     	MGOTO	_02295_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3023     	.line	779, "main.c"; 	return 1;
     0014 2101                      1- 3024     	MOVIA	0x01
                                    1- 3025     	MGOTO	_02298_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 3026     _02297_DS_:
                                    1- 3027     	.line	783, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Err                      1- 3028     	BCR	_PORTAbits,4
                                    1- 3029     	.line	784, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 3030     	IOSTR	_IOSTA
                                    1- 3031     	BANKSEL	r0x101C
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 3032     	MOVAR	r0x101C
     001A 1Drr                      1- 3033     	BCR	r0x101C,3
     001B 01rr                      1- 3034     	MOVR	r0x101C,W
     001C 000r                      1- 3035     	IOST	_IOSTA
                                    1- 3036     	.line	785, "main.c"; 	return 0;
     001D 2100                      1- 3037     	MOVIA	0x00
     001E                           1- 3038     _02298_DS_:
                                    1- 3039     	.line	786, "main.c"; 	}
                                    1- 3040     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 3041     ; exit point of _i2c_chk_ack
                                    1- 3043     ;***
                                    1- 3044     ;  pBlock Stats: dbName = C
                                    1- 3045     ;***
                                    1- 3046     ;has an exit
                                    1- 3047     ;functions called:
                                    1- 3048     ;   __dly_us
                                    1- 3049     ;   __dly_us
                                    1- 3050     ;   __dly_us
                                    1- 3051     ;   __dly_us
                                    1- 3052     ;; Starting pCode block
                                    1- 3053     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 3055     _i2c_stop:
                                    1- 3056     ; 2 exit points
                                    1- 3057     	.line	755, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 3058     	BCR	_PORTAbits,4
                                    1- 3059     	.line	756, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 3060     	BCR	_PORTAbits,3
                                    1- 3061     	.line	757, "main.c"; 	_dly_us(10);
     0002 210A                      1- 3062     	MOVIA	0x0a
                                    1- 3063     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3064     	.line	758, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 3065     	BSR	_PORTAbits,4
                                    1- 3066     	.line	759, "main.c"; 	_dly_us(10);
     0005 210A                      1- 3067     	MOVIA	0x0a
                                    1- 3068     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3069     	.line	760, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 3070     	BSR	_PORTAbits,3
                                    1- 3071     	.line	761, "main.c"; 	}
                                    1- 3072     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3073     ; exit point of _i2c_stop
                                    1- 3075     ;***
                                    1- 3076     ;  pBlock Stats: dbName = C
                                    1- 3077     ;***
                                    1- 3078     ;has an exit
                                    1- 3079     ;functions called:
                                    1- 3080     ;   __dly_us
                                    1- 3081     ;   __dly_us
                                    1- 3082     ;   __dly_us
                                    1- 3083     ;   __dly_us
                                    1- 3084     ;1 compiler assigned register :
                                    1- 3085     ;   r0x101C
                                    1- 3086     ;; Starting pCode block
                                    1- 3087     .segment "code"; module=main, function=_i2c_start
     0000                           1- 3089     _i2c_start:
                                    1- 3090     ; 2 exit points
                                    1- 3091     	.line	742, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 3092     	BSR	_PORTAbits,3
                                    1- 3093     	.line	743, "main.c"; 	P_I2C_SCL_SET;
     0001 1Arr                      1- 3094     	BSR	_PORTAbits,4
                                    1- 3095     	.line	744, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 3096     	IOSTR	_IOSTA
                                    1- 3097     	BANKSEL	r0x101C
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 3098     	MOVAR	r0x101C
     0005 1Drr                      1- 3099     	BCR	r0x101C,3
     0006 01rr                      1- 3100     	MOVR	r0x101C,W
     0007 000r                      1- 3101     	IOST	_IOSTA
                                    1- 3102     	.line	745, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 3103     	IOSTR	_IOSTA
     0009 00rr                      1- 3104     	MOVAR	r0x101C
     000A 1Err                      1- 3105     	BCR	r0x101C,4
     000B 01rr                      1- 3106     	MOVR	r0x101C,W
     000C 000r                      1- 3107     	IOST	_IOSTA
                                    1- 3108     	.line	746, "main.c"; 	_dly_us(10);
     000D 210A                      1- 3109     	MOVIA	0x0a
                                    1- 3110     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3111     	.line	747, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 3112     	BCR	_PORTAbits,3
                                    1- 3113     	.line	748, "main.c"; 	_dly_us(10);
     0010 210A                      1- 3114     	MOVIA	0x0a
                                    1- 3115     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3116     	.line	749, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Err                      1- 3117     	BCR	_PORTAbits,4
                                    1- 3118     	.line	750, "main.c"; 	}
                                    1- 3119     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 3120     ; exit point of _i2c_start
                                    1- 3122     ;***
                                    1- 3123     ;  pBlock Stats: dbName = C
                                    1- 3124     ;***
                                    1- 3125     ;has an exit
                                    1- 3126     ;functions called:
                                    1- 3127     ;   __dly_us
                                    1- 3128     ;   __dly_us
                                    1- 3129     ;1 compiler assigned register :
                                    1- 3130     ;   r0x101C
                                    1- 3131     ;; Starting pCode block
                                    1- 3132     .segment "code"; module=main, function=_gpioKeyScan
     0000                           1- 3134     _gpioKeyScan:
                                    1- 3135     ; 2 exit points
                                    1- 3136     	.line	611, "main.c"; 	P_KEY_INPUT;
     0000 001r                      1- 3137     	IOSTR	_IOSTB
                                    1- 3138     	BANKSEL	r0x101C
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3139     	MOVAR	r0x101C
     0003 18rr                      1- 3140     	BSR	r0x101C,0
     0004 01rr                      1- 3141     	MOVR	r0x101C,W
     0005 000r                      1- 3142     	IOST	_IOSTB
                                    1- 3143     	.line	612, "main.c"; 	_dly_us(5);
     0006 2105                      1- 3144     	MOVIA	0x05
                                    1- 3145     	MCALL	__dly_us
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3146     	.line	613, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 3147     	BANKSEL	_gpioKeyWaitTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 01rr                      1- 3148     	MOVR	_gpioKeyWaitTimer,W
     000A 0D03                      1- 3149     	BTRSC	STATUS,2
                                    1- 3150     	MGOTO	_02204_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3151     	.line	615, "main.c"; 	gpioKeyWaitTimer--;
     000C 01rr                      1- 3152     	MOVR	_gpioKeyWaitTimer,W
                                    1- 3153     	BANKSEL	r0x101C
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 3154     	MOVAR	r0x101C
     000F 06rr                      1- 3155     	DECR	r0x101C,W
                                    1- 3156     	BANKSEL	_gpioKeyWaitTimer
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 3157     	MOVAR	_gpioKeyWaitTimer
     0012                           1- 3158     _02204_DS_:
                                    1- 3159     	.line	618, "main.c"; 	indexKey = 0;
                                    1- 3160     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Drr                      1- 3161     	BCR	_vFlag_1,2
                                    1- 3162     	.line	620, "main.c"; 	if (P_KEY)
     0014 08rr                      1- 3163     	BTRSS	_PORTBbits,0
                                    1- 3164     	MGOTO	_02206_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3165     	.line	622, "main.c"; 	indexKey = 1;
     0016 19rr                      1- 3166     	BSR	_vFlag_1,2
                                    1- 3167     	.line	623, "main.c"; 	P_KEY_IPS_SET;
     0017 18rr                      1- 3168     	BSR	_PORTBbits,1
                                    1- 3169     	.line	624, "main.c"; 	P_KEY_IPS_INPUT;
     0018 001r                      1- 3170     	IOSTR	_IOSTB
                                    1- 3171     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 3172     	MOVAR	r0x101C
     001B 18rr                      1- 3173     	BSR	r0x101C,1
     001C 01rr                      1- 3174     	MOVR	r0x101C,W
     001D 000r                      1- 3175     	IOST	_IOSTB
     001E                           1- 3176     _02206_DS_:
                                    1- 3177     	.line	627, "main.c"; 	switch (gpioKeyState)
                                    1- 3178     	BANKSEL	_gpioKeyState
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 01rr                      1- 3179     	MOVR	_gpioKeyState,W
     0020 0D03                      1- 3180     	BTRSC	STATUS,2
                                    1- 3181     	MGOTO	_02207_DS_
     0021 3rrr                      3-   62 m1      LGOTO rom_address
     0022 01rr                      1- 3182     	MOVR	_gpioKeyState,W
     0023 2401                      1- 3183     	XORIA	0x01
     0024 0D03                      1- 3184     	BTRSC	STATUS,2
                                    1- 3185     	MGOTO	_02210_DS_
     0025 3rrr                      3-   62 m1      LGOTO rom_address
     0026 01rr                      1- 3186     	MOVR	_gpioKeyState,W
     0027 2402                      1- 3187     	XORIA	0x02
     0028 0D03                      1- 3188     	BTRSC	STATUS,2
                                    1- 3189     	MGOTO	_02216_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A 01rr                      1- 3190     	MOVR	_gpioKeyState,W
     002B 2403                      1- 3191     	XORIA	0x03
     002C 0D03                      1- 3192     	BTRSC	STATUS,2
                                    1- 3193     	MGOTO	_02222_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3194     	MGOTO	_02225_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
     002F                           1- 3195     _02207_DS_:
                                    1- 3196     	.line	630, "main.c"; 	if (indexKey)
                                    1- 3197     	BANKSEL	_vFlag_1
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 09rr                      1- 3198     	BTRSS	_vFlag_1,2
                                    1- 3199     	MGOTO	_02209_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3200     	.line	633, "main.c"; 	return MSG_NONE;
     0032 2100                      1- 3201     	MOVIA	0x00
                                    1- 3202     	MGOTO	_02227_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
     0034                           1- 3203     _02209_DS_:
                                    1- 3204     	.line	638, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME; // gSysTick_current;
     0034 2103                      1- 3205     	MOVIA	0x03
                                    1- 3206     	BANKSEL	_gpioKeyWaitTimer
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 3207     	MOVAR	_gpioKeyWaitTimer
                                    1- 3208     	.line	641, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0037 2101                      1- 3209     	MOVIA	0x01
                                    1- 3210     	BANKSEL	_gpioKeyState
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 00rr                      1- 3211     	MOVAR	_gpioKeyState
     003A                           1- 3212     _02210_DS_:
                                    1- 3213     	.line	644, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3214     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 09rr                      1- 3215     	BTRSS	_vFlag_1,2
                                    1- 3216     	MGOTO	_02214_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3217     	.line	648, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3218     	BANKSEL	_gpioKeyState
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1- 3219     	CLRR	_gpioKeyState
                                    1- 3220     	MGOTO	_02226_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 3221     _02214_DS_:
                                    1- 3222     	.line	651, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_JTTER_TIME)
                                    1- 3223     	BANKSEL	_gpioKeyWaitTimer
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 3224     	MOVR	_gpioKeyWaitTimer,W
     0042 0903                      1- 3225     	BTRSS	STATUS,2
                                    1- 3226     	MGOTO	_02226_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3227     	.line	658, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME; // gSysTick_current;
     0044 2196                      1- 3228     	MOVIA	0x96
     0045 00rr                      1- 3229     	MOVAR	_gpioKeyWaitTimer
                                    1- 3230     	.line	659, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     0046 2102                      1- 3231     	MOVIA	0x02
                                    1- 3232     	BANKSEL	_gpioKeyState
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 3233     	MOVAR	_gpioKeyState
                                    1- 3234     	.line	660, "main.c"; 	P_KEY_IPS_CLR;
     0049 1Crr                      1- 3235     	BCR	_PORTBbits,1
                                    1- 3236     	.line	661, "main.c"; 	P_KEY_IPS_OUTPUT;
     004A 001r                      1- 3237     	IOSTR	_IOSTB
                                    1- 3238     	BANKSEL	r0x101C
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 00rr                      1- 3239     	MOVAR	r0x101C
     004D 1Crr                      1- 3240     	BCR	r0x101C,1
     004E 01rr                      1- 3241     	MOVR	r0x101C,W
     004F 000r                      1- 3242     	IOST	_IOSTB
                                    1- 3243     	.line	662, "main.c"; 	skipGetCapTimer = 10;
     0050 210A                      1- 3244     	MOVIA	0x0a
                                    1- 3245     	BANKSEL	_skipGetCapTimer
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 00rr                      1- 3246     	MOVAR	_skipGetCapTimer
                                    1- 3247     	.line	666, "main.c"; 	break;
                                    1- 3248     	MGOTO	_02226_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
     0054                           1- 3249     _02216_DS_:
                                    1- 3250     	.line	669, "main.c"; 	if (indexKey)               // if(PreKeyIndex != indexKey)
                                    1- 3251     	BANKSEL	_vFlag_1
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 09rr                      1- 3252     	BTRSS	_vFlag_1,2
                                    1- 3253     	MGOTO	_02220_DS_
     0056 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3254     	.line	674, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3255     	BANKSEL	_gpioKeyState
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 02rr                      1- 3256     	CLRR	_gpioKeyState
                                    1- 3257     	.line	676, "main.c"; 	return MSG_MODE; // GpioKeyEvent[PreKeyIndex][1]; //SPR
     0059 2121                      1- 3258     	MOVIA	0x21
                                    1- 3259     	MGOTO	_02227_DS_
     005A 3rrr                      3-   62 m1      LGOTO rom_address
     005B                           1- 3260     _02220_DS_:
                                    1- 3261     	.line	679, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_CP_TIME)
                                    1- 3262     	BANKSEL	_gpioKeyWaitTimer
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 01rr                      1- 3263     	MOVR	_gpioKeyWaitTimer,W
     005D 0903                      1- 3264     	BTRSS	STATUS,2
                                    1- 3265     	MGOTO	_02226_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3266     	.line	687, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     005F 2103                      1- 3267     	MOVIA	0x03
                                    1- 3268     	BANKSEL	_gpioKeyState
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 00rr                      1- 3269     	MOVAR	_gpioKeyState
                                    1- 3270     	.line	702, "main.c"; 	return MSG_POWER_ON; // GpioKeyEvent[PreKeyIndex][2];  //CPS
     0062 2141                      1- 3271     	MOVIA	0x41
                                    1- 3272     	MGOTO	_02227_DS_
     0063 3rrr                      3-   62 m1      LGOTO rom_address
     0064                           1- 3273     _02222_DS_:
                                    1- 3274     	.line	708, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3275     	BANKSEL	_vFlag_1
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 09rr                      1- 3276     	BTRSS	_vFlag_1,2
                                    1- 3277     	MGOTO	_02226_DS_
     0066 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3278     	.line	714, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3279     	BANKSEL	_gpioKeyState
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 02rr                      1- 3280     	CLRR	_gpioKeyState
                                    1- 3281     	.line	728, "main.c"; 	break;
                                    1- 3282     	MGOTO	_02226_DS_
     0069 3rrr                      3-   62 m1      LGOTO rom_address
     006A                           1- 3283     _02225_DS_:
                                    1- 3284     	.line	731, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3285     	BANKSEL	_gpioKeyState
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 02rr                      1- 3286     	CLRR	_gpioKeyState
     006C                           1- 3287     _02226_DS_:
                                    1- 3288     	.line	735, "main.c"; 	return MSG_NONE;
     006C 2100                      1- 3289     	MOVIA	0x00
     006D                           1- 3290     _02227_DS_:
                                    1- 3291     	.line	736, "main.c"; 	}
                                    1- 3292     	RETURN	
     006D 0010                      3-   39 m1      ret
                                    1- 3293     ; exit point of _gpioKeyScan
                                    1- 3295     ;***
                                    1- 3296     ;  pBlock Stats: dbName = C
                                    1- 3297     ;***
                                    1- 3298     ;1 compiler assigned register :
                                    1- 3299     ;   r0x1032
                                    1- 3300     ;; Starting pCode block
                                    1- 3301     .segment "code"; module=main, function=_io_led_scan
                                    1- 3303     ;local variable name mapping:
     0000                           1- 3305     _io_led_scan:
                                    1- 3306     ; 0 exit points
                                    1- 3307     	.line	312, "main.c"; 	P_LED_SEG1_INPUT;
     0000 001r                      1- 3308     	IOSTR	_IOSTB
                                    1- 3309     	BANKSEL	r0x1032
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3310     	MOVAR	r0x1032
     0003 1Arr                      1- 3311     	BSR	r0x1032,5
     0004 01rr                      1- 3312     	MOVR	r0x1032,W
     0005 000r                      1- 3313     	IOST	_IOSTB
                                    1- 3314     	.line	313, "main.c"; 	P_LED_SEG2_INPUT;
     0006 001r                      1- 3315     	IOSTR	_IOSTA
     0007 00rr                      1- 3316     	MOVAR	r0x1032
     0008 18rr                      1- 3317     	BSR	r0x1032,0
     0009 01rr                      1- 3318     	MOVR	r0x1032,W
     000A 000r                      1- 3319     	IOST	_IOSTA
                                    1- 3320     	.line	314, "main.c"; 	P_LED_SEG3_INPUT;
     000B 001r                      1- 3321     	IOSTR	_IOSTA
     000C 00rr                      1- 3322     	MOVAR	r0x1032
     000D 18rr                      1- 3323     	BSR	r0x1032,1
     000E 01rr                      1- 3324     	MOVR	r0x1032,W
     000F 000r                      1- 3325     	IOST	_IOSTA
                                    1- 3326     	.line	315, "main.c"; 	P_LED_SEG4_INPUT;
     0010 001r                      1- 3327     	IOSTR	_IOSTA
     0011 00rr                      1- 3328     	MOVAR	r0x1032
     0012 1Brr                      1- 3329     	BSR	r0x1032,7
     0013 01rr                      1- 3330     	MOVR	r0x1032,W
     0014 000r                      1- 3331     	IOST	_IOSTA
                                    1- 3332     	.line	316, "main.c"; 	P_LED_SEG5_INPUT;
     0015 001r                      1- 3333     	IOSTR	_IOSTA
     0016 00rr                      1- 3334     	MOVAR	r0x1032
     0017 1Brr                      1- 3335     	BSR	r0x1032,6
     0018 01rr                      1- 3336     	MOVR	r0x1032,W
     0019 000r                      1- 3337     	IOST	_IOSTA
                                    1- 3338     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3339     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3340     	.line	318, "main.c"; 	switch (indexScan)
     001A 2112                      1- 3341     	MOVIA	0x12
                                    1- 3342     	BANKSEL	_io_led_scan_indexScan_65536_31
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 04rr                      1- 3343     	SUBAR	_io_led_scan_indexScan_65536_31,W
     001D 0C03                      1- 3344     	BTRSC	STATUS,0
                                    1- 3345     	MGOTO	_02113_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F 21rr                      1- 3346     	MOVIA	((_02198_DS_ >> 8) & 0xff)
     0020 008A                      1- 3347     	MOVAR	PCHBUF
     0021 01rr                      1- 3348     	MOVR	_io_led_scan_indexScan_65536_31,W
     0022 25rr                      1- 3349     	ADDIA	_02198_DS_
     0023 0C03                      1- 3350     	BTRSC	STATUS,0
     0024 058A                      1- 3351     	INCR	PCHBUF,F
     0025 0082                      1- 3352     	MOVAR	PCL
     0026                           1- 3353     _02198_DS_:
                                    1- 3354     	MGOTO	_02058_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3355     	MGOTO	_02061_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3356     	MGOTO	_02064_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3357     	MGOTO	_02067_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3358     	MGOTO	_02070_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3359     	MGOTO	_02073_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3360     	MGOTO	_02076_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3361     	MGOTO	_02079_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3362     	MGOTO	_02082_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3363     	MGOTO	_02085_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3364     	MGOTO	_02088_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3365     	MGOTO	_02091_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3366     	MGOTO	_02094_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3367     	MGOTO	_02097_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3368     	MGOTO	_02100_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3369     	MGOTO	_02103_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3370     	MGOTO	_02106_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3371     	MGOTO	_02109_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 3372     _02058_DS_:
                                    1- 3373     	.line	321, "main.c"; 	if (displayDecade & SEG_A) // 2A
                                    1- 3374     	BANKSEL	_displayDecade
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1- 3375     	BTRSS	_displayDecade,0
                                    1- 3376     	MGOTO	_02113_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3377     	.line	323, "main.c"; 	P_LED_SEG2_SET;
     003B 18rr                      1- 3378     	BSR	_PORTAbits,0
                                    1- 3379     	.line	324, "main.c"; 	P_LED_SEG2_OUTPUT;
     003C 001r                      1- 3380     	IOSTR	_IOSTA
                                    1- 3381     	BANKSEL	r0x1032
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3382     	MOVAR	r0x1032
     003F 1Crr                      1- 3383     	BCR	r0x1032,0
     0040 01rr                      1- 3384     	MOVR	r0x1032,W
     0041 000r                      1- 3385     	IOST	_IOSTA
                                    1- 3386     	.line	325, "main.c"; 	P_LED_SEG3_CLR;
     0042 1Crr                      1- 3387     	BCR	_PORTAbits,1
                                    1- 3388     	.line	326, "main.c"; 	P_LED_SEG3_OUTPUT;
     0043 001r                      1- 3389     	IOSTR	_IOSTA
     0044 00rr                      1- 3390     	MOVAR	r0x1032
     0045 1Crr                      1- 3391     	BCR	r0x1032,1
     0046 01rr                      1- 3392     	MOVR	r0x1032,W
     0047 000r                      1- 3393     	IOST	_IOSTA
                                    1- 3394     	.line	328, "main.c"; 	break;
                                    1- 3395     	MGOTO	_02113_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 3396     _02061_DS_:
                                    1- 3397     	.line	331, "main.c"; 	if (displayDecade & SEG_B) // 2B
                                    1- 3398     	BANKSEL	_displayDecade
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 08rr                      1- 3399     	BTRSS	_displayDecade,1
                                    1- 3400     	MGOTO	_02113_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3401     	.line	333, "main.c"; 	P_LED_SEG3_SET;
     004C 18rr                      1- 3402     	BSR	_PORTAbits,1
                                    1- 3403     	.line	334, "main.c"; 	P_LED_SEG3_OUTPUT;
     004D 001r                      1- 3404     	IOSTR	_IOSTA
                                    1- 3405     	BANKSEL	r0x1032
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 3406     	MOVAR	r0x1032
     0050 1Crr                      1- 3407     	BCR	r0x1032,1
     0051 01rr                      1- 3408     	MOVR	r0x1032,W
     0052 000r                      1- 3409     	IOST	_IOSTA
                                    1- 3410     	.line	335, "main.c"; 	P_LED_SEG2_CLR;
     0053 1Crr                      1- 3411     	BCR	_PORTAbits,0
                                    1- 3412     	.line	336, "main.c"; 	P_LED_SEG2_OUTPUT;
     0054 001r                      1- 3413     	IOSTR	_IOSTA
     0055 00rr                      1- 3414     	MOVAR	r0x1032
     0056 1Crr                      1- 3415     	BCR	r0x1032,0
     0057 01rr                      1- 3416     	MOVR	r0x1032,W
     0058 000r                      1- 3417     	IOST	_IOSTA
                                    1- 3418     	.line	338, "main.c"; 	break;
                                    1- 3419     	MGOTO	_02113_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 3420     _02064_DS_:
                                    1- 3421     	.line	341, "main.c"; 	if (displayDecade & SEG_C) // 2C
                                    1- 3422     	BANKSEL	_displayDecade
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 09rr                      1- 3423     	BTRSS	_displayDecade,2
                                    1- 3424     	MGOTO	_02113_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3425     	.line	343, "main.c"; 	P_LED_SEG4_SET;
     005D 1Brr                      1- 3426     	BSR	_PORTAbits,7
                                    1- 3427     	.line	344, "main.c"; 	P_LED_SEG4_OUTPUT;
     005E 001r                      1- 3428     	IOSTR	_IOSTA
                                    1- 3429     	BANKSEL	r0x1032
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3430     	MOVAR	r0x1032
     0061 1Frr                      1- 3431     	BCR	r0x1032,7
     0062 01rr                      1- 3432     	MOVR	r0x1032,W
     0063 000r                      1- 3433     	IOST	_IOSTA
                                    1- 3434     	.line	345, "main.c"; 	P_LED_SEG3_CLR;
     0064 1Crr                      1- 3435     	BCR	_PORTAbits,1
                                    1- 3436     	.line	346, "main.c"; 	P_LED_SEG3_OUTPUT;
     0065 001r                      1- 3437     	IOSTR	_IOSTA
     0066 00rr                      1- 3438     	MOVAR	r0x1032
     0067 1Crr                      1- 3439     	BCR	r0x1032,1
     0068 01rr                      1- 3440     	MOVR	r0x1032,W
     0069 000r                      1- 3441     	IOST	_IOSTA
                                    1- 3442     	.line	348, "main.c"; 	break;
                                    1- 3443     	MGOTO	_02113_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 3444     _02067_DS_:
                                    1- 3445     	.line	351, "main.c"; 	if (displayDecade & SEG_D) // 2D
                                    1- 3446     	BANKSEL	_displayDecade
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 09rr                      1- 3447     	BTRSS	_displayDecade,3
                                    1- 3448     	MGOTO	_02113_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3449     	.line	353, "main.c"; 	P_LED_SEG4_SET;
     006E 1Brr                      1- 3450     	BSR	_PORTAbits,7
                                    1- 3451     	.line	354, "main.c"; 	P_LED_SEG4_OUTPUT;
     006F 001r                      1- 3452     	IOSTR	_IOSTA
                                    1- 3453     	BANKSEL	r0x1032
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 00rr                      1- 3454     	MOVAR	r0x1032
     0072 1Frr                      1- 3455     	BCR	r0x1032,7
     0073 01rr                      1- 3456     	MOVR	r0x1032,W
     0074 000r                      1- 3457     	IOST	_IOSTA
                                    1- 3458     	.line	355, "main.c"; 	P_LED_SEG2_CLR;
     0075 1Crr                      1- 3459     	BCR	_PORTAbits,0
                                    1- 3460     	.line	356, "main.c"; 	P_LED_SEG2_OUTPUT;
     0076 001r                      1- 3461     	IOSTR	_IOSTA
     0077 00rr                      1- 3462     	MOVAR	r0x1032
     0078 1Crr                      1- 3463     	BCR	r0x1032,0
     0079 01rr                      1- 3464     	MOVR	r0x1032,W
     007A 000r                      1- 3465     	IOST	_IOSTA
                                    1- 3466     	.line	358, "main.c"; 	break;
                                    1- 3467     	MGOTO	_02113_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C                           1- 3468     _02070_DS_:
                                    1- 3469     	.line	361, "main.c"; 	if (displayDecade & SEG_E) // 2E
                                    1- 3470     	BANKSEL	_displayDecade
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 0Arr                      1- 3471     	BTRSS	_displayDecade,4
                                    1- 3472     	MGOTO	_02113_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3473     	.line	363, "main.c"; 	P_LED_SEG5_SET;
     007F 1Brr                      1- 3474     	BSR	_PORTAbits,6
                                    1- 3475     	.line	364, "main.c"; 	P_LED_SEG5_OUTPUT;
     0080 001r                      1- 3476     	IOSTR	_IOSTA
                                    1- 3477     	BANKSEL	r0x1032
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 3478     	MOVAR	r0x1032
     0083 1Frr                      1- 3479     	BCR	r0x1032,6
     0084 01rr                      1- 3480     	MOVR	r0x1032,W
     0085 000r                      1- 3481     	IOST	_IOSTA
                                    1- 3482     	.line	365, "main.c"; 	P_LED_SEG2_CLR;
     0086 1Crr                      1- 3483     	BCR	_PORTAbits,0
                                    1- 3484     	.line	366, "main.c"; 	P_LED_SEG2_OUTPUT;
     0087 001r                      1- 3485     	IOSTR	_IOSTA
     0088 00rr                      1- 3486     	MOVAR	r0x1032
     0089 1Crr                      1- 3487     	BCR	r0x1032,0
     008A 01rr                      1- 3488     	MOVR	r0x1032,W
     008B 000r                      1- 3489     	IOST	_IOSTA
                                    1- 3490     	.line	368, "main.c"; 	break;
                                    1- 3491     	MGOTO	_02113_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1- 3492     _02073_DS_:
                                    1- 3493     	.line	371, "main.c"; 	if (displayDecade & SEG_F) // 2F
                                    1- 3494     	BANKSEL	_displayDecade
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 0Arr                      1- 3495     	BTRSS	_displayDecade,5
                                    1- 3496     	MGOTO	_02113_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3497     	.line	373, "main.c"; 	P_LED_SEG5_SET;
     0090 1Brr                      1- 3498     	BSR	_PORTAbits,6
                                    1- 3499     	.line	374, "main.c"; 	P_LED_SEG5_OUTPUT;
     0091 001r                      1- 3500     	IOSTR	_IOSTA
                                    1- 3501     	BANKSEL	r0x1032
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 3502     	MOVAR	r0x1032
     0094 1Frr                      1- 3503     	BCR	r0x1032,6
     0095 01rr                      1- 3504     	MOVR	r0x1032,W
     0096 000r                      1- 3505     	IOST	_IOSTA
                                    1- 3506     	.line	375, "main.c"; 	P_LED_SEG3_CLR;
     0097 1Crr                      1- 3507     	BCR	_PORTAbits,1
                                    1- 3508     	.line	376, "main.c"; 	P_LED_SEG3_OUTPUT;
     0098 001r                      1- 3509     	IOSTR	_IOSTA
     0099 00rr                      1- 3510     	MOVAR	r0x1032
     009A 1Crr                      1- 3511     	BCR	r0x1032,1
     009B 01rr                      1- 3512     	MOVR	r0x1032,W
     009C 000r                      1- 3513     	IOST	_IOSTA
                                    1- 3514     	.line	378, "main.c"; 	break;
                                    1- 3515     	MGOTO	_02113_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
     009E                           1- 3516     _02076_DS_:
                                    1- 3517     	.line	381, "main.c"; 	if (displayDecade & SEG_G) // 2G
                                    1- 3518     	BANKSEL	_displayDecade
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 0Brr                      1- 3519     	BTRSS	_displayDecade,6
                                    1- 3520     	MGOTO	_02113_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3521     	.line	383, "main.c"; 	P_LED_SEG5_SET;
     00A1 1Brr                      1- 3522     	BSR	_PORTAbits,6
                                    1- 3523     	.line	384, "main.c"; 	P_LED_SEG5_OUTPUT;
     00A2 001r                      1- 3524     	IOSTR	_IOSTA
                                    1- 3525     	BANKSEL	r0x1032
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 00rr                      1- 3526     	MOVAR	r0x1032
     00A5 1Frr                      1- 3527     	BCR	r0x1032,6
     00A6 01rr                      1- 3528     	MOVR	r0x1032,W
     00A7 000r                      1- 3529     	IOST	_IOSTA
                                    1- 3530     	.line	385, "main.c"; 	P_LED_SEG4_CLR;
     00A8 1Frr                      1- 3531     	BCR	_PORTAbits,7
                                    1- 3532     	.line	386, "main.c"; 	P_LED_SEG4_OUTPUT;
     00A9 001r                      1- 3533     	IOSTR	_IOSTA
     00AA 00rr                      1- 3534     	MOVAR	r0x1032
     00AB 1Frr                      1- 3535     	BCR	r0x1032,7
     00AC 01rr                      1- 3536     	MOVR	r0x1032,W
     00AD 000r                      1- 3537     	IOST	_IOSTA
                                    1- 3538     	.line	388, "main.c"; 	break;
                                    1- 3539     	MGOTO	_02113_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 3540     _02079_DS_:
                                    1- 3541     	.line	391, "main.c"; 	if (displayDigit & SEG_A) // 3A
                                    1- 3542     	BANKSEL	_displayDigit
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 08rr                      1- 3543     	BTRSS	_displayDigit,0
                                    1- 3544     	MGOTO	_02113_DS_
     00B1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3545     	.line	393, "main.c"; 	P_LED_SEG1_SET;
     00B2 1Arr                      1- 3546     	BSR	_PORTBbits,5
                                    1- 3547     	.line	394, "main.c"; 	P_LED_SEG1_OUTPUT;
     00B3 001r                      1- 3548     	IOSTR	_IOSTB
                                    1- 3549     	BANKSEL	r0x1032
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3550     	MOVAR	r0x1032
     00B6 1Err                      1- 3551     	BCR	r0x1032,5
     00B7 01rr                      1- 3552     	MOVR	r0x1032,W
     00B8 000r                      1- 3553     	IOST	_IOSTB
                                    1- 3554     	.line	395, "main.c"; 	P_LED_SEG2_CLR;
     00B9 1Crr                      1- 3555     	BCR	_PORTAbits,0
                                    1- 3556     	.line	396, "main.c"; 	P_LED_SEG2_OUTPUT;
     00BA 001r                      1- 3557     	IOSTR	_IOSTA
     00BB 00rr                      1- 3558     	MOVAR	r0x1032
     00BC 1Crr                      1- 3559     	BCR	r0x1032,0
     00BD 01rr                      1- 3560     	MOVR	r0x1032,W
     00BE 000r                      1- 3561     	IOST	_IOSTA
                                    1- 3562     	.line	398, "main.c"; 	break;
                                    1- 3563     	MGOTO	_02113_DS_
     00BF 3rrr                      3-   62 m1      LGOTO rom_address
     00C0                           1- 3564     _02082_DS_:
                                    1- 3565     	.line	401, "main.c"; 	if (displayDigit & SEG_B) // 3B
                                    1- 3566     	BANKSEL	_displayDigit
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 08rr                      1- 3567     	BTRSS	_displayDigit,1
                                    1- 3568     	MGOTO	_02113_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3569     	.line	403, "main.c"; 	P_LED_SEG2_SET;
     00C3 18rr                      1- 3570     	BSR	_PORTAbits,0
                                    1- 3571     	.line	404, "main.c"; 	P_LED_SEG2_OUTPUT;
     00C4 001r                      1- 3572     	IOSTR	_IOSTA
                                    1- 3573     	BANKSEL	r0x1032
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 3574     	MOVAR	r0x1032
     00C7 1Crr                      1- 3575     	BCR	r0x1032,0
     00C8 01rr                      1- 3576     	MOVR	r0x1032,W
     00C9 000r                      1- 3577     	IOST	_IOSTA
                                    1- 3578     	.line	405, "main.c"; 	P_LED_SEG1_CLR;
     00CA 1Err                      1- 3579     	BCR	_PORTBbits,5
                                    1- 3580     	.line	406, "main.c"; 	P_LED_SEG1_OUTPUT;
     00CB 001r                      1- 3581     	IOSTR	_IOSTB
     00CC 00rr                      1- 3582     	MOVAR	r0x1032
     00CD 1Err                      1- 3583     	BCR	r0x1032,5
     00CE 01rr                      1- 3584     	MOVR	r0x1032,W
     00CF 000r                      1- 3585     	IOST	_IOSTB
                                    1- 3586     	.line	408, "main.c"; 	break;
                                    1- 3587     	MGOTO	_02113_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 3588     _02085_DS_:
                                    1- 3589     	.line	411, "main.c"; 	if (displayDigit & SEG_C) // 3C
                                    1- 3590     	BANKSEL	_displayDigit
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 09rr                      1- 3591     	BTRSS	_displayDigit,2
                                    1- 3592     	MGOTO	_02113_DS_
     00D3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3593     	.line	413, "main.c"; 	P_LED_SEG1_SET;
     00D4 1Arr                      1- 3594     	BSR	_PORTBbits,5
                                    1- 3595     	.line	414, "main.c"; 	P_LED_SEG1_OUTPUT;
     00D5 001r                      1- 3596     	IOSTR	_IOSTB
                                    1- 3597     	BANKSEL	r0x1032
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 00rr                      1- 3598     	MOVAR	r0x1032
     00D8 1Err                      1- 3599     	BCR	r0x1032,5
     00D9 01rr                      1- 3600     	MOVR	r0x1032,W
     00DA 000r                      1- 3601     	IOST	_IOSTB
                                    1- 3602     	.line	415, "main.c"; 	P_LED_SEG3_CLR;
     00DB 1Crr                      1- 3603     	BCR	_PORTAbits,1
                                    1- 3604     	.line	416, "main.c"; 	P_LED_SEG3_OUTPUT;
     00DC 001r                      1- 3605     	IOSTR	_IOSTA
     00DD 00rr                      1- 3606     	MOVAR	r0x1032
     00DE 1Crr                      1- 3607     	BCR	r0x1032,1
     00DF 01rr                      1- 3608     	MOVR	r0x1032,W
     00E0 000r                      1- 3609     	IOST	_IOSTA
                                    1- 3610     	.line	418, "main.c"; 	break;
                                    1- 3611     	MGOTO	_02113_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 3612     _02088_DS_:
                                    1- 3613     	.line	421, "main.c"; 	if (displayDigit & SEG_D) // 3D
                                    1- 3614     	BANKSEL	_displayDigit
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 09rr                      1- 3615     	BTRSS	_displayDigit,3
                                    1- 3616     	MGOTO	_02113_DS_
     00E4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3617     	.line	423, "main.c"; 	P_LED_SEG3_SET;
     00E5 18rr                      1- 3618     	BSR	_PORTAbits,1
                                    1- 3619     	.line	424, "main.c"; 	P_LED_SEG3_OUTPUT;
     00E6 001r                      1- 3620     	IOSTR	_IOSTA
                                    1- 3621     	BANKSEL	r0x1032
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 3622     	MOVAR	r0x1032
     00E9 1Crr                      1- 3623     	BCR	r0x1032,1
     00EA 01rr                      1- 3624     	MOVR	r0x1032,W
     00EB 000r                      1- 3625     	IOST	_IOSTA
                                    1- 3626     	.line	425, "main.c"; 	P_LED_SEG1_CLR;
     00EC 1Err                      1- 3627     	BCR	_PORTBbits,5
                                    1- 3628     	.line	426, "main.c"; 	P_LED_SEG1_OUTPUT;
     00ED 001r                      1- 3629     	IOSTR	_IOSTB
     00EE 00rr                      1- 3630     	MOVAR	r0x1032
     00EF 1Err                      1- 3631     	BCR	r0x1032,5
     00F0 01rr                      1- 3632     	MOVR	r0x1032,W
     00F1 000r                      1- 3633     	IOST	_IOSTB
                                    1- 3634     	.line	428, "main.c"; 	break;
                                    1- 3635     	MGOTO	_02113_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
     00F3                           1- 3636     _02091_DS_:
                                    1- 3637     	.line	431, "main.c"; 	if (displayDigit & SEG_E) // 3E
                                    1- 3638     	BANKSEL	_displayDigit
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 0Arr                      1- 3639     	BTRSS	_displayDigit,4
                                    1- 3640     	MGOTO	_02113_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3641     	.line	433, "main.c"; 	P_LED_SEG1_SET;
     00F6 1Arr                      1- 3642     	BSR	_PORTBbits,5
                                    1- 3643     	.line	434, "main.c"; 	P_LED_SEG1_OUTPUT;
     00F7 001r                      1- 3644     	IOSTR	_IOSTB
                                    1- 3645     	BANKSEL	r0x1032
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3646     	MOVAR	r0x1032
     00FA 1Err                      1- 3647     	BCR	r0x1032,5
     00FB 01rr                      1- 3648     	MOVR	r0x1032,W
     00FC 000r                      1- 3649     	IOST	_IOSTB
                                    1- 3650     	.line	435, "main.c"; 	P_LED_SEG4_CLR;
     00FD 1Frr                      1- 3651     	BCR	_PORTAbits,7
                                    1- 3652     	.line	436, "main.c"; 	P_LED_SEG4_OUTPUT;
     00FE 001r                      1- 3653     	IOSTR	_IOSTA
     00FF 00rr                      1- 3654     	MOVAR	r0x1032
     0100 1Frr                      1- 3655     	BCR	r0x1032,7
     0101 01rr                      1- 3656     	MOVR	r0x1032,W
     0102 000r                      1- 3657     	IOST	_IOSTA
                                    1- 3658     	.line	438, "main.c"; 	break;
                                    1- 3659     	MGOTO	_02113_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 3660     _02094_DS_:
                                    1- 3661     	.line	441, "main.c"; 	if (displayDigit & SEG_F) // 3F
                                    1- 3662     	BANKSEL	_displayDigit
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 0Arr                      1- 3663     	BTRSS	_displayDigit,5
                                    1- 3664     	MGOTO	_02113_DS_
     0106 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3665     	.line	443, "main.c"; 	P_LED_SEG4_SET;
     0107 1Brr                      1- 3666     	BSR	_PORTAbits,7
                                    1- 3667     	.line	444, "main.c"; 	P_LED_SEG4_OUTPUT;
     0108 001r                      1- 3668     	IOSTR	_IOSTA
                                    1- 3669     	BANKSEL	r0x1032
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 00rr                      1- 3670     	MOVAR	r0x1032
     010B 1Frr                      1- 3671     	BCR	r0x1032,7
     010C 01rr                      1- 3672     	MOVR	r0x1032,W
     010D 000r                      1- 3673     	IOST	_IOSTA
                                    1- 3674     	.line	445, "main.c"; 	P_LED_SEG1_CLR;
     010E 1Err                      1- 3675     	BCR	_PORTBbits,5
                                    1- 3676     	.line	446, "main.c"; 	P_LED_SEG1_OUTPUT;
     010F 001r                      1- 3677     	IOSTR	_IOSTB
     0110 00rr                      1- 3678     	MOVAR	r0x1032
     0111 1Err                      1- 3679     	BCR	r0x1032,5
     0112 01rr                      1- 3680     	MOVR	r0x1032,W
     0113 000r                      1- 3681     	IOST	_IOSTB
                                    1- 3682     	.line	448, "main.c"; 	break;
                                    1- 3683     	MGOTO	_02113_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
     0115                           1- 3684     _02097_DS_:
                                    1- 3685     	.line	451, "main.c"; 	if (displayDigit & SEG_G) // 3G OK
                                    1- 3686     	BANKSEL	_displayDigit
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 3687     	BTRSS	_displayDigit,6
                                    1- 3688     	MGOTO	_02113_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3689     	.line	453, "main.c"; 	P_LED_SEG5_SET;
     0118 1Brr                      1- 3690     	BSR	_PORTAbits,6
                                    1- 3691     	.line	454, "main.c"; 	P_LED_SEG5_OUTPUT;
     0119 001r                      1- 3692     	IOSTR	_IOSTA
                                    1- 3693     	BANKSEL	r0x1032
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 00rr                      1- 3694     	MOVAR	r0x1032
     011C 1Frr                      1- 3695     	BCR	r0x1032,6
     011D 01rr                      1- 3696     	MOVR	r0x1032,W
     011E 000r                      1- 3697     	IOST	_IOSTA
                                    1- 3698     	.line	455, "main.c"; 	P_LED_SEG1_CLR;
     011F 1Err                      1- 3699     	BCR	_PORTBbits,5
                                    1- 3700     	.line	456, "main.c"; 	P_LED_SEG1_OUTPUT;
     0120 001r                      1- 3701     	IOSTR	_IOSTB
     0121 00rr                      1- 3702     	MOVAR	r0x1032
     0122 1Err                      1- 3703     	BCR	r0x1032,5
     0123 01rr                      1- 3704     	MOVR	r0x1032,W
     0124 000r                      1- 3705     	IOST	_IOSTB
                                    1- 3706     	.line	458, "main.c"; 	break;
                                    1- 3707     	MGOTO	_02113_DS_
     0125 3rrr                      3-   62 m1      LGOTO rom_address
     0126                           1- 3708     _02100_DS_:
                                    1- 3709     	.line	461, "main.c"; 	if (displayHundred & SEG_B) // 1B OK
                                    1- 3710     	BANKSEL	_displayHundred
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 08rr                      1- 3711     	BTRSS	_displayHundred,1
                                    1- 3712     	MGOTO	_02113_DS_
     0128 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3713     	.line	463, "main.c"; 	P_LED_SEG3_SET;
     0129 18rr                      1- 3714     	BSR	_PORTAbits,1
                                    1- 3715     	.line	464, "main.c"; 	P_LED_SEG3_OUTPUT;
     012A 001r                      1- 3716     	IOSTR	_IOSTA
                                    1- 3717     	BANKSEL	r0x1032
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 3718     	MOVAR	r0x1032
     012D 1Crr                      1- 3719     	BCR	r0x1032,1
     012E 01rr                      1- 3720     	MOVR	r0x1032,W
     012F 000r                      1- 3721     	IOST	_IOSTA
                                    1- 3722     	.line	465, "main.c"; 	P_LED_SEG4_CLR;
     0130 1Frr                      1- 3723     	BCR	_PORTAbits,7
                                    1- 3724     	.line	466, "main.c"; 	P_LED_SEG4_OUTPUT;
     0131 001r                      1- 3725     	IOSTR	_IOSTA
     0132 00rr                      1- 3726     	MOVAR	r0x1032
     0133 1Frr                      1- 3727     	BCR	r0x1032,7
     0134 01rr                      1- 3728     	MOVR	r0x1032,W
     0135 000r                      1- 3729     	IOST	_IOSTA
                                    1- 3730     	.line	468, "main.c"; 	break;
                                    1- 3731     	MGOTO	_02113_DS_
     0136 3rrr                      3-   62 m1      LGOTO rom_address
     0137                           1- 3732     _02103_DS_:
                                    1- 3733     	.line	471, "main.c"; 	if (displayHundred & SEG_C) // 1C OK
                                    1- 3734     	BANKSEL	_displayHundred
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 09rr                      1- 3735     	BTRSS	_displayHundred,2
                                    1- 3736     	MGOTO	_02113_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3737     	.line	473, "main.c"; 	P_LED_SEG2_SET;
     013A 18rr                      1- 3738     	BSR	_PORTAbits,0
                                    1- 3739     	.line	474, "main.c"; 	P_LED_SEG2_OUTPUT;
     013B 001r                      1- 3740     	IOSTR	_IOSTA
                                    1- 3741     	BANKSEL	r0x1032
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 00rr                      1- 3742     	MOVAR	r0x1032
     013E 1Crr                      1- 3743     	BCR	r0x1032,0
     013F 01rr                      1- 3744     	MOVR	r0x1032,W
     0140 000r                      1- 3745     	IOST	_IOSTA
                                    1- 3746     	.line	475, "main.c"; 	P_LED_SEG4_CLR;
     0141 1Frr                      1- 3747     	BCR	_PORTAbits,7
                                    1- 3748     	.line	476, "main.c"; 	P_LED_SEG4_OUTPUT;
     0142 001r                      1- 3749     	IOSTR	_IOSTA
     0143 00rr                      1- 3750     	MOVAR	r0x1032
     0144 1Frr                      1- 3751     	BCR	r0x1032,7
     0145 01rr                      1- 3752     	MOVR	r0x1032,W
     0146 000r                      1- 3753     	IOST	_IOSTA
                                    1- 3754     	.line	479, "main.c"; 	break;
                                    1- 3755     	MGOTO	_02113_DS_
     0147 3rrr                      3-   62 m1      LGOTO rom_address
     0148                           1- 3756     _02106_DS_:
                                    1- 3757     	.line	494, "main.c"; 	if (displayHundred & SEG_D) // 1D quick
                                    1- 3758     	BANKSEL	_displayHundred
     0148 rrrr                      3-  109 m1      .banksel ram_address
     0149 09rr                      1- 3759     	BTRSS	_displayHundred,3
                                    1- 3760     	MGOTO	_02113_DS_
     014A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3761     	.line	496, "main.c"; 	P_LED_SEG3_SET;
     014B 18rr                      1- 3762     	BSR	_PORTAbits,1
                                    1- 3763     	.line	497, "main.c"; 	P_LED_SEG3_OUTPUT;
     014C 001r                      1- 3764     	IOSTR	_IOSTA
                                    1- 3765     	BANKSEL	r0x1032
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 00rr                      1- 3766     	MOVAR	r0x1032
     014F 1Crr                      1- 3767     	BCR	r0x1032,1
     0150 01rr                      1- 3768     	MOVR	r0x1032,W
     0151 000r                      1- 3769     	IOST	_IOSTA
                                    1- 3770     	.line	498, "main.c"; 	P_LED_SEG5_CLR;
     0152 1Frr                      1- 3771     	BCR	_PORTAbits,6
                                    1- 3772     	.line	499, "main.c"; 	P_LED_SEG5_OUTPUT;
     0153 001r                      1- 3773     	IOSTR	_IOSTA
     0154 00rr                      1- 3774     	MOVAR	r0x1032
     0155 1Frr                      1- 3775     	BCR	r0x1032,6
     0156 01rr                      1- 3776     	MOVR	r0x1032,W
     0157 000r                      1- 3777     	IOST	_IOSTA
                                    1- 3778     	.line	501, "main.c"; 	break;
                                    1- 3779     	MGOTO	_02113_DS_
     0158 3rrr                      3-   62 m1      LGOTO rom_address
     0159                           1- 3780     _02109_DS_:
                                    1- 3781     	.line	504, "main.c"; 	if (displayHundred & SEG_E) // 1E wireless
                                    1- 3782     	BANKSEL	_displayHundred
     0159 rrrr                      3-  109 m1      .banksel ram_address
     015A 0Arr                      1- 3783     	BTRSS	_displayHundred,4
                                    1- 3784     	MGOTO	_02113_DS_
     015B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3785     	.line	506, "main.c"; 	P_LED_SEG2_SET;
     015C 18rr                      1- 3786     	BSR	_PORTAbits,0
                                    1- 3787     	.line	507, "main.c"; 	P_LED_SEG2_OUTPUT;
     015D 001r                      1- 3788     	IOSTR	_IOSTA
                                    1- 3789     	BANKSEL	r0x1032
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 00rr                      1- 3790     	MOVAR	r0x1032
     0160 1Crr                      1- 3791     	BCR	r0x1032,0
     0161 01rr                      1- 3792     	MOVR	r0x1032,W
     0162 000r                      1- 3793     	IOST	_IOSTA
                                    1- 3794     	.line	508, "main.c"; 	P_LED_SEG5_CLR;
     0163 1Frr                      1- 3795     	BCR	_PORTAbits,6
                                    1- 3796     	.line	509, "main.c"; 	P_LED_SEG5_OUTPUT;
     0164 001r                      1- 3797     	IOSTR	_IOSTA
     0165 00rr                      1- 3798     	MOVAR	r0x1032
     0166 1Frr                      1- 3799     	BCR	r0x1032,6
     0167 01rr                      1- 3800     	MOVR	r0x1032,W
     0168 000r                      1- 3801     	IOST	_IOSTA
     0169                           1- 3802     _02113_DS_:
                                    1- 3803     	.line	516, "main.c"; 	indexScan++; //! 1ms 调用一次
                                    1- 3804     	BANKSEL	_io_led_scan_indexScan_65536_31
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 05rr                      1- 3805     	INCR	_io_led_scan_indexScan_65536_31,F
                                    1- 3806     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3807     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3808     	.line	547, "main.c"; 	if (indexScan > 17) //
     016B 2112                      1- 3809     	MOVIA	0x12
     016C 04rr                      1- 3810     	SUBAR	_io_led_scan_indexScan_65536_31,W
     016D 0C03                      1- 3811     	BTRSC	STATUS,0
                                    1- 3812     	.line	549, "main.c"; 	indexScan = 0;
     016E 02rr                      1- 3813     	CLRR	_io_led_scan_indexScan_65536_31
                                    1- 3814     	.line	551, "main.c"; 	}
                                    1- 3815     	RETURN	
     016F 0010                      3-   39 m1      ret
                                    1- 3817     ;***
                                    1- 3818     ;  pBlock Stats: dbName = C
                                    1- 3819     ;***
                                    1- 3820     ;has an exit
                                    1- 3821     ;1 compiler assigned register :
                                    1- 3822     ;   r0x101B
                                    1- 3823     ;; Starting pCode block
                                    1- 3824     .segment "code"; module=main, function=__dly_us
     0000                           1- 3826     __dly_us:
                                    1- 3827     ; 2 exit points
                                    1- 3828     	.line	300, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3829     	BANKSEL	r0x101B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3830     	MOVAR	r0x101B
     0002                           1- 3831     _02050_DS_:
                                    1- 3832     	.line	302, "main.c"; 	while (cnt)
                                    1- 3833     	BANKSEL	r0x101B
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3834     	MOVR	r0x101B,W
     0004 0D03                      1- 3835     	BTRSC	STATUS,2
                                    1- 3836     	MGOTO	_02053_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3837     	.line	304, "main.c"; 	cnt--;
     0006 06rr                      1- 3838     	DECR	r0x101B,F
                                    1- 3839     	MGOTO	_02050_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3840     _02053_DS_:
                                    1- 3841     	.line	306, "main.c"; 	}
                                    1- 3842     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3843     ; exit point of __dly_us
                                    1- 3845     ;***
                                    1- 3846     ;  pBlock Stats: dbName = C
                                    1- 3847     ;***
                                    1- 3848     ;has an exit
                                    1- 3849     ;; Starting pCode block
                                    1- 3850     .segment "code"; module=main, function=_disable_breathing_mode
     0000                           1- 3852     _disable_breathing_mode:
                                    1- 3853     ; 2 exit points
                                    1- 3854     	.line	292, "main.c"; 	bFlag_is_breathing_mode = 0;
                                    1- 3855     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 1Crr                      1- 3856     	BCR	_vFlag_1,0
                                    1- 3857     	.line	293, "main.c"; 	indicator_light_mode = 0;
                                    1- 3858     	BANKSEL	_indicator_light_mode
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 3859     	CLRR	_indicator_light_mode
                                    1- 3860     	.line	294, "main.c"; 	P_LED_R_CLR;
     0004 1Err                      1- 3861     	BCR	_PORTBbits,4
                                    1- 3862     	.line	295, "main.c"; 	P_LED_G_CLR;
     0005 1Drr                      1- 3863     	BCR	_PORTBbits,3
                                    1- 3864     	.line	296, "main.c"; 	P_LED_B_CLR;
     0006 1Drr                      1- 3865     	BCR	_PORTBbits,2
                                    1- 3866     	.line	297, "main.c"; 	}
                                    1- 3867     	RETURN	
     0007 0010                      3-   39 m1      ret
                                    1- 3868     ; exit point of _disable_breathing_mode
                                    1- 3870     ;***
                                    1- 3871     ;  pBlock Stats: dbName = C
                                    1- 3872     ;***
                                    1- 3873     ;has an exit
                                    1- 3874     ;; Starting pCode block
                                    1- 3875     .segment "code"; module=main, function=_enable_breathing_mode
     0000                           1- 3877     _enable_breathing_mode:
                                    1- 3878     ; 2 exit points
                                    1- 3879     	.line	285, "main.c"; 	bFlag_is_breathing_mode = 1;
                                    1- 3880     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 18rr                      1- 3881     	BSR	_vFlag_1,0
                                    1- 3882     	.line	286, "main.c"; 	bFlag_inc_or_dec = 0;
     0002 1Crr                      1- 3883     	BCR	_vFlag_1,1
                                    1- 3884     	.line	287, "main.c"; 	indicator_light_mode = 0;
                                    1- 3885     	BANKSEL	_indicator_light_mode
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 3886     	CLRR	_indicator_light_mode
                                    1- 3887     	.line	288, "main.c"; 	}
                                    1- 3888     	RETURN	
     0005 0010                      3-   39 m1      ret
                                    1- 3889     ; exit point of _enable_breathing_mode
                                    1- 3892     ;	code size estimation:
                                    1- 3893     ;	 1620+  397 =  2017 instructions ( 4828 byte)
                                    1- 3895     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
