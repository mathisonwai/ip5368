
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_PWM5RH
                                    1-   27     	extern	_PWM5DUTY
                                    1-   28     	extern	_P5CR1
                                    1-   29     	extern	_PWM4DUTY
                                    1-   30     	extern	_P4CR1
                                    1-   31     	extern	_PS3CV
                                    1-   32     	extern	_PWM3DUTY
                                    1-   33     	extern	_T3CR2
                                    1-   34     	extern	_T3CR1
                                    1-   35     	extern	_TMR3
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_PWM2DUTY
                                    1-   38     	extern	_P2CR1
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_STATUS
                                    1-   52     	extern	_PCL
                                    1-   53     	extern	_TMR0
                                    1-   54     	extern	_INTE2bits
                                    1-   55     	extern	_RFCbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_INTEbits
                                    1-   60     	extern	_BPHCONbits
                                    1-   61     	extern	_ABPLCONbits
                                    1-   62     	extern	_BWUCONbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_PORTBbits
                                    1-   65     	extern	_PORTAbits
                                    1-   66     	extern	__gptrget1
                                    1-   67     	extern	__nyc_ny8_startup
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     ; global declarations
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     	extern	_main
                                    1-   72     	extern	_app_display_all
                                    1-   73     	extern	_get_cap
                                    1-   74     	extern	_is_chg_or_dischg
                                    1-   75     	extern	_get_p_ext_int_status
                                    1-   76     	extern	_init_ip53xs
                                    1-   77     	extern	_ip55xs_read4Bytes
                                    1-   78     	extern	_ip55xs_write4Bytes
                                    1-   79     	extern	_ip53xs_readByte
                                    1-   80     	extern	_ip53xs_writeByte
                                    1-   81     	extern	_i2c_readByte
                                    1-   82     	extern	_i2c_writeByte
                                    1-   83     	extern	_i2c_send_nack
                                    1-   84     	extern	_i2c_send_ack
                                    1-   85     	extern	_i2c_chk_ack
                                    1-   86     	extern	_i2c_stop
                                    1-   87     	extern	_i2c_start
                                    1-   88     	extern	_gpioKeyScan
                                    1-   89     	extern	__dly_us
                                    1-   90     	extern	_disable_breathing_mode
                                    1-   91     	extern	_enable_breathing_mode
                                    1-   92     	extern	_isr
                                    1-   93     	extern	_RESPIRATION_LAMP_TABLE
                                    1-   94     	extern	_DispTable
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_RFC
                                    1-   97     	extern	_INTEDG
                                    1-   98     	extern	_AWUCON
                                    1-   99     	extern	_INTF
                                    1-  100     	extern	_INTE
                                    1-  101     	extern	_BPHCON
                                    1-  102     	extern	_ABPLCON
                                    1-  103     	extern	_BWUCON
                                    1-  104     	extern	_PCON
                                    1-  105     	extern	_PORTB
                                    1-  106     	extern	_PORTA
                                    1-  107     	extern	_gSysTick
                                    1-  108     	extern	_timer_slice_10ms
                                    1-  109     	extern	_displayDigit
                                    1-  110     	extern	_displayDecade
                                    1-  111     	extern	_displayHundred
                                    1-  112     	extern	_displayData
                                    1-  113     	extern	_forceDispTimer
                                    1-  114     	extern	_IP_DATA
                                    1-  115     	extern	_respiration_lamp_timer
                                    1-  116     	extern	_gpioKeyState
                                    1-  117     	extern	_gpioKeyWaitTimer
                                    1-  118     	extern	_timer_slice_16ms
                                    1-  119     	extern	_bat_level_buf
                                    1-  120     	extern	_delaySleepTimer
                                    1-  121     	extern	_displayTimer
                                    1-  122     	extern	_underVoltageDispTimer
                                    1-  123     	extern	_indicator_light_mode
                                    1-  124     	extern	_always_light_timer_shadow
                                    1-  125     	extern	_always_light_timer
                                    1-  126     	extern	_moto_work_mode
                                    1-  127     	extern	_vFlag_1
                                    1-  128     	extern	_vFlag_0
                                    1-  129     	extern	_io_led_scan
                                    1-  131     	extern PSAVE
                                    1-  132     	extern SSAVE
                                    1-  133     	extern WSAVE
                                    1-  134     	extern STK12
                                    1-  135     	extern STK11
                                    1-  136     	extern STK10
                                    1-  137     	extern STK09
                                    1-  138     	extern STK08
                                    1-  139     	extern STK07
                                    1-  140     	extern STK06
                                    1-  141     	extern STK05
                                    1-  142     	extern STK04
                                    1-  143     	extern STK03
                                    1-  144     	extern STK02
                                    1-  145     	extern STK01
                                    1-  146     	extern STK00
                                    1-  148     .segment "share_bank"
     0000                           1-  149     PSAVE:
                                    1-  150     	.res 1
                                    1-  151     .segment "share_bank"
     0000                           1-  152     SSAVE:
                                    1-  153     	.res 1
                                    1-  154     .segment "share_bank"
     0000                           1-  155     WSAVE:
                                    1-  156     	.res 1
                                    1-  157     .segment "share_bank"
     0000                           1-  158     STK12:
                                    1-  159     	.res 1
                                    1-  160     .segment "share_bank"
     0000                           1-  161     STK11:
                                    1-  162     	.res 1
                                    1-  163     .segment "share_bank"
     0000                           1-  164     STK10:
                                    1-  165     	.res 1
                                    1-  166     .segment "share_bank"
     0000                           1-  167     STK09:
                                    1-  168     	.res 1
                                    1-  169     .segment "share_bank"
     0000                           1-  170     STK08:
                                    1-  171     	.res 1
                                    1-  172     .segment "share_bank"
     0000                           1-  173     STK07:
                                    1-  174     	.res 1
                                    1-  175     .segment "share_bank"
     0000                           1-  176     STK06:
                                    1-  177     	.res 1
                                    1-  178     .segment "share_bank"
     0000                           1-  179     STK05:
                                    1-  180     	.res 1
                                    1-  181     .segment "share_bank"
     0000                           1-  182     STK04:
                                    1-  183     	.res 1
                                    1-  184     .segment "share_bank"
     0000                           1-  185     STK03:
                                    1-  186     	.res 1
                                    1-  187     .segment "share_bank"
     0000                           1-  188     STK02:
                                    1-  189     	.res 1
                                    1-  190     .segment "share_bank"
     0000                           1-  191     STK01:
                                    1-  192     	.res 1
                                    1-  193     .segment "share_bank"
     0000                           1-  194     STK00:
                                    1-  195     	.res 1
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; global definitions
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     .segment "uninit"
     0000                           1-  201     _vFlag_0:
                                    1-  202     	.res 1
                                    1-  205     .segment "uninit"
     0000                           1-  206     _vFlag_1:
                                    1-  207     	.res 1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _moto_work_mode:
                                    1-  212     	.res 1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _always_light_timer:
                                    1-  217     	.res 1
                                    1-  220     .segment "uninit"
     0000                           1-  221     _always_light_timer_shadow:
                                    1-  222     	.res 1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _indicator_light_mode:
                                    1-  227     	.res 1
                                    1-  230     .segment "uninit"
     0000                           1-  231     _underVoltageDispTimer:
                                    1-  232     	.res 1
                                    1-  235     .segment "uninit"
     0000                           1-  236     _displayTimer:
                                    1-  237     	.res 1
                                    1-  240     .segment "uninit"
     0000                           1-  241     _delaySleepTimer:
                                    1-  242     	.res 1
                                    1-  245     .segment "uninit"
     0000                           1-  246     _bat_level_buf:
                                    1-  247     	.res 1
                                    1-  250     .segment "uninit"
     0000                           1-  251     _timer_slice_16ms:
                                    1-  252     	.res 1
                                    1-  255     .segment "uninit"
     0000                           1-  256     _gpioKeyWaitTimer:
                                    1-  257     	.res 1
                                    1-  260     .segment "uninit"
     0000                           1-  261     _gpioKeyState:
                                    1-  262     	.res 1
                                    1-  265     .segment "uninit"
     0000                           1-  266     _respiration_lamp_timer:
                                    1-  267     	.res 1
                                    1-  270     .segment "uninit"
     0000                           1-  271     _IP_DATA:
                                    1-  272     	.res 4
                                    1-  275     .segment "uninit"
     0000                           1-  276     _forceDispTimer:
                                    1-  277     	.res 1
                                    1-  280     .segment "uninit"
     0000                           1-  281     _displayData:
                                    1-  282     	.res 1
                                    1-  285     .segment "uninit"
     0000                           1-  286     _displayHundred:
                                    1-  287     	.res 1
                                    1-  290     .segment "uninit"
     0000                           1-  291     _displayDecade:
                                    1-  292     	.res 1
                                    1-  295     .segment "uninit"
     0000                           1-  296     _displayDigit:
                                    1-  297     	.res 1
                                    1-  300     .segment "uninit"
     0000                           1-  301     _timer_slice_10ms:
                                    1-  302     	.res 1
                                    1-  305     .segment "uninit"
     0000                           1-  306     _gSysTick:
                                    1-  307     	.res 1
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; absolute symbol definitions
                                    1-  312     ;--------------------------------------------------------
                                    1-  313     ;--------------------------------------------------------
                                    1-  314     ; compiler-defined variables
                                    1-  315     ;--------------------------------------------------------
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1032:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1033:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x101A:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1031:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x101B:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x101C:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x101D:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x101E:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x101F:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x1020:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1021:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1022:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1024:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1023:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1027:
                                    1-  360     	.res	1
                                    1-  361     .segment "uninit"
     0000                           1-  362     r0x1026:
                                    1-  363     	.res	1
                                    1-  364     .segment "uninit"
     0000                           1-  365     r0x1025:
                                    1-  366     	.res	1
                                    1-  367     .segment "uninit"
     0000                           1-  368     r0x102E:
                                    1-  369     	.res	1
                                    1-  370     .segment "uninit"
     0000                           1-  371     r0x102A:
                                    1-  372     	.res	1
                                    1-  373     .segment "uninit"
     0000                           1-  374     r0x1028:
                                    1-  375     	.res	1
                                    1-  376     .segment "uninit"
     0000                           1-  377     r0x102D:
                                    1-  378     	.res	1
                                    1-  379     .segment "uninit"
     0000                           1-  380     _isr_timerCnt_65536_5:
                                    1-  381     	.res	1
                                    1-  383     .segment "uninit"
     0000                           1-  384     _isr_respiration_lamp_series_65536_5:
                                    1-  385     	.res	1
                                    1-  387     .segment "uninit"
     0000                           1-  388     _isr_led_lamp_65536_5:
                                    1-  389     	.res	1
                                    1-  391     .segment "uninit"
     0000                           1-  392     ___sdcc_saved_fsr:
                                    1-  393     	.res	1
                                    1-  395     .segment "uninit"
     0000                           1-  396     ___sdcc_saved_stk00:
                                    1-  397     	.res	1
                                    1-  399     .segment "uninit"
     0000                           1-  400     ___sdcc_saved_stk01:
                                    1-  401     	.res	1
                                    1-  403     .segment "uninit"
     0000                           1-  404     _get_p_ext_int_status_counter_65536_116:
                                    1-  405     	.res	1
                                    1-  407     .segment "uninit"
     0000                           1-  408     _is_chg_or_dischg_counter_65536_126:
                                    1-  409     	.res	1
                                    1-  411     ;--------------------------------------------------------
                                    1-  412     ; initialized data
                                    1-  413     ;--------------------------------------------------------
                                    1-  415     .segment "idata"
     0000                           1-  416     _io_led_scan_indexScan_65536_31:
     0000 0000                      1-  419     	dw	0x00	; 0
                                    1-  422     .segment "code"
     0000                           1-  423     _DispTable:
     0000 203F                      1-  424     	retia 0x3f	; 63
     0001 2006                      1-  425     	retia 0x06	; 6
     0002 205B                      1-  426     	retia 0x5b	; 91
     0003 204F                      1-  427     	retia 0x4f	; 79	'O'
     0004 2066                      1-  428     	retia 0x66	; 102	'f'
     0005 206D                      1-  429     	retia 0x6d	; 109	'm'
     0006 207D                      1-  430     	retia 0x7d	; 125
     0007 2007                      1-  431     	retia 0x07	; 7
     0008 207F                      1-  432     	retia 0x7f	; 127
     0009 206F                      1-  433     	retia 0x6f	; 111	'o'
     000A 2079                      1-  434     	retia 0x79	; 121	'y'
     000B 2050                      1-  435     	retia 0x50	; 80	'P'
     000C 2076                      1-  436     	retia 0x76	; 118	'v'
     000D 2000                      1-  437     	retia 0x00	; 0
                                    1-  439     .segment "code"
     0000                           1-  440     _RESPIRATION_LAMP_TABLE:
     0000 2001                      1-  441     	retia 0x01	; 1
     0001 2001                      1-  442     	retia 0x01	; 1
     0002 2001                      1-  443     	retia 0x01	; 1
     0003 2001                      1-  444     	retia 0x01	; 1
     0004 2001                      1-  445     	retia 0x01	; 1
     0005 2002                      1-  446     	retia 0x02	; 2
     0006 2002                      1-  447     	retia 0x02	; 2
     0007 2002                      1-  448     	retia 0x02	; 2
     0008 2002                      1-  449     	retia 0x02	; 2
     0009 2002                      1-  450     	retia 0x02	; 2
     000A 2002                      1-  451     	retia 0x02	; 2
     000B 2002                      1-  452     	retia 0x02	; 2
     000C 2002                      1-  453     	retia 0x02	; 2
     000D 2003                      1-  454     	retia 0x03	; 3
     000E 2003                      1-  455     	retia 0x03	; 3
     000F 2003                      1-  456     	retia 0x03	; 3
     0010 2003                      1-  457     	retia 0x03	; 3
     0011 2003                      1-  458     	retia 0x03	; 3
     0012 2004                      1-  459     	retia 0x04	; 4
     0013 2004                      1-  460     	retia 0x04	; 4
     0014 2004                      1-  461     	retia 0x04	; 4
     0015 2005                      1-  462     	retia 0x05	; 5
     0016 2005                      1-  463     	retia 0x05	; 5
     0017 2005                      1-  464     	retia 0x05	; 5
     0018 2006                      1-  465     	retia 0x06	; 6
     0019 2006                      1-  466     	retia 0x06	; 6
     001A 2006                      1-  467     	retia 0x06	; 6
     001B 2007                      1-  468     	retia 0x07	; 7
     001C 2007                      1-  469     	retia 0x07	; 7
     001D 2008                      1-  470     	retia 0x08	; 8
     001E 2009                      1-  471     	retia 0x09	; 9
     001F 2009                      1-  472     	retia 0x09	; 9
     0020 200A                      1-  473     	retia 0x0a	; 10
     0021 200B                      1-  474     	retia 0x0b	; 11
     0022 200B                      1-  475     	retia 0x0b	; 11
     0023 200C                      1-  476     	retia 0x0c	; 12
     0024 200D                      1-  477     	retia 0x0d	; 13
     0025 200E                      1-  478     	retia 0x0e	; 14
     0026 200F                      1-  479     	retia 0x0f	; 15
     0027 2010                      1-  480     	retia 0x10	; 16
     0028 2011                      1-  481     	retia 0x11	; 17
     0029 2012                      1-  482     	retia 0x12	; 18
     002A 2014                      1-  483     	retia 0x14	; 20
     002B 2015                      1-  484     	retia 0x15	; 21
     002C 2017                      1-  485     	retia 0x17	; 23
     002D 2018                      1-  486     	retia 0x18	; 24
     002E 201A                      1-  487     	retia 0x1a	; 26
     002F 201C                      1-  488     	retia 0x1c	; 28
     0030 201E                      1-  489     	retia 0x1e	; 30
     0031 2020                      1-  490     	retia 0x20	; 32
     0032 2022                      1-  491     	retia 0x22	; 34
     0033 2025                      1-  492     	retia 0x25	; 37
     0034 2027                      1-  493     	retia 0x27	; 39
     0035 202A                      1-  494     	retia 0x2a	; 42
     0036 202D                      1-  495     	retia 0x2d	; 45
     0037 2030                      1-  496     	retia 0x30	; 48	'0'
     0038 2034                      1-  497     	retia 0x34	; 52	'4'
     0039 2038                      1-  498     	retia 0x38	; 56	'8'
     003A 203C                      1-  499     	retia 0x3c	; 60
     003B 2040                      1-  500     	retia 0x40	; 64
     003C 2044                      1-  501     	retia 0x44	; 68	'D'
     003D 2049                      1-  502     	retia 0x49	; 73	'I'
     003E 204F                      1-  503     	retia 0x4f	; 79	'O'
     003F 2054                      1-  504     	retia 0x54	; 84	'T'
     0040 205A                      1-  505     	retia 0x5a	; 90	'Z'
     0041 2061                      1-  506     	retia 0x61	; 97	'a'
     0042 2068                      1-  507     	retia 0x68	; 104	'h'
     0043 206F                      1-  508     	retia 0x6f	; 111	'o'
     0044 2077                      1-  509     	retia 0x77	; 119	'w'
     0045 2080                      1-  510     	retia 0x80	; 128
     0046 2089                      1-  511     	retia 0x89	; 137
     0047 2093                      1-  512     	retia 0x93	; 147
     0048 209D                      1-  513     	retia 0x9d	; 157
     0049 20A8                      1-  514     	retia 0xa8	; 168
     004A 20B4                      1-  515     	retia 0xb4	; 180
     004B 20C1                      1-  516     	retia 0xc1	; 193
     004C 20CF                      1-  517     	retia 0xcf	; 207
     004D 20DE                      1-  518     	retia 0xde	; 222
     004E 20EE                      1-  519     	retia 0xee	; 238
     004F 20FF                      1-  520     	retia 0xff	; 255
     0050 20FF                      1-  521     	retia 0xff	; 255
                                    1-  522     ;--------------------------------------------------------
                                    1-  523     ; initialized absolute data
                                    1-  524     ;--------------------------------------------------------
                                    1-  525     ;--------------------------------------------------------
                                    1-  526     ; overlayable items in internal ram 
                                    1-  527     ;--------------------------------------------------------
                                    1-  528     ;	udata_ovr
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ; reset vector 
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ORG	0x0000
     0000 3rrr                      1-  533     	LGOTO	__nyc_ny8_startup
                                    1-  534     ;--------------------------------------------------------
                                    1-  535     ; interrupt and initialization code
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ORG 0x0008
                                    1-  538     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  540     .segment "code"
     0000                           1-  541     __sdcc_interrupt:
                                    1-  542     ;***
                                    1-  543     ;  pBlock Stats: dbName = I
                                    1-  544     ;***
                                    1-  545     ;functions called:
                                    1-  546     ;   _io_led_scan
                                    1-  547     ;   __gptrget1
                                    1-  548     ;   _io_led_scan
                                    1-  549     ;   __gptrget1
                                    1-  550     ;4 compiler assigned registers:
                                    1-  551     ;   STK00
                                    1-  552     ;   STK01
                                    1-  553     ;   r0x1032
                                    1-  554     ;   r0x1033
                                    1-  555     ;; Starting pCode block
     0000                           1-  556     _isr:
                                    1-  557     ; 0 exit points
                                    1-  558     	.line	189, "main.c"; 	void isr(void) __interrupt(0) // 64us  8MHz 2T
     0000 00rr                      1-  559     	MOVAR	WSAVE
     0001 1503                      1-  560     	SWAPR	STATUS,W
     0002 0283                      1-  561     	CLRR	STATUS
     0003 00rr                      1-  562     	MOVAR	SSAVE
     0004 010A                      1-  563     	MOVR	PCHBUF,W
     0005 028A                      1-  564     	CLRR	PCHBUF
     0006 00rr                      1-  565     	MOVAR	PSAVE
     0007 0104                      1-  566     	MOVR	FSR,W
                                    1-  567     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  568     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  569     	MOVR	STK00,W
                                    1-  570     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  571     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  572     	MOVR	STK01,W
                                    1-  573     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  574     	MOVAR	___sdcc_saved_stk01
                                    1-  575     	.line	195, "main.c"; 	if (TM0IF)
     0010 08rr                      1-  576     	BTRSS	_INTFbits,0
                                    1-  577     	MGOTO	_02034_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  578     	.line	197, "main.c"; 	TM0IF = 0;
     0012 21FE                      1-  579     	MOVIA	0xfe
     0013 00rr                      1-  580     	MOVAR	(_INTFbits + 0)
                                    1-  581     	.line	202, "main.c"; 	timerCnt++;
                                    1-  582     	BANKSEL	_isr_timerCnt_65536_5
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1-  583     	INCR	_isr_timerCnt_65536_5,F
                                    1-  584     	.line	204, "main.c"; 	if (!(timerCnt & 0x0F))
     0016 01rr                      1-  585     	MOVR	_isr_timerCnt_65536_5,W
     0017 220F                      1-  586     	ANDIA	0x0f
     0018 0903                      1-  587     	BTRSS	STATUS,2
                                    1-  588     	MGOTO	_00015_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  589     	.line	208, "main.c"; 	bFlag_gSysTick_Change = 1; // 1ms
                                    1-  590     	BANKSEL	_vFlag_0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 18rr                      1-  591     	BSR	_vFlag_0,0
                                    1-  592     	.line	210, "main.c"; 	if (!(timerCnt))
                                    1-  593     	BANKSEL	_isr_timerCnt_65536_5
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1-  594     	MOVR	_isr_timerCnt_65536_5,W
     001E 0903                      1-  595     	BTRSS	STATUS,2
                                    1-  596     	MGOTO	_00015_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  597     	.line	213, "main.c"; 	bFlag_slice_16ms = 1;
                                    1-  598     	BANKSEL	_vFlag_0
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 18rr                      1-  599     	BSR	_vFlag_0,1
     0022                           1-  600     _00015_DS_:
                                    1-  601     	.line	217, "main.c"; 	if (!(timerCnt & 0x07))
                                    1-  602     	BANKSEL	_isr_timerCnt_65536_5
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1-  603     	MOVR	_isr_timerCnt_65536_5,W
     0024 2207                      1-  604     	ANDIA	0x07
     0025 0D03                      1-  605     	BTRSC	STATUS,2
                                    1-  606     	.line	219, "main.c"; 	io_led_scan();
                                    1-  607     	MCALL	_io_led_scan
     0026 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  608     	.line	222, "main.c"; 	if (bFlag_is_breathing_mode) // 100us
                                    1-  609     	BANKSEL	_vFlag_1
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 08rr                      1-  610     	BTRSS	_vFlag_1,0
                                    1-  611     	MGOTO	_02034_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  612     	.line	224, "main.c"; 	respiration_lamp_timer++;
                                    1-  613     	BANKSEL	_respiration_lamp_timer
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1-  614     	MOVR	_respiration_lamp_timer,W
                                    1-  615     	BANKSEL	r0x1032
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 00rr                      1-  616     	MOVAR	r0x1032
     002E 05rr                      1-  617     	INCR	r0x1032,W
                                    1-  618     	BANKSEL	_respiration_lamp_timer
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1-  619     	MOVAR	_respiration_lamp_timer
                                    1-  620     	.line	226, "main.c"; 	if (!(respiration_lamp_timer))
     0031 01rr                      1-  621     	MOVR	_respiration_lamp_timer,W
     0032 0903                      1-  622     	BTRSS	STATUS,2
                                    1-  623     	MGOTO	_02021_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  624     	.line	228, "main.c"; 	if (bFlag_inc_or_dec)
                                    1-  625     	BANKSEL	_vFlag_1
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 08rr                      1-  626     	BTRSS	_vFlag_1,1
                                    1-  627     	MGOTO	_02018_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  628     	.line	230, "main.c"; 	if (!(--respiration_lamp_series))
                                    1-  629     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 17rr                      1-  630     	DECRSZ	_isr_respiration_lamp_series_65536_5,F
                                    1-  631     	MGOTO	_02019_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  632     	.line	232, "main.c"; 	bFlag_inc_or_dec = 0;
                                    1-  633     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 1Crr                      1-  634     	BCR	_vFlag_1,1
                                    1-  635     	.line	234, "main.c"; 	if (++indicator_light_mode > 2)
                                    1-  636     	BANKSEL	_indicator_light_mode
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 05rr                      1-  637     	INCR	_indicator_light_mode,W
                                    1-  638     	BANKSEL	r0x1032
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  639     	MOVAR	r0x1032
                                    1-  640     	BANKSEL	_indicator_light_mode
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1-  641     	MOVAR	_indicator_light_mode
                                    1-  642     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  643     ;;unsigned compare: left >= lit(0x3=3), size=1
     0042 2103                      1-  644     	MOVIA	0x03
                                    1-  645     	BANKSEL	r0x1032
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 04rr                      1-  646     	SUBAR	r0x1032,W
     0045 0803                      1-  647     	BTRSS	STATUS,0
                                    1-  648     	MGOTO	_02019_DS_
     0046 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  649     	.line	236, "main.c"; 	indicator_light_mode = 0;
                                    1-  650     	BANKSEL	_indicator_light_mode
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 02rr                      1-  651     	CLRR	_indicator_light_mode
                                    1-  652     	MGOTO	_02019_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
     004A                           1-  653     _02018_DS_:
                                    1-  654     	.line	242, "main.c"; 	if (++respiration_lamp_series >= CONST_RESPIRATION_LAMP_SERIES)
                                    1-  655     	BANKSEL	_isr_respiration_lamp_series_65536_5
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 05rr                      1-  656     	INCR	_isr_respiration_lamp_series_65536_5,F
                                    1-  657     ;;unsigned compare: left < lit(0x50=80), size=1
     004C 2150                      1-  658     	MOVIA	0x50
     004D 04rr                      1-  659     	SUBAR	_isr_respiration_lamp_series_65536_5,W
     004E 0803                      1-  660     	BTRSS	STATUS,0
                                    1-  661     	MGOTO	_02019_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  662     	.line	244, "main.c"; 	respiration_lamp_series = CONST_RESPIRATION_LAMP_SERIES;
     0050 2150                      1-  663     	MOVIA	0x50
     0051 00rr                      1-  664     	MOVAR	_isr_respiration_lamp_series_65536_5
                                    1-  665     	.line	245, "main.c"; 	bFlag_inc_or_dec = 1;
                                    1-  666     	BANKSEL	_vFlag_1
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 18rr                      1-  667     	BSR	_vFlag_1,1
     0054                           1-  668     _02019_DS_:
                                    1-  669     	.line	249, "main.c"; 	led_lamp = RESPIRATION_LAMP_TABLE[respiration_lamp_series];
                                    1-  670     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 01rr                      1-  671     	MOVR	_isr_respiration_lamp_series_65536_5,W
     0056 25rr                      1-  672     	ADDIA	(_RESPIRATION_LAMP_TABLE + 0)
                                    1-  673     	BANKSEL	r0x1032
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1-  674     	MOVAR	r0x1032
     0059 21rr                      1-  675     	MOVIA	((_RESPIRATION_LAMP_TABLE + 0) >> 8) & 0xff
     005A 2600                      1-  676     	ADCIA	0x00
                                    1-  677     	BANKSEL	r0x1033
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1-  678     	MOVAR	r0x1033
                                    1-  679     	BANKSEL	r0x1032
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1-  680     	MOVR	r0x1032,W
     005F 00rr                      1-  681     	MOVAR	STK01
                                    1-  682     	BANKSEL	r0x1033
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1-  683     	MOVR	r0x1033,W
     0062 00rr                      1-  684     	MOVAR	STK00
     0063 2180                      1-  685     	MOVIA	0x80
                                    1-  686     	MCALL	__gptrget1
     0064 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  687     	BANKSEL	_isr_led_lamp_65536_5
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 00rr                      1-  688     	MOVAR	_isr_led_lamp_65536_5
     0067                           1-  689     _02021_DS_:
                                    1-  690     	.line	252, "main.c"; 	if (respiration_lamp_timer >= led_lamp)
                                    1-  691     	BANKSEL	_isr_led_lamp_65536_5
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 01rr                      1-  692     	MOVR	_isr_led_lamp_65536_5,W
                                    1-  693     	BANKSEL	_respiration_lamp_timer
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 04rr                      1-  694     	SUBAR	_respiration_lamp_timer,W
     006B 0803                      1-  695     	BTRSS	STATUS,0
                                    1-  696     	MGOTO	_02029_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  697     	.line	254, "main.c"; 	P_LED_R_OFF;
     006D 1Err                      1-  698     	BCR	_PORTBbits,4
                                    1-  699     	.line	255, "main.c"; 	P_LED_G_OFF;
     006E 1Drr                      1-  700     	BCR	_PORTBbits,3
                                    1-  701     	.line	256, "main.c"; 	P_LED_B_OFF; // white led
     006F 1Drr                      1-  702     	BCR	_PORTBbits,2
                                    1-  703     	MGOTO	_02034_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
     0071                           1-  704     _02029_DS_:
                                    1-  705     	.line	260, "main.c"; 	if (0x01 == indicator_light_mode)
                                    1-  706     	BANKSEL	_indicator_light_mode
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 01rr                      1-  707     	MOVR	_indicator_light_mode,W
     0073 2401                      1-  708     	XORIA	0x01
     0074 0903                      1-  709     	BTRSS	STATUS,2
                                    1-  710     	MGOTO	_02026_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  711     	.line	262, "main.c"; 	P_LED_B_ON; // white
     0076 19rr                      1-  712     	BSR	_PORTBbits,2
                                    1-  713     	MGOTO	_02034_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1-  714     _02026_DS_:
                                    1-  715     	.line	264, "main.c"; 	else if (0x02 == indicator_light_mode)
                                    1-  716     	BANKSEL	_indicator_light_mode
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 01rr                      1-  717     	MOVR	_indicator_light_mode,W
     007A 2402                      1-  718     	XORIA	0x02
     007B 0903                      1-  719     	BTRSS	STATUS,2
                                    1-  720     	MGOTO	_02023_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  721     	.line	266, "main.c"; 	P_LED_G_ON; // green
     007D 19rr                      1-  722     	BSR	_PORTBbits,3
                                    1-  723     	MGOTO	_02034_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
     007F                           1-  724     _02023_DS_:
                                    1-  725     	.line	270, "main.c"; 	P_LED_R_ON; // orange
     007F 1Arr                      1-  726     	BSR	_PORTBbits,4
     0080                           1-  727     _02034_DS_:
                                    1-  728     	.line	276, "main.c"; 	if (INTFbits.PABIF)
     0080 08rr                      1-  729     	BTRSS	_INTFbits,1
                                    1-  730     	MGOTO	_02037_DS_
     0081 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  731     	.line	278, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     0082 21FD                      1-  732     	MOVIA	0xfd
     0083 00rr                      1-  733     	MOVAR	(_INTFbits + 0)
     0084                           1-  734     _02037_DS_:
                                    1-  735     	.line	280, "main.c"; 	}
                                    1-  736     	BANKSEL	___sdcc_saved_stk01
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1-  737     	MOVR	___sdcc_saved_stk01,W
     0086 00rr                      1-  738     	MOVAR	STK01
                                    1-  739     	BANKSEL	___sdcc_saved_stk00
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1-  740     	MOVR	___sdcc_saved_stk00,W
     0089 00rr                      1-  741     	MOVAR	STK00
                                    1-  742     	BANKSEL	___sdcc_saved_fsr
     008A rrrr                      3-  109 m1      .banksel ram_address
     008B 01rr                      1-  743     	MOVR	___sdcc_saved_fsr,W
     008C 0084                      1-  744     	MOVAR	FSR
     008D 01rr                      1-  745     	MOVR	PSAVE,W
     008E 008A                      1-  746     	MOVAR	PCHBUF
     008F 0283                      1-  747     	CLRR	STATUS
     0090 15rr                      1-  748     	SWAPR	SSAVE,W
     0091 0083                      1-  749     	MOVAR	STATUS
     0092 15rr                      1-  750     	SWAPR	WSAVE,F
     0093 15rr                      1-  751     	SWAPR	WSAVE,W
     0094                           1-  752     END_OF_INTERRUPT:
     0094 0011                      1-  753     	RETIE	
                                    1-  755     ;--------------------------------------------------------
                                    1-  756     ; code
                                    1-  757     ;--------------------------------------------------------
                                    1-  758     ; code_main	code
                                    1-  759     ;***
                                    1-  760     ;  pBlock Stats: dbName = M
                                    1-  761     ;***
                                    1-  762     ;has an exit
                                    1-  763     ;functions called:
                                    1-  764     ;   _gpioKeyScan
                                    1-  765     ;   _get_p_ext_int_status
                                    1-  766     ;   _is_chg_or_dischg
                                    1-  767     ;   _get_cap
                                    1-  768     ;   _app_display_all
                                    1-  769     ;   _gpioKeyScan
                                    1-  770     ;   _get_p_ext_int_status
                                    1-  771     ;   _is_chg_or_dischg
                                    1-  772     ;   _get_cap
                                    1-  773     ;   _app_display_all
                                    1-  774     ;1 compiler assigned register :
                                    1-  775     ;   r0x102D
                                    1-  776     ;; Starting pCode block
                                    1-  777     .segment "code"; module=main, function=_main
     0000                           1-  779     _main:
                                    1-  780     ; 2 exit points
                                    1-  781     	.line	1435, "main.c"; 	DISI();
     0000 0013                      1-  782     	DISI
                                    1-  783     	.line	1437, "main.c"; 	BPHCON = (unsigned char)~C_PB0_PHB; // Enable PB1 Pull-High resistor
     0001 21FE                      1-  784     	MOVIA	0xfe
     0002 00rr                      1-  785     	MOVAR	_BPHCON
                                    1-  786     	.line	1440, "main.c"; 	IOSTA = 0xFF;
     0003 21FF                      1-  787     	MOVIA	0xff
     0004 000r                      1-  788     	IOST	_IOSTA
                                    1-  789     	.line	1441, "main.c"; 	IOSTB = 0xFF;
     0005 000r                      1-  790     	IOST	_IOSTB
                                    1-  791     	.line	1443, "main.c"; 	PORTA = 0x00; // PORTB data buffer=0x00
     0006 02rr                      1-  792     	CLRR	_PORTA
                                    1-  793     	.line	1444, "main.c"; 	PORTB = 0x00;
     0007 02rr                      1-  794     	CLRR	_PORTB
                                    1-  795     	.line	1450, "main.c"; 	OSCCR = C_FLOSC_Sel; // OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     0008 0200                      1-  796     	CLRA	
     0009 00rr                      1-  798     	SFUN	_OSCCR
     000A 0000                      1-  799     	NOP	
                                    1-  800     	.line	1453, "main.c"; 	OSCCR = C_FHOSC_Sel; // OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     000B 2101                      1-  801     	MOVIA	0x01
     000C 00rr                      1-  803     	SFUN	_OSCCR
     000D 0000                      1-  804     	NOP	
                                    1-  805     	.line	1468, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     000E 0200                      1-  806     	CLRA	
     000F 000r                      1-  807     	IOST	_PCON1
                                    1-  808     	.line	1471, "main.c"; 	T0MD = 0x0F; // 8M,2T  Prescaler0 to wdt,
     0010 210F                      1-  809     	MOVIA	0x0f
     0011 0003                      1-  810     	T0MD	
                                    1-  811     	.line	1480, "main.c"; 	INTE = 0x01; // Timer0 overflow interrupt enable bit
     0012 2101                      1-  812     	MOVIA	0x01
     0013 00rr                      1-  813     	MOVAR	_INTE
                                    1-  814     	.line	1483, "main.c"; 	PCON = 0xC8; //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0014 21C8                      1-  815     	MOVIA	0xc8
     0015 00rr                      1-  816     	MOVAR	_PCON
                                    1-  817     	.line	1485, "main.c"; 	PCON1 = 0x01; //  C_TMR0_En;                          // Enable Timer0
     0016 2101                      1-  818     	MOVIA	0x01
     0017 000r                      1-  819     	IOST	_PCON1
                                    1-  820     	.line	1486, "main.c"; 	ENI();
     0018 0004                      1-  821     	ENI
                                    1-  822     	.line	1488, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     0019 2114                      1-  823     	MOVIA	0x14
                                    1-  824     	BANKSEL	_delaySleepTimer
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1-  825     	MOVAR	_delaySleepTimer
                                    1-  826     	.line	1489, "main.c"; 	bFlag_power_on = 1;
                                    1-  827     	BANKSEL	_vFlag_1
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 1Arr                      1-  828     	BSR	_vFlag_1,4
                                    1-  829     	.line	1494, "main.c"; 	forceDispTimer = 20;
     001E 2114                      1-  830     	MOVIA	0x14
                                    1-  831     	BANKSEL	_forceDispTimer
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1-  832     	MOVAR	_forceDispTimer
                                    1-  833     	.line	1495, "main.c"; 	P_LED_R_OUTPUT;
     0021 001r                      1-  834     	IOSTR	_IOSTB
                                    1-  835     	BANKSEL	r0x102D
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1-  836     	MOVAR	r0x102D
     0024 1Err                      1-  837     	BCR	r0x102D,4
     0025 01rr                      1-  838     	MOVR	r0x102D,W
     0026 000r                      1-  839     	IOST	_IOSTB
                                    1-  840     	.line	1496, "main.c"; 	P_LED_R_OFF;
     0027 1Err                      1-  841     	BCR	_PORTBbits,4
                                    1-  842     	.line	1497, "main.c"; 	P_LED_G_OUTPUT;
     0028 001r                      1-  843     	IOSTR	_IOSTB
     0029 00rr                      1-  844     	MOVAR	r0x102D
     002A 1Drr                      1-  845     	BCR	r0x102D,3
     002B 01rr                      1-  846     	MOVR	r0x102D,W
     002C 000r                      1-  847     	IOST	_IOSTB
                                    1-  848     	.line	1498, "main.c"; 	P_LED_G_OFF;
     002D 1Drr                      1-  849     	BCR	_PORTBbits,3
                                    1-  850     	.line	1499, "main.c"; 	P_LED_B_OUTPUT;
     002E 001r                      1-  851     	IOSTR	_IOSTB
     002F 00rr                      1-  852     	MOVAR	r0x102D
     0030 1Drr                      1-  853     	BCR	r0x102D,2
     0031 01rr                      1-  854     	MOVR	r0x102D,W
     0032 000r                      1-  855     	IOST	_IOSTB
                                    1-  856     	.line	1500, "main.c"; 	P_LED_B_OFF;
     0033 1Drr                      1-  857     	BCR	_PORTBbits,2
                                    1-  858     	.line	1502, "main.c"; 	displayTimer = CONST_TIMER_DISP;
     0034 2114                      1-  859     	MOVIA	0x14
                                    1-  860     	BANKSEL	_displayTimer
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1-  861     	MOVAR	_displayTimer
     0037                           1-  862     _02524_DS_:
                                    1-  863     	.line	1509, "main.c"; 	CLRWDT();
     0037 0002                      1-  864     	clrwdt
                                    1-  865     	.line	1510, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  866     	BANKSEL	_vFlag_0
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1-  867     	BTRSS	_vFlag_0,0
                                    1-  868     	MGOTO	_02524_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  869     	.line	1512, "main.c"; 	bFlag_gSysTick_Change = 0;
     003B 1Crr                      1-  870     	BCR	_vFlag_0,0
                                    1-  871     	.line	1513, "main.c"; 	if (bFlag_slice_16ms)
     003C 08rr                      1-  872     	BTRSS	_vFlag_0,1
                                    1-  873     	MGOTO	_02524_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  874     	.line	1516, "main.c"; 	bFlag_slice_16ms = 0;
     003E 1Crr                      1-  875     	BCR	_vFlag_0,1
                                    1-  876     	.line	1517, "main.c"; 	timer_slice_16ms++;
                                    1-  877     	BANKSEL	_timer_slice_16ms
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 01rr                      1-  878     	MOVR	_timer_slice_16ms,W
                                    1-  879     	BANKSEL	r0x102D
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 00rr                      1-  880     	MOVAR	r0x102D
     0043 05rr                      1-  881     	INCR	r0x102D,W
                                    1-  882     	BANKSEL	_timer_slice_16ms
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 00rr                      1-  883     	MOVAR	_timer_slice_16ms
                                    1-  884     	.line	1518, "main.c"; 	gpioKeyScan();
                                    1-  885     	MCALL	_gpioKeyScan
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  886     	.line	1519, "main.c"; 	get_p_ext_int_status();
                                    1-  887     	MCALL	_get_p_ext_int_status
     0047 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  888     	.line	1520, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  889     	BANKSEL	_vFlag_1
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 0Drr                      1-  890     	BTRSC	_vFlag_1,3
                                    1-  891     	.line	1522, "main.c"; 	is_chg_or_dischg();
                                    1-  892     	MCALL	_is_chg_or_dischg
     004A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  893     	.line	1525, "main.c"; 	if (!(timer_slice_16ms & 0x1F))
                                    1-  894     	BANKSEL	_timer_slice_16ms
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1-  895     	MOVR	_timer_slice_16ms,W
     004D 221F                      1-  896     	ANDIA	0x1f
     004E 0903                      1-  897     	BTRSS	STATUS,2
                                    1-  898     	MGOTO	_02507_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  899     	.line	1527, "main.c"; 	bFlag_blink ^= 1;
     0050 2180                      1-  900     	MOVIA	0x80
                                    1-  901     	BANKSEL	_vFlag_0
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 12rr                      1-  902     	XORAR	_vFlag_0,F
                                    1-  903     	.line	1532, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  904     	BANKSEL	_vFlag_1
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 0Drr                      1-  905     	BTRSC	_vFlag_1,3
                                    1-  906     	.line	1534, "main.c"; 	get_cap();
                                    1-  907     	MCALL	_get_cap
     0055 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  908     	.line	1536, "main.c"; 	app_display_all();
                                    1-  909     	MCALL	_app_display_all
     0056 2rrr                      3-   65 m1      LCALL rom_address
     0057                           1-  910     _02507_DS_:
                                    1-  911     	.line	1538, "main.c"; 	if (!(timer_slice_16ms & 0x3F))
                                    1-  912     	BANKSEL	_timer_slice_16ms
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 01rr                      1-  913     	MOVR	_timer_slice_16ms,W
     0059 223F                      1-  914     	ANDIA	0x3f
     005A 0903                      1-  915     	BTRSS	STATUS,2
                                    1-  916     	MGOTO	_02524_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  917     	.line	1543, "main.c"; 	if ((0 == bFlag_charger_on) && (!P_I2C_INT))
                                    1-  918     	BANKSEL	_vFlag_1
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 0Err                      1-  919     	BTRSC	_vFlag_1,5
                                    1-  920     	MGOTO	_02524_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
     005F 0Drr                      1-  921     	BTRSC	_PORTAbits,2
                                    1-  922     	MGOTO	_02524_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  923     	.line	1548, "main.c"; 	if (!delaySleepTimer)
                                    1-  924     	BANKSEL	_delaySleepTimer
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 01rr                      1-  925     	MOVR	_delaySleepTimer,W
     0063 0903                      1-  926     	BTRSS	STATUS,2
                                    1-  927     	MGOTO	_02512_DS_
     0064 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  928     	.line	1555, "main.c"; 	CLRWDT();
     0065 0002                      1-  929     	clrwdt
                                    1-  930     	.line	1556, "main.c"; 	INTE = 0x00;  // Timer0 overflow interrupt enable bit
     0066 02rr                      1-  931     	CLRR	_INTE
                                    1-  932     	.line	1557, "main.c"; 	PCON = 0x58;  // PCON = 0xC8;
     0067 2158                      1-  933     	MOVIA	0x58
     0068 00rr                      1-  934     	MOVAR	_PCON
                                    1-  935     	.line	1558, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     0069 0200                      1-  936     	CLRA	
     006A 000r                      1-  937     	IOST	_PCON1
                                    1-  938     	.line	1559, "main.c"; 	INTF = 0;
     006B 02rr                      1-  939     	CLRR	_INTF
                                    1-  940     	.line	1560, "main.c"; 	DISI();
     006C 0013                      1-  941     	DISI
                                    1-  942     	.line	1568, "main.c"; 	PORTA = 0x00;
     006D 02rr                      1-  943     	CLRR	_PORTA
                                    1-  944     	.line	1569, "main.c"; 	PORTB = 0x00;
     006E 02rr                      1-  945     	CLRR	_PORTB
                                    1-  946     	.line	1570, "main.c"; 	IOSTA = 0x00;
     006F 0200                      1-  947     	CLRA	
     0070 000r                      1-  948     	IOST	_IOSTA
                                    1-  949     	.line	1571, "main.c"; 	IOSTB = 0x00;
     0071 000r                      1-  950     	IOST	_IOSTB
                                    1-  951     	.line	1572, "main.c"; 	P_KEY_INPUT;
     0072 001r                      1-  952     	IOSTR	_IOSTB
                                    1-  953     	BANKSEL	r0x102D
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 00rr                      1-  954     	MOVAR	r0x102D
     0075 18rr                      1-  955     	BSR	r0x102D,0
     0076 01rr                      1-  956     	MOVR	r0x102D,W
     0077 000r                      1-  957     	IOST	_IOSTB
                                    1-  958     	.line	1573, "main.c"; 	P_KEY_IPS_INPUT;
     0078 001r                      1-  959     	IOSTR	_IOSTB
     0079 00rr                      1-  960     	MOVAR	r0x102D
     007A 18rr                      1-  961     	BSR	r0x102D,1
     007B 01rr                      1-  962     	MOVR	r0x102D,W
     007C 000r                      1-  963     	IOST	_IOSTB
                                    1-  964     	.line	1574, "main.c"; 	P_I2C_INT_INPUT;
     007D 001r                      1-  965     	IOSTR	_IOSTA
     007E 00rr                      1-  966     	MOVAR	r0x102D
     007F 19rr                      1-  967     	BSR	r0x102D,2
     0080 01rr                      1-  968     	MOVR	r0x102D,W
     0081 000r                      1-  969     	IOST	_IOSTA
                                    1-  970     	.line	1575, "main.c"; 	P_I2C_SCL_INPUT;
     0082 001r                      1-  971     	IOSTR	_IOSTA
     0083 00rr                      1-  972     	MOVAR	r0x102D
     0084 1Arr                      1-  973     	BSR	r0x102D,4
     0085 01rr                      1-  974     	MOVR	r0x102D,W
     0086 000r                      1-  975     	IOST	_IOSTA
                                    1-  976     	.line	1576, "main.c"; 	P_I2C_SDA_INPUT;
     0087 001r                      1-  977     	IOSTR	_IOSTA
     0088 00rr                      1-  978     	MOVAR	r0x102D
     0089 19rr                      1-  979     	BSR	r0x102D,3
     008A 01rr                      1-  980     	MOVR	r0x102D,W
     008B 000r                      1-  981     	IOST	_IOSTA
                                    1-  982     	.line	1599, "main.c"; 	AWUCON = (C_PA2_Wakeup); // OK
     008C 2104                      1-  983     	MOVIA	0x04
     008D 00rr                      1-  984     	MOVAR	_AWUCON
                                    1-  985     	.line	1600, "main.c"; 	BWUCON = C_PB0_Wakeup;   // OK
     008E 2101                      1-  986     	MOVIA	0x01
     008F 00rr                      1-  987     	MOVAR	_BWUCON
                                    1-  988     	.line	1602, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     0090 2102                      1-  989     	MOVIA	0x02
     0091 00rr                      1-  990     	MOVAR	_INTE
                                    1-  991     	.line	1603, "main.c"; 	INTF = 0;
     0092 02rr                      1-  992     	CLRR	_INTF
                                    1-  993     	.line	1609, "main.c"; 	if (!P_KEY)
     0093 08rr                      1-  994     	BTRSS	_PORTBbits,0
                                    1-  995     	MGOTO	_02510_DS_
     0094 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  996     	.line	1613, "main.c"; 	NOP();
     0095 0000                      1-  997     	nop
                                    1-  998     	.line	1614, "main.c"; 	NOP();
     0096 0000                      1-  999     	nop
                                    1- 1000     	.line	1615, "main.c"; 	UPDATE_REG(PORTB);
     0097 01rr                      1- 1001     	MOVR	_PORTB,F
                                    1- 1002     	.line	1616, "main.c"; 	UPDATE_REG(PORTA);
     0098 01rr                      1- 1003     	MOVR	_PORTA,F
                                    1- 1004     	.line	1617, "main.c"; 	NOP();
     0099 0000                      1- 1005     	nop
                                    1- 1006     	.line	1618, "main.c"; 	NOP();
     009A 0000                      1- 1007     	nop
                                    1- 1008     	.line	1619, "main.c"; 	SLEEP();
     009B 0001                      1- 1009     	sleep
                                    1- 1010     	.line	1620, "main.c"; 	NOP();
     009C 0000                      1- 1011     	nop
                                    1- 1012     	.line	1621, "main.c"; 	NOP();
     009D 0000                      1- 1013     	nop
     009E                           1- 1014     _02510_DS_:
                                    1- 1015     	.line	1623, "main.c"; 	INTFbits.PABIF = 0;
     009E 21FD                      1- 1016     	MOVIA	0xfd
     009F 00rr                      1- 1017     	MOVAR	(_INTFbits + 0)
                                    1- 1018     	.line	1627, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     00A0 2114                      1- 1019     	MOVIA	0x14
                                    1- 1020     	BANKSEL	_delaySleepTimer
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 00rr                      1- 1021     	MOVAR	_delaySleepTimer
                                    1- 1022     	.line	1633, "main.c"; 	PCON = 0xC8;
     00A3 21C8                      1- 1023     	MOVIA	0xc8
     00A4 00rr                      1- 1024     	MOVAR	_PCON
                                    1- 1025     	.line	1646, "main.c"; 	PCON1 |= C_TMR0_En;            // Enable Timer0
     00A5 001r                      1- 1026     	IOSTR	_PCON1
                                    1- 1027     	BANKSEL	r0x102D
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 00rr                      1- 1028     	MOVAR	r0x102D
     00A8 18rr                      1- 1029     	BSR	r0x102D,0
     00A9 01rr                      1- 1030     	MOVR	r0x102D,W
     00AA 000r                      1- 1031     	IOST	_PCON1
                                    1- 1032     	.line	1647, "main.c"; 	INTE = (0x01 /*| C_INT_LVD*/); // Timer0 overflow interrupt enable bit
     00AB 2101                      1- 1033     	MOVIA	0x01
     00AC 00rr                      1- 1034     	MOVAR	_INTE
                                    1- 1035     	.line	1648, "main.c"; 	ENI();
     00AD 0004                      1- 1036     	ENI
                                    1- 1037     	MGOTO	_02524_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 1038     _02512_DS_:
                                    1- 1039     	.line	1652, "main.c"; 	delaySleepTimer--;
                                    1- 1040     	BANKSEL	_delaySleepTimer
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 01rr                      1- 1041     	MOVR	_delaySleepTimer,W
                                    1- 1042     	BANKSEL	r0x102D
     00B1 rrrr                      3-  109 m1      .banksel ram_address
     00B2 00rr                      1- 1043     	MOVAR	r0x102D
     00B3 06rr                      1- 1044     	DECR	r0x102D,W
                                    1- 1045     	BANKSEL	_delaySleepTimer
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 1046     	MOVAR	_delaySleepTimer
                                    1- 1047     	MGOTO	_02524_DS_
     00B6 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1048     	.line	1661, "main.c"; 	}
                                    1- 1049     	RETURN	
     00B7 0010                      3-   39 m1      ret
                                    1- 1050     ; exit point of _main
                                    1- 1052     ;***
                                    1- 1053     ;  pBlock Stats: dbName = C
                                    1- 1054     ;***
                                    1- 1055     ;has an exit
                                    1- 1056     ;functions called:
                                    1- 1057     ;   __gptrget1
                                    1- 1058     ;   __gptrget1
                                    1- 1059     ;   __divuchar
                                    1- 1060     ;   __moduchar
                                    1- 1061     ;   __gptrget1
                                    1- 1062     ;   __gptrget1
                                    1- 1063     ;   _disable_breathing_mode
                                    1- 1064     ;   __gptrget1
                                    1- 1065     ;   __gptrget1
                                    1- 1066     ;   __divuchar
                                    1- 1067     ;   __moduchar
                                    1- 1068     ;   __gptrget1
                                    1- 1069     ;   __gptrget1
                                    1- 1070     ;   __divuchar
                                    1- 1071     ;   __moduchar
                                    1- 1072     ;   __gptrget1
                                    1- 1073     ;   __gptrget1
                                    1- 1074     ;   __gptrget1
                                    1- 1075     ;   __gptrget1
                                    1- 1076     ;   __gptrget1
                                    1- 1077     ;   __gptrget1
                                    1- 1078     ;   __divuchar
                                    1- 1079     ;   __moduchar
                                    1- 1080     ;   __gptrget1
                                    1- 1081     ;   __gptrget1
                                    1- 1082     ;   _disable_breathing_mode
                                    1- 1083     ;   __gptrget1
                                    1- 1084     ;   __gptrget1
                                    1- 1085     ;   __divuchar
                                    1- 1086     ;   __moduchar
                                    1- 1087     ;   __gptrget1
                                    1- 1088     ;   __gptrget1
                                    1- 1089     ;   __divuchar
                                    1- 1090     ;   __moduchar
                                    1- 1091     ;   __gptrget1
                                    1- 1092     ;   __gptrget1
                                    1- 1093     ;   __gptrget1
                                    1- 1094     ;   __gptrget1
                                    1- 1095     ;5 compiler assigned registers:
                                    1- 1096     ;   r0x101A
                                    1- 1097     ;   STK01
                                    1- 1098     ;   STK00
                                    1- 1099     ;   r0x101B
                                    1- 1100     ;   r0x101C
                                    1- 1101     ;; Starting pCode block
                                    1- 1102     .segment "code"; module=main, function=_app_display_all
                                    1- 1104     ;local variable name mapping:
     0000                           1- 1107     _app_display_all:
                                    1- 1108     ; 2 exit points
                                    1- 1109     	.line	1229, "main.c"; 	if (forceDispTimer)
                                    1- 1110     	BANKSEL	_forceDispTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1111     	MOVR	_forceDispTimer,W
     0002 0D03                      1- 1112     	BTRSC	STATUS,2
                                    1- 1113     	MGOTO	_02495_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1114     	.line	1231, "main.c"; 	forceDispTimer--;
     0004 01rr                      1- 1115     	MOVR	_forceDispTimer,W
                                    1- 1116     	BANKSEL	r0x101A
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1117     	MOVAR	r0x101A
     0007 06rr                      1- 1118     	DECR	r0x101A,W
                                    1- 1119     	BANKSEL	_forceDispTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1120     	MOVAR	_forceDispTimer
                                    1- 1121     	.line	1232, "main.c"; 	displayHundred = DispTable[1];
     000A 21rr                      1- 1122     	MOVIA	(_DispTable + 1)
     000B 00rr                      1- 1123     	MOVAR	STK01
     000C 21rr                      1- 1124     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     000D 00rr                      1- 1125     	MOVAR	STK00
     000E 2180                      1- 1126     	MOVIA	0x80
                                    1- 1127     	MCALL	__gptrget1
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1128     	BANKSEL	_displayHundred
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1129     	MOVAR	_displayHundred
                                    1- 1130     	.line	1234, "main.c"; 	displayHundred |= (SEG_E | SEG_D);
     0012 2118                      1- 1131     	MOVIA	0x18
     0013 11rr                      1- 1132     	IORAR	_displayHundred,F
                                    1- 1133     	.line	1235, "main.c"; 	displayDecade = DispTable[8];
     0014 21rr                      1- 1134     	MOVIA	(_DispTable + 8)
     0015 00rr                      1- 1135     	MOVAR	STK01
     0016 21rr                      1- 1136     	MOVIA	((_DispTable + 8) >> 8) & 0xff
     0017 00rr                      1- 1137     	MOVAR	STK00
     0018 2180                      1- 1138     	MOVIA	0x80
                                    1- 1139     	MCALL	__gptrget1
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1140     	BANKSEL	_displayDigit
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1141     	MOVAR	_displayDigit
                                    1- 1142     	BANKSEL	r0x101A
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1143     	MOVAR	r0x101A
                                    1- 1144     	BANKSEL	_displayDecade
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1145     	MOVAR	_displayDecade
                                    1- 1146     ;;102	MOVR	r0x101A,W
                                    1- 1147     	.line	1238, "main.c"; 	if (!forceDispTimer)
                                    1- 1148     	BANKSEL	_forceDispTimer
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1- 1149     	MOVR	_forceDispTimer,W
     0022 0903                      1- 1150     	BTRSS	STATUS,2
                                    1- 1151     	MGOTO	_02497_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1152     	.line	1240, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1153     	BANKSEL	_displayHundred
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1- 1154     	CLRR	_displayHundred
                                    1- 1155     	.line	1241, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1156     	BANKSEL	_displayDecade
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 02rr                      1- 1157     	CLRR	_displayDecade
                                    1- 1158     	.line	1242, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1159     	BANKSEL	_displayDigit
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 02rr                      1- 1160     	CLRR	_displayDigit
                                    1- 1161     	MGOTO	_02497_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
     002B                           1- 1162     _02495_DS_:
                                    1- 1163     	.line	1247, "main.c"; 	else if (bFlag_charger_on) // bFlag_charger_nbFlag_vin_plug_in
                                    1- 1164     	BANKSEL	_vFlag_1
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 0Arr                      1- 1165     	BTRSS	_vFlag_1,5
                                    1- 1166     	MGOTO	_02492_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1167     	.line	1249, "main.c"; 	underVoltageDispTimer = 0;
                                    1- 1168     	BANKSEL	_underVoltageDispTimer
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 02rr                      1- 1169     	CLRR	_underVoltageDispTimer
                                    1- 1170     	.line	1251, "main.c"; 	displayTimer = CONST_TIMER_DISP; // 拨出显示5秒
     0030 2114                      1- 1171     	MOVIA	0x14
                                    1- 1172     	BANKSEL	_displayTimer
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1173     	MOVAR	_displayTimer
                                    1- 1174     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1175     	.line	1253, "main.c"; 	if (displayData < 100) // 充电
     0033 2164                      1- 1176     	MOVIA	0x64
                                    1- 1177     	BANKSEL	_displayData
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 04rr                      1- 1178     	SUBAR	_displayData,W
     0036 0C03                      1- 1179     	BTRSC	STATUS,0
                                    1- 1180     	MGOTO	_02454_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1181     	.line	1255, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1182     	BANKSEL	_displayHundred
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 02rr                      1- 1183     	CLRR	_displayHundred
                                    1- 1184     	.line	1256, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1185     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 0Arr                      1- 1186     	BTRSS	_vFlag_0,4
                                    1- 1187     	MGOTO	_00001_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1188     	.line	1258, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1189     	BANKSEL	_displayHundred
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 19rr                      1- 1190     	BSR	_displayHundred,3
     003F                           1- 1191     _00001_DS_:
                                    1- 1192     	.line	1261, "main.c"; 	if (bFlag_blink)
                                    1- 1193     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 0Brr                      1- 1194     	BTRSS	_vFlag_0,7
                                    1- 1195     	MGOTO	_02449_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1196     	.line	1263, "main.c"; 	i = displayData / 10;
     0042 210A                      1- 1197     	MOVIA	0x0a
     0043 00rr                      1- 1198     	MOVAR	STK00
                                    1- 1199     	BANKSEL	_displayData
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1200     	MOVR	_displayData,W
                                    1- 1201     	MCALL	__divuchar
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1202     	BANKSEL	r0x101A
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 1203     	MOVAR	r0x101A
                                    1- 1204     	.line	1264, "main.c"; 	j = displayData % 10;
     0049 210A                      1- 1205     	MOVIA	0x0a
     004A 00rr                      1- 1206     	MOVAR	STK00
                                    1- 1207     	BANKSEL	_displayData
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1208     	MOVR	_displayData,W
                                    1- 1209     	MCALL	__moduchar
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1210     	BANKSEL	r0x101B
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 1211     	MOVAR	r0x101B
                                    1- 1212     	.line	1265, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1213     	BANKSEL	_displayDecade
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 02rr                      1- 1214     	CLRR	_displayDecade
                                    1- 1215     	.line	1267, "main.c"; 	if (i) // 十位是0 不显示
                                    1- 1216     	BANKSEL	r0x101A
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1217     	MOVR	r0x101A,W
     0054 0D03                      1- 1218     	BTRSC	STATUS,2
                                    1- 1219     	MGOTO	_02447_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1220     	.line	1269, "main.c"; 	displayDecade = DispTable[i];
     0056 21rr                      1- 1221     	MOVIA	(_DispTable + 0)
     0057 03rr                      1- 1222     	ADDAR	r0x101A,F
     0058 21rr                      1- 1223     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0059 2600                      1- 1224     	ADCIA	0x00
                                    1- 1225     	BANKSEL	r0x101C
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1226     	MOVAR	r0x101C
                                    1- 1227     	BANKSEL	r0x101A
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1228     	MOVR	r0x101A,W
     005E 00rr                      1- 1229     	MOVAR	STK01
                                    1- 1230     	BANKSEL	r0x101C
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1231     	MOVR	r0x101C,W
     0061 00rr                      1- 1232     	MOVAR	STK00
     0062 2180                      1- 1233     	MOVIA	0x80
                                    1- 1234     	MCALL	__gptrget1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1235     	BANKSEL	_displayDecade
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1236     	MOVAR	_displayDecade
     0066                           1- 1237     _02447_DS_:
                                    1- 1238     	.line	1272, "main.c"; 	displayDigit = DispTable[j];
     0066 21rr                      1- 1239     	MOVIA	(_DispTable + 0)
                                    1- 1240     	BANKSEL	r0x101B
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1- 1241     	ADDAR	r0x101B,F
     0069 21rr                      1- 1242     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     006A 2600                      1- 1243     	ADCIA	0x00
                                    1- 1244     	BANKSEL	r0x101A
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1245     	MOVAR	r0x101A
                                    1- 1246     	BANKSEL	r0x101B
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1247     	MOVR	r0x101B,W
     006F 00rr                      1- 1248     	MOVAR	STK01
                                    1- 1249     	BANKSEL	r0x101A
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1250     	MOVR	r0x101A,W
     0072 00rr                      1- 1251     	MOVAR	STK00
     0073 2180                      1- 1252     	MOVIA	0x80
                                    1- 1253     	MCALL	__gptrget1
     0074 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1254     	BANKSEL	_displayDigit
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 00rr                      1- 1255     	MOVAR	_displayDigit
                                    1- 1256     	MGOTO	_02497_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 1257     _02449_DS_:
                                    1- 1258     	.line	1276, "main.c"; 	displayDigit = DISP_ALL_OFF; // 个位闪烁 充电
                                    1- 1259     	BANKSEL	_displayDigit
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 02rr                      1- 1260     	CLRR	_displayDigit
                                    1- 1261     	MGOTO	_02497_DS_
     007A 3rrr                      3-   62 m1      LGOTO rom_address
     007B                           1- 1262     _02454_DS_:
                                    1- 1263     	.line	1281, "main.c"; 	disable_breathing_mode();
                                    1- 1264     	MCALL	_disable_breathing_mode
     007B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1265     	.line	1282, "main.c"; 	P_LED_G_ON;
     007C 19rr                      1- 1266     	BSR	_PORTBbits,3
                                    1- 1267     	.line	1283, "main.c"; 	displayHundred = DispTable[1];
     007D 21rr                      1- 1268     	MOVIA	(_DispTable + 1)
     007E 00rr                      1- 1269     	MOVAR	STK01
     007F 21rr                      1- 1270     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0080 00rr                      1- 1271     	MOVAR	STK00
     0081 2180                      1- 1272     	MOVIA	0x80
                                    1- 1273     	MCALL	__gptrget1
     0082 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1274     	BANKSEL	_displayHundred
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 00rr                      1- 1275     	MOVAR	_displayHundred
                                    1- 1276     	.line	1284, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1277     	BANKSEL	_vFlag_0
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 0Arr                      1- 1278     	BTRSS	_vFlag_0,4
                                    1- 1279     	MGOTO	_00002_DS_
     0087 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1280     	.line	1286, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1281     	BANKSEL	_displayHundred
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 19rr                      1- 1282     	BSR	_displayHundred,3
     008A                           1- 1283     _00002_DS_:
                                    1- 1284     	.line	1288, "main.c"; 	displayDecade = DispTable[0];
     008A 21rr                      1- 1285     	MOVIA	(_DispTable + 0)
     008B 00rr                      1- 1286     	MOVAR	STK01
     008C 21rr                      1- 1287     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     008D 00rr                      1- 1288     	MOVAR	STK00
     008E 2180                      1- 1289     	MOVIA	0x80
                                    1- 1290     	MCALL	__gptrget1
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1291     	BANKSEL	_displayDigit
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 1292     	MOVAR	_displayDigit
                                    1- 1293     	BANKSEL	r0x101A
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 1294     	MOVAR	r0x101A
                                    1- 1295     	BANKSEL	_displayDecade
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 00rr                      1- 1296     	MOVAR	_displayDecade
                                    1- 1297     ;;101	MOVR	r0x101A,W
                                    1- 1298     	.line	1289, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1299     	MGOTO	_02497_DS_
     0096 3rrr                      3-   62 m1      LGOTO rom_address
     0097                           1- 1300     _02492_DS_:
                                    1- 1301     	.line	1296, "main.c"; 	if (underVoltageDispTimer) // 欠压关机显示
                                    1- 1302     	BANKSEL	_underVoltageDispTimer
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 01rr                      1- 1303     	MOVR	_underVoltageDispTimer,W
     0099 0D03                      1- 1304     	BTRSC	STATUS,2
                                    1- 1305     	MGOTO	_02489_DS_
     009A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1306     	.line	1298, "main.c"; 	underVoltageDispTimer--;
     009B 01rr                      1- 1307     	MOVR	_underVoltageDispTimer,W
                                    1- 1308     	BANKSEL	r0x101A
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 00rr                      1- 1309     	MOVAR	r0x101A
     009E 06rr                      1- 1310     	DECR	r0x101A,W
                                    1- 1311     	BANKSEL	_underVoltageDispTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 1312     	MOVAR	_underVoltageDispTimer
                                    1- 1313     	.line	1299, "main.c"; 	displayTimer = 0;
                                    1- 1314     	BANKSEL	_displayTimer
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1- 1315     	CLRR	_displayTimer
                                    1- 1316     	.line	1300, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1317     	BANKSEL	_displayHundred
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 02rr                      1- 1318     	CLRR	_displayHundred
                                    1- 1319     	.line	1301, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1320     	BANKSEL	_vFlag_0
     00A5 rrrr                      3-  109 m1      .banksel ram_address
     00A6 0Arr                      1- 1321     	BTRSS	_vFlag_0,4
                                    1- 1322     	MGOTO	_00003_DS_
     00A7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1323     	.line	1303, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1324     	BANKSEL	_displayHundred
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 19rr                      1- 1325     	BSR	_displayHundred,3
     00AA                           1- 1326     _00003_DS_:
                                    1- 1327     	.line	1312, "main.c"; 	if (underVoltageDispTimer % 2)
                                    1- 1328     	BANKSEL	_underVoltageDispTimer
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 08rr                      1- 1329     	BTRSS	_underVoltageDispTimer,0
                                    1- 1330     	MGOTO	_02464_DS_
     00AC 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1331     	.line	1314, "main.c"; 	i = displayData / 10;
     00AD 210A                      1- 1332     	MOVIA	0x0a
     00AE 00rr                      1- 1333     	MOVAR	STK00
                                    1- 1334     	BANKSEL	_displayData
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 01rr                      1- 1335     	MOVR	_displayData,W
                                    1- 1336     	MCALL	__divuchar
     00B1 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1337     	BANKSEL	r0x101A
     00B2 rrrr                      3-  109 m1      .banksel ram_address
     00B3 00rr                      1- 1338     	MOVAR	r0x101A
                                    1- 1339     	.line	1315, "main.c"; 	j = displayData % 10;
     00B4 210A                      1- 1340     	MOVIA	0x0a
     00B5 00rr                      1- 1341     	MOVAR	STK00
                                    1- 1342     	BANKSEL	_displayData
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 1343     	MOVR	_displayData,W
                                    1- 1344     	MCALL	__moduchar
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1345     	BANKSEL	r0x101B
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 1346     	MOVAR	r0x101B
                                    1- 1347     	.line	1317, "main.c"; 	if (i)
                                    1- 1348     	BANKSEL	r0x101A
     00BB rrrr                      3-  109 m1      .banksel ram_address
     00BC 01rr                      1- 1349     	MOVR	r0x101A,W
     00BD 0D03                      1- 1350     	BTRSC	STATUS,2
                                    1- 1351     	MGOTO	_02459_DS_
     00BE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1352     	.line	1319, "main.c"; 	displayDecade = DispTable[i];
     00BF 21rr                      1- 1353     	MOVIA	(_DispTable + 0)
     00C0 03rr                      1- 1354     	ADDAR	r0x101A,F
     00C1 21rr                      1- 1355     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00C2 2600                      1- 1356     	ADCIA	0x00
                                    1- 1357     	BANKSEL	r0x101C
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 00rr                      1- 1358     	MOVAR	r0x101C
                                    1- 1359     	BANKSEL	r0x101A
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 01rr                      1- 1360     	MOVR	r0x101A,W
     00C7 00rr                      1- 1361     	MOVAR	STK01
                                    1- 1362     	BANKSEL	r0x101C
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 01rr                      1- 1363     	MOVR	r0x101C,W
     00CA 00rr                      1- 1364     	MOVAR	STK00
     00CB 2180                      1- 1365     	MOVIA	0x80
                                    1- 1366     	MCALL	__gptrget1
     00CC 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1367     	BANKSEL	_displayDecade
     00CD rrrr                      3-  109 m1      .banksel ram_address
     00CE 00rr                      1- 1368     	MOVAR	_displayDecade
                                    1- 1369     	MGOTO	_02460_DS_
     00CF 3rrr                      3-   62 m1      LGOTO rom_address
     00D0                           1- 1370     _02459_DS_:
                                    1- 1371     	.line	1323, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1372     	BANKSEL	_displayDecade
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 02rr                      1- 1373     	CLRR	_displayDecade
     00D2                           1- 1374     _02460_DS_:
                                    1- 1375     	.line	1326, "main.c"; 	displayDigit = DispTable[j];
     00D2 21rr                      1- 1376     	MOVIA	(_DispTable + 0)
                                    1- 1377     	BANKSEL	r0x101B
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 03rr                      1- 1378     	ADDAR	r0x101B,F
     00D5 21rr                      1- 1379     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00D6 2600                      1- 1380     	ADCIA	0x00
                                    1- 1381     	BANKSEL	r0x101A
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 00rr                      1- 1382     	MOVAR	r0x101A
                                    1- 1383     	BANKSEL	r0x101B
     00D9 rrrr                      3-  109 m1      .banksel ram_address
     00DA 01rr                      1- 1384     	MOVR	r0x101B,W
     00DB 00rr                      1- 1385     	MOVAR	STK01
                                    1- 1386     	BANKSEL	r0x101A
     00DC rrrr                      3-  109 m1      .banksel ram_address
     00DD 01rr                      1- 1387     	MOVR	r0x101A,W
     00DE 00rr                      1- 1388     	MOVAR	STK00
     00DF 2180                      1- 1389     	MOVIA	0x80
                                    1- 1390     	MCALL	__gptrget1
     00E0 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1391     	BANKSEL	_displayDigit
     00E1 rrrr                      3-  109 m1      .banksel ram_address
     00E2 00rr                      1- 1392     	MOVAR	_displayDigit
                                    1- 1393     	MGOTO	_00004_DS_
     00E3 3rrr                      3-   62 m1      LGOTO rom_address
     00E4                           1- 1394     _02464_DS_:
                                    1- 1395     	.line	1330, "main.c"; 	if (0 == displayData)
                                    1- 1396     	BANKSEL	_displayData
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 01rr                      1- 1397     	MOVR	_displayData,W
     00E6 0903                      1- 1398     	BTRSS	STATUS,2
                                    1- 1399     	MGOTO	_00004_DS_
     00E7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1400     	.line	1332, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1401     	BANKSEL	_displayDigit
     00E8 rrrr                      3-  109 m1      .banksel ram_address
     00E9 02rr                      1- 1402     	CLRR	_displayDigit
     00EA                           1- 1403     _00004_DS_:
                                    1- 1404     	.line	1336, "main.c"; 	if (0 == underVoltageDispTimer)
                                    1- 1405     	BANKSEL	_underVoltageDispTimer
     00EA rrrr                      3-  109 m1      .banksel ram_address
     00EB 01rr                      1- 1406     	MOVR	_underVoltageDispTimer,W
     00EC 0903                      1- 1407     	BTRSS	STATUS,2
                                    1- 1408     	MGOTO	_02497_DS_
     00ED 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1409     	.line	1338, "main.c"; 	if (displayData)
                                    1- 1410     	BANKSEL	_displayData
     00EE rrrr                      3-  109 m1      .banksel ram_address
     00EF 01rr                      1- 1411     	MOVR	_displayData,W
     00F0 0D03                      1- 1412     	BTRSC	STATUS,2
                                    1- 1413     	MGOTO	_02497_DS_
     00F1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1414     	.line	1340, "main.c"; 	displayData--;
     00F2 01rr                      1- 1415     	MOVR	_displayData,W
                                    1- 1416     	BANKSEL	r0x101A
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 00rr                      1- 1417     	MOVAR	r0x101A
     00F5 06rr                      1- 1418     	DECR	r0x101A,W
                                    1- 1419     	BANKSEL	_displayData
     00F6 rrrr                      3-  109 m1      .banksel ram_address
     00F7 00rr                      1- 1420     	MOVAR	_displayData
                                    1- 1421     	.line	1341, "main.c"; 	underVoltageDispTimer = (CONST_TIMER_DISP_UV - 1);
     00F8 210A                      1- 1422     	MOVIA	0x0a
                                    1- 1423     	BANKSEL	_underVoltageDispTimer
     00F9 rrrr                      3-  109 m1      .banksel ram_address
     00FA 00rr                      1- 1424     	MOVAR	_underVoltageDispTimer
                                    1- 1425     	MGOTO	_02497_DS_
     00FB 3rrr                      3-   62 m1      LGOTO rom_address
     00FC                           1- 1426     _02489_DS_:
                                    1- 1427     	.line	1345, "main.c"; 	else if (displayTimer)
                                    1- 1428     	BANKSEL	_displayTimer
     00FC rrrr                      3-  109 m1      .banksel ram_address
     00FD 01rr                      1- 1429     	MOVR	_displayTimer,W
     00FE 0D03                      1- 1430     	BTRSC	STATUS,2
                                    1- 1431     	MGOTO	_02486_DS_
     00FF 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1432     	.line	1347, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1433     	BANKSEL	_displayHundred
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 02rr                      1- 1434     	CLRR	_displayHundred
                                    1- 1435     	.line	1349, "main.c"; 	displayTimer--;
                                    1- 1436     	BANKSEL	_displayTimer
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 01rr                      1- 1437     	MOVR	_displayTimer,W
                                    1- 1438     	BANKSEL	r0x101A
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 00rr                      1- 1439     	MOVAR	r0x101A
     0106 06rr                      1- 1440     	DECR	r0x101A,W
                                    1- 1441     	BANKSEL	_displayTimer
     0107 rrrr                      3-  109 m1      .banksel ram_address
     0108 00rr                      1- 1442     	MOVAR	_displayTimer
                                    1- 1443     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1444     	.line	1354, "main.c"; 	if (displayData < 100)
     0109 2164                      1- 1445     	MOVIA	0x64
                                    1- 1446     	BANKSEL	_displayData
     010A rrrr                      3-  109 m1      .banksel ram_address
     010B 04rr                      1- 1447     	SUBAR	_displayData,W
     010C 0C03                      1- 1448     	BTRSC	STATUS,0
                                    1- 1449     	MGOTO	_02483_DS_
     010D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1450     	.line	1356, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1451     	BANKSEL	_displayHundred
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 02rr                      1- 1452     	CLRR	_displayHundred
                                    1- 1453     	.line	1357, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1454     	BANKSEL	_vFlag_0
     0110 rrrr                      3-  109 m1      .banksel ram_address
     0111 0Arr                      1- 1455     	BTRSS	_vFlag_0,4
                                    1- 1456     	MGOTO	_00005_DS_
     0112 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1457     	.line	1359, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1458     	BANKSEL	_displayHundred
     0113 rrrr                      3-  109 m1      .banksel ram_address
     0114 19rr                      1- 1459     	BSR	_displayHundred,3
     0115                           1- 1460     _00005_DS_:
                                    1- 1461     	.line	1362, "main.c"; 	if (bFlag_blink)
                                    1- 1462     	BANKSEL	_vFlag_0
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 1463     	BTRSS	_vFlag_0,7
                                    1- 1464     	MGOTO	_02478_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1465     	.line	1364, "main.c"; 	i = displayData / 10;
     0118 210A                      1- 1466     	MOVIA	0x0a
     0119 00rr                      1- 1467     	MOVAR	STK00
                                    1- 1468     	BANKSEL	_displayData
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 01rr                      1- 1469     	MOVR	_displayData,W
                                    1- 1470     	MCALL	__divuchar
     011C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1471     	BANKSEL	r0x101A
     011D rrrr                      3-  109 m1      .banksel ram_address
     011E 00rr                      1- 1472     	MOVAR	r0x101A
                                    1- 1473     	.line	1365, "main.c"; 	j = displayData % 10;
     011F 210A                      1- 1474     	MOVIA	0x0a
     0120 00rr                      1- 1475     	MOVAR	STK00
                                    1- 1476     	BANKSEL	_displayData
     0121 rrrr                      3-  109 m1      .banksel ram_address
     0122 01rr                      1- 1477     	MOVR	_displayData,W
                                    1- 1478     	MCALL	__moduchar
     0123 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1479     	BANKSEL	r0x101B
     0124 rrrr                      3-  109 m1      .banksel ram_address
     0125 00rr                      1- 1480     	MOVAR	r0x101B
                                    1- 1481     	.line	1367, "main.c"; 	if (i)
                                    1- 1482     	BANKSEL	r0x101A
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 01rr                      1- 1483     	MOVR	r0x101A,W
     0128 0D03                      1- 1484     	BTRSC	STATUS,2
                                    1- 1485     	MGOTO	_02473_DS_
     0129 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1486     	.line	1369, "main.c"; 	displayDecade = DispTable[i];
     012A 21rr                      1- 1487     	MOVIA	(_DispTable + 0)
     012B 03rr                      1- 1488     	ADDAR	r0x101A,F
     012C 21rr                      1- 1489     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     012D 2600                      1- 1490     	ADCIA	0x00
                                    1- 1491     	BANKSEL	r0x101C
     012E rrrr                      3-  109 m1      .banksel ram_address
     012F 00rr                      1- 1492     	MOVAR	r0x101C
                                    1- 1493     	BANKSEL	r0x101A
     0130 rrrr                      3-  109 m1      .banksel ram_address
     0131 01rr                      1- 1494     	MOVR	r0x101A,W
     0132 00rr                      1- 1495     	MOVAR	STK01
                                    1- 1496     	BANKSEL	r0x101C
     0133 rrrr                      3-  109 m1      .banksel ram_address
     0134 01rr                      1- 1497     	MOVR	r0x101C,W
     0135 00rr                      1- 1498     	MOVAR	STK00
     0136 2180                      1- 1499     	MOVIA	0x80
                                    1- 1500     	MCALL	__gptrget1
     0137 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1501     	BANKSEL	_displayDecade
     0138 rrrr                      3-  109 m1      .banksel ram_address
     0139 00rr                      1- 1502     	MOVAR	_displayDecade
                                    1- 1503     	MGOTO	_02474_DS_
     013A 3rrr                      3-   62 m1      LGOTO rom_address
     013B                           1- 1504     _02473_DS_:
                                    1- 1505     	.line	1373, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1506     	BANKSEL	_displayDecade
     013B rrrr                      3-  109 m1      .banksel ram_address
     013C 02rr                      1- 1507     	CLRR	_displayDecade
     013D                           1- 1508     _02474_DS_:
                                    1- 1509     	.line	1376, "main.c"; 	displayDigit = DispTable[j];
     013D 21rr                      1- 1510     	MOVIA	(_DispTable + 0)
                                    1- 1511     	BANKSEL	r0x101B
     013E rrrr                      3-  109 m1      .banksel ram_address
     013F 03rr                      1- 1512     	ADDAR	r0x101B,F
     0140 21rr                      1- 1513     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0141 2600                      1- 1514     	ADCIA	0x00
                                    1- 1515     	BANKSEL	r0x101A
     0142 rrrr                      3-  109 m1      .banksel ram_address
     0143 00rr                      1- 1516     	MOVAR	r0x101A
                                    1- 1517     	BANKSEL	r0x101B
     0144 rrrr                      3-  109 m1      .banksel ram_address
     0145 01rr                      1- 1518     	MOVR	r0x101B,W
     0146 00rr                      1- 1519     	MOVAR	STK01
                                    1- 1520     	BANKSEL	r0x101A
     0147 rrrr                      3-  109 m1      .banksel ram_address
     0148 01rr                      1- 1521     	MOVR	r0x101A,W
     0149 00rr                      1- 1522     	MOVAR	STK00
     014A 2180                      1- 1523     	MOVIA	0x80
                                    1- 1524     	MCALL	__gptrget1
     014B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1525     	BANKSEL	_displayDigit
     014C rrrr                      3-  109 m1      .banksel ram_address
     014D 00rr                      1- 1526     	MOVAR	_displayDigit
                                    1- 1527     	MGOTO	_02497_DS_
     014E 3rrr                      3-   62 m1      LGOTO rom_address
     014F                           1- 1528     _02478_DS_:
                                    1- 1529     	.line	1381, "main.c"; 	if (0 == displayData)
                                    1- 1530     	BANKSEL	_displayData
     014F rrrr                      3-  109 m1      .banksel ram_address
     0150 01rr                      1- 1531     	MOVR	_displayData,W
     0151 0903                      1- 1532     	BTRSS	STATUS,2
                                    1- 1533     	MGOTO	_02497_DS_
     0152 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1534     	.line	1383, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1535     	BANKSEL	_displayDigit
     0153 rrrr                      3-  109 m1      .banksel ram_address
     0154 02rr                      1- 1536     	CLRR	_displayDigit
                                    1- 1537     	MGOTO	_02497_DS_
     0155 3rrr                      3-   62 m1      LGOTO rom_address
     0156                           1- 1538     _02483_DS_:
                                    1- 1539     	.line	1389, "main.c"; 	displayHundred = DispTable[1];
     0156 21rr                      1- 1540     	MOVIA	(_DispTable + 1)
     0157 00rr                      1- 1541     	MOVAR	STK01
     0158 21rr                      1- 1542     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0159 00rr                      1- 1543     	MOVAR	STK00
     015A 2180                      1- 1544     	MOVIA	0x80
                                    1- 1545     	MCALL	__gptrget1
     015B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1546     	BANKSEL	_displayHundred
     015C rrrr                      3-  109 m1      .banksel ram_address
     015D 00rr                      1- 1547     	MOVAR	_displayHundred
                                    1- 1548     	.line	1390, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1549     	BANKSEL	_vFlag_0
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 0Arr                      1- 1550     	BTRSS	_vFlag_0,4
                                    1- 1551     	MGOTO	_00006_DS_
     0160 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1552     	.line	1392, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1553     	BANKSEL	_displayHundred
     0161 rrrr                      3-  109 m1      .banksel ram_address
     0162 19rr                      1- 1554     	BSR	_displayHundred,3
     0163                           1- 1555     _00006_DS_:
                                    1- 1556     	.line	1394, "main.c"; 	displayDecade = DispTable[0];
     0163 21rr                      1- 1557     	MOVIA	(_DispTable + 0)
     0164 00rr                      1- 1558     	MOVAR	STK01
     0165 21rr                      1- 1559     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0166 00rr                      1- 1560     	MOVAR	STK00
     0167 2180                      1- 1561     	MOVIA	0x80
                                    1- 1562     	MCALL	__gptrget1
     0168 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1563     	BANKSEL	r0x101A
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 00rr                      1- 1564     	MOVAR	r0x101A
                                    1- 1565     	BANKSEL	_displayDecade
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 00rr                      1- 1566     	MOVAR	_displayDecade
                                    1- 1567     	.line	1395, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1568     	BANKSEL	r0x101A
     016D rrrr                      3-  109 m1      .banksel ram_address
     016E 01rr                      1- 1569     	MOVR	r0x101A,W
                                    1- 1570     	BANKSEL	_displayDigit
     016F rrrr                      3-  109 m1      .banksel ram_address
     0170 00rr                      1- 1571     	MOVAR	_displayDigit
                                    1- 1572     	MGOTO	_02497_DS_
     0171 3rrr                      3-   62 m1      LGOTO rom_address
     0172                           1- 1573     _02486_DS_:
                                    1- 1574     	.line	1400, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1575     	BANKSEL	_displayHundred
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 02rr                      1- 1576     	CLRR	_displayHundred
                                    1- 1577     	.line	1401, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1578     	BANKSEL	_displayDecade
     0174 rrrr                      3-  109 m1      .banksel ram_address
     0175 02rr                      1- 1579     	CLRR	_displayDecade
                                    1- 1580     	.line	1402, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1581     	BANKSEL	_displayDigit
     0176 rrrr                      3-  109 m1      .banksel ram_address
     0177 02rr                      1- 1582     	CLRR	_displayDigit
     0178                           1- 1583     _02497_DS_:
                                    1- 1584     	.line	1405, "main.c"; 	}
                                    1- 1585     	RETURN	
     0178 0010                      3-   39 m1      ret
                                    1- 1586     ; exit point of _app_display_all
                                    1- 1588     ;***
                                    1- 1589     ;  pBlock Stats: dbName = C
                                    1- 1590     ;***
                                    1- 1591     ;has an exit
                                    1- 1592     ;functions called:
                                    1- 1593     ;   _ip55xs_read4Bytes
                                    1- 1594     ;   _ip55xs_read4Bytes
                                    1- 1595     ;1 compiler assigned register :
                                    1- 1596     ;   STK00
                                    1- 1597     ;; Starting pCode block
                                    1- 1598     .segment "code"; module=main, function=_get_cap
     0000                           1- 1600     _get_cap:
                                    1- 1601     ; 2 exit points
                                    1- 1602     	.line	1217, "main.c"; 	ip55xs_read4Bytes(0x10C0);
     0000 21C0                      1- 1603     	MOVIA	0xc0
     0001 00rr                      1- 1604     	MOVAR	STK00
     0002 2110                      1- 1605     	MOVIA	0x10
                                    1- 1606     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1607     	.line	1218, "main.c"; 	displayData = IP_DATA[0];
                                    1- 1608     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1609     	MOVR	_IP_DATA,W
                                    1- 1610     	BANKSEL	_displayData
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1611     	MOVAR	_displayData
                                    1- 1612     	.line	1222, "main.c"; 	}
                                    1- 1613     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 1614     ; exit point of _get_cap
                                    1- 1616     ;***
                                    1- 1617     ;  pBlock Stats: dbName = C
                                    1- 1618     ;***
                                    1- 1619     ;has an exit
                                    1- 1620     ;functions called:
                                    1- 1621     ;   _ip55xs_read4Bytes
                                    1- 1622     ;   _disable_breathing_mode
                                    1- 1623     ;   _enable_breathing_mode
                                    1- 1624     ;   _ip55xs_read4Bytes
                                    1- 1625     ;   _disable_breathing_mode
                                    1- 1626     ;   _enable_breathing_mode
                                    1- 1627     ;2 compiler assigned registers:
                                    1- 1628     ;   STK00
                                    1- 1629     ;   r0x1028
                                    1- 1630     ;; Starting pCode block
                                    1- 1631     .segment "code"; module=main, function=_is_chg_or_dischg
                                    1- 1633     ;local variable name mapping:
     0000                           1- 1635     _is_chg_or_dischg:
                                    1- 1636     ; 2 exit points
                                    1- 1637     	.line	1130, "main.c"; 	ip55xs_read4Bytes(0X1090);
     0000 2190                      1- 1638     	MOVIA	0x90
     0001 00rr                      1- 1639     	MOVAR	STK00
     0002 2110                      1- 1640     	MOVIA	0x10
                                    1- 1641     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1642     	.line	1138, "main.c"; 	bFlag_qc_ok = 0;
                                    1- 1643     	BANKSEL	_vFlag_0
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 1Err                      1- 1644     	BCR	_vFlag_0,4
                                    1- 1645     	.line	1140, "main.c"; 	if (bFlag_charger_on) //! 在充电状态下
                                    1- 1646     	BANKSEL	_vFlag_1
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1647     	BTRSS	_vFlag_1,5
                                    1- 1648     	MGOTO	_02431_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1649     	.line	1142, "main.c"; 	delaySleepTimer = CONST_DSL_SHORT; //! 防止充电状态MCU关5356
     0009 2103                      1- 1650     	MOVIA	0x03
                                    1- 1651     	BANKSEL	_delaySleepTimer
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1652     	MOVAR	_delaySleepTimer
                                    1- 1653     	.line	1144, "main.c"; 	reg_ip53xs = (IP_DATA[2] & BIT3); // bit19
                                    1- 1654     	BANKSEL	_IP_DATA
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1655     	MOVR	(_IP_DATA + 2),W
                                    1- 1656     	BANKSEL	r0x1028
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1657     	MOVAR	r0x1028
     0010 09rr                      1- 1658     	BTRSS	r0x1028,3
                                    1- 1659     	MGOTO	_02417_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1660     	.line	1149, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1661     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Frr                      1- 1662     	BCR	_vFlag_1,6
                                    1- 1663     	.line	1150, "main.c"; 	if (++counter > 5) // CNST_FILTER_COM
                                    1- 1664     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1665     	INCR	_is_chg_or_dischg_counter_65536_126,F
                                    1- 1666     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1667     ;;unsigned compare: left >= lit(0x6=6), size=1
     0016 2106                      1- 1668     	MOVIA	0x06
     0017 04rr                      1- 1669     	SUBAR	_is_chg_or_dischg_counter_65536_126,W
     0018 0803                      1- 1670     	BTRSS	STATUS,0
                                    1- 1671     	MGOTO	_02433_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1672     	.line	1152, "main.c"; 	counter = 0;
     001A 02rr                      1- 1673     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1674     	.line	1153, "main.c"; 	bFlag_charger_on = 0; //! 放电
                                    1- 1675     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 1Err                      1- 1676     	BCR	_vFlag_1,5
                                    1- 1677     	.line	1154, "main.c"; 	disable_breathing_mode();
                                    1- 1678     	MCALL	_disable_breathing_mode
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1679     	MGOTO	_02433_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1680     _02417_DS_:
                                    1- 1681     	.line	1159, "main.c"; 	counter = 0;
                                    1- 1682     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1683     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1684     	.line	1161, "main.c"; 	if (IP_DATA[1] & BIT7)
                                    1- 1685     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1686     	MOVR	(_IP_DATA + 1),W
                                    1- 1687     	BANKSEL	r0x1028
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1688     	MOVAR	r0x1028
     0025 0Brr                      1- 1689     	BTRSS	r0x1028,7
                                    1- 1690     	MGOTO	_00007_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1691     	.line	1163, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1692     	BANKSEL	_vFlag_0
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 1Arr                      1- 1693     	BSR	_vFlag_0,4
     0029                           1- 1694     _00007_DS_:
                                    1- 1695     	.line	1165, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1696     	BANKSEL	_vFlag_1
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 1Brr                      1- 1697     	BSR	_vFlag_1,6
                                    1- 1698     	MGOTO	_02433_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 1699     _02431_DS_:
                                    1- 1700     	.line	1173, "main.c"; 	reg_ip53xs = (IP_DATA[1] & BIT3); // bit11
                                    1- 1701     	BANKSEL	_IP_DATA
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1702     	MOVR	(_IP_DATA + 1),W
                                    1- 1703     	BANKSEL	r0x1028
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1704     	MOVAR	r0x1028
     0030 09rr                      1- 1705     	BTRSS	r0x1028,3
                                    1- 1706     	MGOTO	_02428_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1707     	.line	1176, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1708     	BANKSEL	_vFlag_1
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 1Brr                      1- 1709     	BSR	_vFlag_1,6
                                    1- 1710     	.line	1177, "main.c"; 	if (++counter > CNST_FILTER_COM) // 2次
                                    1- 1711     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 05rr                      1- 1712     	INCR	_is_chg_or_dischg_counter_65536_126,F
                                    1- 1713     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1714     ;;unsigned compare: left >= lit(0x3=3), size=1
     0036 2103                      1- 1715     	MOVIA	0x03
     0037 04rr                      1- 1716     	SUBAR	_is_chg_or_dischg_counter_65536_126,W
     0038 0803                      1- 1717     	BTRSS	STATUS,0
                                    1- 1718     	MGOTO	_02433_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1719     	.line	1179, "main.c"; 	counter = 0;
     003A 02rr                      1- 1720     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1721     	.line	1180, "main.c"; 	bFlag_charger_on = 1; //! 充电
                                    1- 1722     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Arr                      1- 1723     	BSR	_vFlag_1,5
                                    1- 1724     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1725     	.line	1181, "main.c"; 	if (displayData < 100)
     003D 2164                      1- 1726     	MOVIA	0x64
                                    1- 1727     	BANKSEL	_displayData
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 04rr                      1- 1728     	SUBAR	_displayData,W
     0040 0803                      1- 1729     	BTRSS	STATUS,0
                                    1- 1730     	.line	1183, "main.c"; 	enable_breathing_mode();
                                    1- 1731     	MCALL	_enable_breathing_mode
     0041 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1732     	.line	1185, "main.c"; 	forceDispTimer = 10;
     0042 210A                      1- 1733     	MOVIA	0x0a
                                    1- 1734     	BANKSEL	_forceDispTimer
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1- 1735     	MOVAR	_forceDispTimer
                                    1- 1736     	MGOTO	_02433_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1- 1737     _02428_DS_:
                                    1- 1738     	.line	1190, "main.c"; 	counter = 0;
                                    1- 1739     	BANKSEL	_is_chg_or_dischg_counter_65536_126
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 02rr                      1- 1740     	CLRR	_is_chg_or_dischg_counter_65536_126
                                    1- 1741     	.line	1191, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1742     	BANKSEL	_vFlag_1
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 1Frr                      1- 1743     	BCR	_vFlag_1,6
                                    1- 1744     	.line	1192, "main.c"; 	if (IP_DATA[3] & BIT3)
                                    1- 1745     	BANKSEL	_IP_DATA
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1- 1746     	MOVR	(_IP_DATA + 3),W
                                    1- 1747     	BANKSEL	r0x1028
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 00rr                      1- 1748     	MOVAR	r0x1028
     004E 09rr                      1- 1749     	BTRSS	r0x1028,3
                                    1- 1750     	MGOTO	_00008_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1751     	.line	1194, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1752     	BANKSEL	_vFlag_0
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 1Arr                      1- 1753     	BSR	_vFlag_0,4
     0052                           1- 1754     _00008_DS_:
                                    1- 1755     	.line	1197, "main.c"; 	if ((IP_DATA[2] & BIT3)) // bit19
                                    1- 1756     	BANKSEL	_IP_DATA
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1757     	MOVR	(_IP_DATA + 2),W
                                    1- 1758     	BANKSEL	r0x1028
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 00rr                      1- 1759     	MOVAR	r0x1028
     0056 09rr                      1- 1760     	BTRSS	r0x1028,3
                                    1- 1761     	MGOTO	_02433_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1762     	.line	1199, "main.c"; 	displayTimer = CONST_TIMER_DISP_XSEC; //! 电量==0的时候 闪烁5秒后熄灭,反之一直显示
     0058 210A                      1- 1763     	MOVIA	0x0a
                                    1- 1764     	BANKSEL	_displayTimer
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 00rr                      1- 1765     	MOVAR	_displayTimer
     005B                           1- 1766     _02433_DS_:
                                    1- 1767     	.line	1213, "main.c"; 	}
                                    1- 1768     	RETURN	
     005B 0010                      3-   39 m1      ret
                                    1- 1769     ; exit point of _is_chg_or_dischg
                                    1- 1771     ;***
                                    1- 1772     ;  pBlock Stats: dbName = C
                                    1- 1773     ;***
                                    1- 1774     ;has an exit
                                    1- 1775     ;functions called:
                                    1- 1776     ;   _ip55xs_read4Bytes
                                    1- 1777     ;   _ip55xs_write4Bytes
                                    1- 1778     ;   _ip55xs_read4Bytes
                                    1- 1779     ;   _ip55xs_write4Bytes
                                    1- 1780     ;7 compiler assigned registers:
                                    1- 1781     ;   STK00
                                    1- 1782     ;   r0x102A
                                    1- 1783     ;   r0x102B
                                    1- 1784     ;   r0x102C
                                    1- 1785     ;   STK03
                                    1- 1786     ;   STK02
                                    1- 1787     ;   STK01
                                    1- 1788     ;; Starting pCode block
                                    1- 1789     .segment "code"; module=main, function=_get_p_ext_int_status
                                    1- 1791     ;local variable name mapping:
     0000                           1- 1793     _get_p_ext_int_status:
                                    1- 1794     ; 2 exit points
                                    1- 1795     	.line	1055, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1- 1796     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1- 1797     	BTRSS	_vFlag_1,3
                                    1- 1798     	MGOTO	_02405_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1799     	.line	1057, "main.c"; 	if (!P_I2C_INT)
     0003 0Drr                      1- 1800     	BTRSC	_PORTAbits,2
                                    1- 1801     	MGOTO	_02397_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1802     	.line	1059, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1803     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 05rr                      1- 1804     	INCR	_get_p_ext_int_status_counter_65536_116,F
                                    1- 1805     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1806     ;;unsigned compare: left >= lit(0x20=32), size=1
     0007 2120                      1- 1807     	MOVIA	0x20
     0008 04rr                      1- 1808     	SUBAR	_get_p_ext_int_status_counter_65536_116,W
     0009 0803                      1- 1809     	BTRSS	STATUS,0
                                    1- 1810     	MGOTO	_02407_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1811     	.line	1061, "main.c"; 	counter = 0;
     000B 02rr                      1- 1812     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1813     	.line	1062, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1814     	BANKSEL	_vFlag_1
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Drr                      1- 1815     	BCR	_vFlag_1,3
                                    1- 1816     	.line	1063, "main.c"; 	bFlag_charger_on = 0; //! 放电
     000E 1Err                      1- 1817     	BCR	_vFlag_1,5
                                    1- 1818     	.line	1063, "main.c"; 	// io_uart_tx(0x22);
                                    1- 1819     	MGOTO	_02407_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1- 1820     _02397_DS_:
                                    1- 1821     	.line	1079, "main.c"; 	counter = 0;
                                    1- 1822     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 02rr                      1- 1823     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1824     	MGOTO	_02407_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
     0013                           1- 1825     _02405_DS_:
                                    1- 1826     	.line	1084, "main.c"; 	if (P_I2C_INT)
     0013 09rr                      1- 1827     	BTRSS	_PORTAbits,2
                                    1- 1828     	MGOTO	_02402_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1829     	.line	1086, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1830     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 05rr                      1- 1831     	INCR	_get_p_ext_int_status_counter_65536_116,F
                                    1- 1832     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1833     ;;unsigned compare: left >= lit(0x20=32), size=1
     0017 2120                      1- 1834     	MOVIA	0x20
     0018 04rr                      1- 1835     	SUBAR	_get_p_ext_int_status_counter_65536_116,W
     0019 0803                      1- 1836     	BTRSS	STATUS,0
                                    1- 1837     	MGOTO	_02407_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1838     	.line	1088, "main.c"; 	counter = 0;
     001B 02rr                      1- 1839     	CLRR	_get_p_ext_int_status_counter_65536_116
                                    1- 1840     	.line	1089, "main.c"; 	bFlag_p_ext_int_is_high = 1;
                                    1- 1841     	BANKSEL	_vFlag_1
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 19rr                      1- 1842     	BSR	_vFlag_1,3
                                    1- 1843     	.line	1092, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     001E 21C0                      1- 1844     	MOVIA	0xc0
     001F 00rr                      1- 1845     	MOVAR	STK00
     0020 2100                      1- 1846     	MOVIA	0x00
                                    1- 1847     	MCALL	_ip55xs_read4Bytes
     0021 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1848     	.line	1094, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1849     	BANKSEL	_IP_DATA
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1- 1850     	MOVR	(_IP_DATA + 3),W
                                    1- 1851     	BANKSEL	r0x102A
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 1852     	MOVAR	r0x102A
     0026 1Drr                      1- 1853     	BCR	r0x102A,2
     0027 01rr                      1- 1854     	MOVR	r0x102A,W
                                    1- 1855     	BANKSEL	_IP_DATA
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 00rr                      1- 1856     	MOVAR	(_IP_DATA + 3)
                                    1- 1857     	.line	1095, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     002A 01rr                      1- 1858     	MOVR	(_IP_DATA + 3),W
                                    1- 1859     	BANKSEL	r0x102A
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 00rr                      1- 1860     	MOVAR	r0x102A
     002D 1Crr                      1- 1861     	BCR	r0x102A,0
     002E 01rr                      1- 1862     	MOVR	r0x102A,W
                                    1- 1863     	BANKSEL	_IP_DATA
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1- 1864     	MOVAR	(_IP_DATA + 3)
                                    1- 1865     	.line	1096, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0031 21rr                      1- 1866     	MOVIA	(_IP_DATA + 0)
                                    1- 1867     	BANKSEL	r0x102A
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1- 1868     	MOVAR	r0x102A
     0034 00rr                      1- 1869     	MOVAR	STK03
     0035 2100                      1- 1870     	MOVIA	0x00
     0036 00rr                      1- 1871     	MOVAR	STK02
     0037 00rr                      1- 1872     	MOVAR	STK01
     0038 21C0                      1- 1873     	MOVIA	0xc0
     0039 00rr                      1- 1874     	MOVAR	STK00
     003A 2100                      1- 1875     	MOVIA	0x00
                                    1- 1876     	MCALL	_ip55xs_write4Bytes
     003B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1877     	.line	1097, "main.c"; 	delaySleepTimer = CNST_TIMER_DLY_SLP;
     003C 2114                      1- 1878     	MOVIA	0x14
                                    1- 1879     	BANKSEL	_delaySleepTimer
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 1880     	MOVAR	_delaySleepTimer
                                    1- 1881     	MGOTO	_02407_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 1882     _02402_DS_:
                                    1- 1883     	.line	1103, "main.c"; 	counter = 0;
                                    1- 1884     	BANKSEL	_get_p_ext_int_status_counter_65536_116
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 02rr                      1- 1885     	CLRR	_get_p_ext_int_status_counter_65536_116
     0042                           1- 1886     _02407_DS_:
                                    1- 1887     	.line	1106, "main.c"; 	}
                                    1- 1888     	RETURN	
     0042 0010                      3-   39 m1      ret
                                    1- 1889     ; exit point of _get_p_ext_int_status
                                    1- 1891     ;***
                                    1- 1892     ;  pBlock Stats: dbName = C
                                    1- 1893     ;***
                                    1- 1894     ;has an exit
                                    1- 1895     ;functions called:
                                    1- 1896     ;   _ip55xs_read4Bytes
                                    1- 1897     ;   _ip55xs_write4Bytes
                                    1- 1898     ;   _ip55xs_read4Bytes
                                    1- 1899     ;   _ip55xs_write4Bytes
                                    1- 1900     ;7 compiler assigned registers:
                                    1- 1901     ;   STK00
                                    1- 1902     ;   r0x102E
                                    1- 1903     ;   r0x102F
                                    1- 1904     ;   r0x1030
                                    1- 1905     ;   STK03
                                    1- 1906     ;   STK02
                                    1- 1907     ;   STK01
                                    1- 1908     ;; Starting pCode block
                                    1- 1909     .segment "code"; module=main, function=_init_ip53xs
     0000                           1- 1911     _init_ip53xs:
                                    1- 1912     ; 2 exit points
                                    1- 1913     	.line	1043, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     0000 21C0                      1- 1914     	MOVIA	0xc0
     0001 00rr                      1- 1915     	MOVAR	STK00
     0002 2100                      1- 1916     	MOVIA	0x00
                                    1- 1917     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1918     	.line	1045, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1919     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1920     	MOVR	(_IP_DATA + 3),W
                                    1- 1921     	BANKSEL	r0x102E
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1922     	MOVAR	r0x102E
     0008 1Drr                      1- 1923     	BCR	r0x102E,2
     0009 01rr                      1- 1924     	MOVR	r0x102E,W
                                    1- 1925     	BANKSEL	_IP_DATA
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1926     	MOVAR	(_IP_DATA + 3)
                                    1- 1927     	.line	1046, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     000C 01rr                      1- 1928     	MOVR	(_IP_DATA + 3),W
                                    1- 1929     	BANKSEL	r0x102E
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1930     	MOVAR	r0x102E
     000F 1Crr                      1- 1931     	BCR	r0x102E,0
     0010 01rr                      1- 1932     	MOVR	r0x102E,W
                                    1- 1933     	BANKSEL	_IP_DATA
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1934     	MOVAR	(_IP_DATA + 3)
                                    1- 1935     	.line	1047, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0013 21rr                      1- 1936     	MOVIA	(_IP_DATA + 0)
                                    1- 1937     	BANKSEL	r0x102E
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1938     	MOVAR	r0x102E
     0016 00rr                      1- 1939     	MOVAR	STK03
     0017 2100                      1- 1940     	MOVIA	0x00
     0018 00rr                      1- 1941     	MOVAR	STK02
     0019 00rr                      1- 1942     	MOVAR	STK01
     001A 21C0                      1- 1943     	MOVIA	0xc0
     001B 00rr                      1- 1944     	MOVAR	STK00
     001C 2100                      1- 1945     	MOVIA	0x00
                                    1- 1946     	MCALL	_ip55xs_write4Bytes
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1947     	.line	1048, "main.c"; 	}
                                    1- 1948     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 1949     ; exit point of _init_ip53xs
                                    1- 1951     ;***
                                    1- 1952     ;  pBlock Stats: dbName = C
                                    1- 1953     ;***
                                    1- 1954     ;has an exit
                                    1- 1955     ;functions called:
                                    1- 1956     ;   _ip53xs_writeByte
                                    1- 1957     ;   _ip53xs_writeByte
                                    1- 1958     ;   _ip53xs_writeByte
                                    1- 1959     ;   _ip53xs_writeByte
                                    1- 1960     ;   _ip53xs_readByte
                                    1- 1961     ;   _ip53xs_readByte
                                    1- 1962     ;   _ip53xs_readByte
                                    1- 1963     ;   _ip53xs_readByte
                                    1- 1964     ;   _ip53xs_readByte
                                    1- 1965     ;   _ip53xs_writeByte
                                    1- 1966     ;   _ip53xs_writeByte
                                    1- 1967     ;   _ip53xs_writeByte
                                    1- 1968     ;   _ip53xs_writeByte
                                    1- 1969     ;   _ip53xs_writeByte
                                    1- 1970     ;   _ip53xs_writeByte
                                    1- 1971     ;   _ip53xs_writeByte
                                    1- 1972     ;   _ip53xs_writeByte
                                    1- 1973     ;   _ip53xs_readByte
                                    1- 1974     ;   _ip53xs_readByte
                                    1- 1975     ;   _ip53xs_readByte
                                    1- 1976     ;   _ip53xs_readByte
                                    1- 1977     ;   _ip53xs_readByte
                                    1- 1978     ;   _ip53xs_writeByte
                                    1- 1979     ;   _ip53xs_writeByte
                                    1- 1980     ;   _ip53xs_writeByte
                                    1- 1981     ;   _ip53xs_writeByte
                                    1- 1982     ;7 compiler assigned registers:
                                    1- 1983     ;   r0x1023
                                    1- 1984     ;   STK00
                                    1- 1985     ;   r0x1024
                                    1- 1986     ;   r0x1025
                                    1- 1987     ;   STK01
                                    1- 1988     ;   r0x1026
                                    1- 1989     ;   r0x1027
                                    1- 1990     ;; Starting pCode block
                                    1- 1991     .segment "code"; module=main, function=_ip55xs_read4Bytes
                                    1- 1993     ;local variable name mapping:
     0000                           1- 1997     _ip55xs_read4Bytes:
                                    1- 1998     ; 2 exit points
                                    1- 1999     	.line	996, "main.c"; 	BOOL ip55xs_read4Bytes(/*unsigned char deviceAddr,*/ unsigned int regAddr) //(unsigned char regAddr)
                                    1- 2000     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2001     	MOVAR	r0x1023
     0002 01rr                      1- 2002     	MOVR	STK00,W
                                    1- 2003     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2004     	MOVAR	r0x1024
                                    1- 2005     	.line	1002, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2006     	BANKSEL	r0x1025
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 2007     	MOVAR	r0x1025
     0007 00rr                      1- 2008     	MOVAR	STK01
     0008 2110                      1- 2009     	MOVIA	0x10
     0009 00rr                      1- 2010     	MOVAR	STK00
     000A 21EA                      1- 2011     	MOVIA	0xea
                                    1- 2012     	MCALL	_ip53xs_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2013     	.line	1003, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2014     	BANKSEL	r0x1023
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 2015     	MOVR	r0x1023,W
                                    1- 2016     	BANKSEL	r0x1026
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2017     	MOVAR	r0x1026
                                    1- 2018     	BANKSEL	r0x1024
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 2019     	MOVAR	r0x1024
     0012 00rr                      1- 2020     	MOVAR	STK01
     0013 2111                      1- 2021     	MOVIA	0x11
     0014 00rr                      1- 2022     	MOVAR	STK00
     0015 21EA                      1- 2023     	MOVIA	0xea
                                    1- 2024     	MCALL	_ip53xs_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2025     	.line	1004, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x11);
     0017 2111                      1- 2026     	MOVIA	0x11
     0018 00rr                      1- 2027     	MOVAR	STK01
     0019 2112                      1- 2028     	MOVIA	0x12
     001A 00rr                      1- 2029     	MOVAR	STK00
     001B 21EA                      1- 2030     	MOVIA	0xea
                                    1- 2031     	MCALL	_ip53xs_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2032     	.line	1005, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x11);
     001D 2111                      1- 2033     	MOVIA	0x11
     001E 00rr                      1- 2034     	MOVAR	STK01
     001F 2113                      1- 2035     	MOVIA	0x13
     0020 00rr                      1- 2036     	MOVAR	STK00
     0021 21EA                      1- 2037     	MOVIA	0xea
                                    1- 2038     	MCALL	_ip53xs_writeByte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2039     	.line	1009, "main.c"; 	do
     0023 2164                      1- 2040     	MOVIA	0x64
                                    1- 2041     	BANKSEL	r0x1023
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2042     	MOVAR	r0x1023
     0026                           1- 2043     _02382_DS_:
                                    1- 2044     	.line	1011, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0026 2100                      1- 2045     	MOVIA	0x00
     0027 00rr                      1- 2046     	MOVAR	STK00
     0028 21EA                      1- 2047     	MOVIA	0xea
                                    1- 2048     	MCALL	_ip53xs_readByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2049     	BANKSEL	r0x1026
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 2050     	MOVAR	r0x1026
                                    1- 2051     	.line	1012, "main.c"; 	if (0 == timer_out)
                                    1- 2052     	BANKSEL	r0x1023
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 2053     	MOVR	r0x1023,W
     002E 0903                      1- 2054     	BTRSS	STATUS,2
                                    1- 2055     	MGOTO	_02380_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2056     	.line	1014, "main.c"; 	return FALSE;
     0030 2100                      1- 2057     	MOVIA	0x00
                                    1- 2058     	MGOTO	_02385_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 2059     _02380_DS_:
                                    1- 2060     	.line	1019, "main.c"; 	timer_out--;
                                    1- 2061     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 06rr                      1- 2062     	DECR	r0x1023,F
                                    1- 2063     	.line	1021, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2064     	BANKSEL	r0x1026
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 01rr                      1- 2065     	MOVR	r0x1026,W
     0036 24AA                      1- 2066     	XORIA	0xaa
     0037 0903                      1- 2067     	BTRSS	STATUS,2
                                    1- 2068     	MGOTO	_02382_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2069     	.line	1022, "main.c"; 	IP_DATA[0] = ip53xs_readByte(0xEA, 0x0C);
     0039 210C                      1- 2070     	MOVIA	0x0c
     003A 00rr                      1- 2071     	MOVAR	STK00
     003B 21EA                      1- 2072     	MOVIA	0xea
                                    1- 2073     	MCALL	_ip53xs_readByte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2074     	BANKSEL	r0x1023
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 2075     	MOVAR	r0x1023
                                    1- 2076     	BANKSEL	_IP_DATA
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 2077     	MOVAR	(_IP_DATA + 0)
                                    1- 2078     	.line	1023, "main.c"; 	IP_DATA[1] = ip53xs_readByte(0xEA, 0x0D);
     0041 210D                      1- 2079     	MOVIA	0x0d
     0042 00rr                      1- 2080     	MOVAR	STK00
     0043 21EA                      1- 2081     	MOVIA	0xea
                                    1- 2082     	MCALL	_ip53xs_readByte
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2083     	BANKSEL	r0x1023
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 2084     	MOVAR	r0x1023
                                    1- 2085     	BANKSEL	_IP_DATA
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2086     	MOVAR	(_IP_DATA + 1)
                                    1- 2087     	.line	1024, "main.c"; 	IP_DATA[2] = ip53xs_readByte(0xEA, 0x0E);
     0049 210E                      1- 2088     	MOVIA	0x0e
     004A 00rr                      1- 2089     	MOVAR	STK00
     004B 21EA                      1- 2090     	MOVIA	0xea
                                    1- 2091     	MCALL	_ip53xs_readByte
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2092     	BANKSEL	r0x1023
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 2093     	MOVAR	r0x1023
                                    1- 2094     	BANKSEL	_IP_DATA
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2095     	MOVAR	(_IP_DATA + 2)
                                    1- 2096     	.line	1025, "main.c"; 	IP_DATA[3] = ip53xs_readByte(0xEA, 0x0F);
     0051 210F                      1- 2097     	MOVIA	0x0f
     0052 00rr                      1- 2098     	MOVAR	STK00
     0053 21EA                      1- 2099     	MOVIA	0xea
                                    1- 2100     	MCALL	_ip53xs_readByte
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2101     	BANKSEL	r0x1023
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 2102     	MOVAR	r0x1023
                                    1- 2103     	BANKSEL	_IP_DATA
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2104     	MOVAR	(_IP_DATA + 3)
                                    1- 2105     	.line	1026, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2106     	BANKSEL	r0x1025
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1- 2107     	MOVR	r0x1025,W
     005B 00rr                      1- 2108     	MOVAR	STK01
     005C 2110                      1- 2109     	MOVIA	0x10
     005D 00rr                      1- 2110     	MOVAR	STK00
     005E 21EA                      1- 2111     	MOVIA	0xea
                                    1- 2112     	MCALL	_ip53xs_writeByte
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2113     	.line	1027, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2114     	BANKSEL	r0x1024
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2115     	MOVR	r0x1024,W
     0062 00rr                      1- 2116     	MOVAR	STK01
     0063 2111                      1- 2117     	MOVIA	0x11
     0064 00rr                      1- 2118     	MOVAR	STK00
     0065 21EA                      1- 2119     	MOVIA	0xea
                                    1- 2120     	MCALL	_ip53xs_writeByte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2121     	.line	1028, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x22);
     0067 2122                      1- 2122     	MOVIA	0x22
     0068 00rr                      1- 2123     	MOVAR	STK01
     0069 2112                      1- 2124     	MOVIA	0x12
     006A 00rr                      1- 2125     	MOVAR	STK00
     006B 21EA                      1- 2126     	MOVIA	0xea
                                    1- 2127     	MCALL	_ip53xs_writeByte
     006C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2128     	.line	1029, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x22);
     006D 2122                      1- 2129     	MOVIA	0x22
     006E 00rr                      1- 2130     	MOVAR	STK01
     006F 2113                      1- 2131     	MOVIA	0x13
     0070 00rr                      1- 2132     	MOVAR	STK00
     0071 21EA                      1- 2133     	MOVIA	0xea
                                    1- 2134     	MCALL	_ip53xs_writeByte
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2135     	.line	1030, "main.c"; 	return TRUE;
     0073 2101                      1- 2136     	MOVIA	0x01
     0074                           1- 2137     _02385_DS_:
                                    1- 2138     	.line	1031, "main.c"; 	}
                                    1- 2139     	RETURN	
     0074 0010                      3-   39 m1      ret
                                    1- 2140     ; exit point of _ip55xs_read4Bytes
                                    1- 2142     ;***
                                    1- 2143     ;  pBlock Stats: dbName = C
                                    1- 2144     ;***
                                    1- 2145     ;has an exit
                                    1- 2146     ;functions called:
                                    1- 2147     ;   _ip53xs_writeByte
                                    1- 2148     ;   _ip53xs_writeByte
                                    1- 2149     ;   _ip53xs_writeByte
                                    1- 2150     ;   _ip53xs_writeByte
                                    1- 2151     ;   _ip53xs_readByte
                                    1- 2152     ;   __gptrget1
                                    1- 2153     ;   _ip53xs_writeByte
                                    1- 2154     ;   __gptrget1
                                    1- 2155     ;   _ip53xs_writeByte
                                    1- 2156     ;   _ip53xs_writeByte
                                    1- 2157     ;   _ip53xs_writeByte
                                    1- 2158     ;   _ip53xs_readByte
                                    1- 2159     ;   __gptrget1
                                    1- 2160     ;   _ip53xs_writeByte
                                    1- 2161     ;   __gptrget1
                                    1- 2162     ;   _ip53xs_writeByte
                                    1- 2163     ;   _ip53xs_writeByte
                                    1- 2164     ;   _ip53xs_writeByte
                                    1- 2165     ;   _ip53xs_readByte
                                    1- 2166     ;   _ip53xs_writeByte
                                    1- 2167     ;   _ip53xs_writeByte
                                    1- 2168     ;   _ip53xs_writeByte
                                    1- 2169     ;   _ip53xs_writeByte
                                    1- 2170     ;   _ip53xs_readByte
                                    1- 2171     ;   __gptrget1
                                    1- 2172     ;   _ip53xs_writeByte
                                    1- 2173     ;   __gptrget1
                                    1- 2174     ;   _ip53xs_writeByte
                                    1- 2175     ;   _ip53xs_writeByte
                                    1- 2176     ;   _ip53xs_writeByte
                                    1- 2177     ;   _ip53xs_readByte
                                    1- 2178     ;   __gptrget1
                                    1- 2179     ;   _ip53xs_writeByte
                                    1- 2180     ;   __gptrget1
                                    1- 2181     ;   _ip53xs_writeByte
                                    1- 2182     ;   _ip53xs_writeByte
                                    1- 2183     ;   _ip53xs_writeByte
                                    1- 2184     ;   _ip53xs_readByte
                                    1- 2185     ;11 compiler assigned registers:
                                    1- 2186     ;   r0x1023
                                    1- 2187     ;   STK00
                                    1- 2188     ;   r0x1024
                                    1- 2189     ;   STK01
                                    1- 2190     ;   r0x1025
                                    1- 2191     ;   STK02
                                    1- 2192     ;   r0x1026
                                    1- 2193     ;   STK03
                                    1- 2194     ;   r0x1027
                                    1- 2195     ;   r0x1028
                                    1- 2196     ;   r0x1029
                                    1- 2197     ;; Starting pCode block
                                    1- 2198     .segment "code"; module=main, function=_ip55xs_write4Bytes
                                    1- 2200     ;local variable name mapping:
     0000                           1- 2205     _ip55xs_write4Bytes:
                                    1- 2206     ; 2 exit points
                                    1- 2207     	.line	927, "main.c"; 	BOOL ip55xs_write4Bytes(unsigned int regAddr, unsigned char *pdata)
                                    1- 2208     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2209     	MOVAR	r0x1023
     0002 01rr                      1- 2210     	MOVR	STK00,W
                                    1- 2211     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2212     	MOVAR	r0x1024
     0005 01rr                      1- 2213     	MOVR	STK01,W
                                    1- 2214     	BANKSEL	r0x1025
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2215     	MOVAR	r0x1025
     0008 01rr                      1- 2216     	MOVR	STK02,W
                                    1- 2217     	BANKSEL	r0x1026
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 2218     	MOVAR	r0x1026
     000B 01rr                      1- 2219     	MOVR	STK03,W
                                    1- 2220     	BANKSEL	r0x1027
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 2221     	MOVAR	r0x1027
                                    1- 2222     	.line	932, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2223     	BANKSEL	r0x1024
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 2224     	MOVR	r0x1024,W
                                    1- 2225     ;;100	MOVAR	r0x1028
     0010 00rr                      1- 2226     	MOVAR	STK01
     0011 2110                      1- 2227     	MOVIA	0x10
     0012 00rr                      1- 2228     	MOVAR	STK00
     0013 21EA                      1- 2229     	MOVIA	0xea
                                    1- 2230     	MCALL	_ip53xs_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2231     	.line	933, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2232     	BANKSEL	r0x1023
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2233     	MOVR	r0x1023,W
                                    1- 2234     ;;99	MOVAR	r0x1028
                                    1- 2235     	BANKSEL	r0x1024
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 2236     	MOVAR	r0x1024
     0019 00rr                      1- 2237     	MOVAR	STK01
     001A 2111                      1- 2238     	MOVIA	0x11
     001B 00rr                      1- 2239     	MOVAR	STK00
     001C 21EA                      1- 2240     	MOVIA	0xea
                                    1- 2241     	MCALL	_ip53xs_writeByte
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2242     	.line	934, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x55);
     001E 2155                      1- 2243     	MOVIA	0x55
     001F 00rr                      1- 2244     	MOVAR	STK01
     0020 2112                      1- 2245     	MOVIA	0x12
     0021 00rr                      1- 2246     	MOVAR	STK00
     0022 21EA                      1- 2247     	MOVIA	0xea
                                    1- 2248     	MCALL	_ip53xs_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2249     	.line	935, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x55);
     0024 2155                      1- 2250     	MOVIA	0x55
     0025 00rr                      1- 2251     	MOVAR	STK01
     0026 2113                      1- 2252     	MOVIA	0x13
     0027 00rr                      1- 2253     	MOVAR	STK00
     0028 21EA                      1- 2254     	MOVIA	0xea
                                    1- 2255     	MCALL	_ip53xs_writeByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2256     	.line	937, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     002A 2100                      1- 2257     	MOVIA	0x00
     002B 00rr                      1- 2258     	MOVAR	STK00
     002C 21EA                      1- 2259     	MOVIA	0xea
                                    1- 2260     	MCALL	_ip53xs_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2261     	BANKSEL	r0x1024
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2262     	MOVAR	r0x1024
                                    1- 2263     	.line	939, "main.c"; 	do
     0030 2164                      1- 2264     	MOVIA	0x64
                                    1- 2265     	BANKSEL	r0x1023
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 2266     	MOVAR	r0x1023
     0033                           1- 2267     _02359_DS_:
                                    1- 2268     	.line	941, "main.c"; 	if (timer_out)
                                    1- 2269     	BANKSEL	r0x1023
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 2270     	MOVR	r0x1023,W
     0035 0D03                      1- 2271     	BTRSC	STATUS,2
                                    1- 2272     	MGOTO	_02357_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2273     	.line	943, "main.c"; 	timer_out--;
     0037 06rr                      1- 2274     	DECR	r0x1023,F
                                    1- 2275     	MGOTO	_02360_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1- 2276     _02357_DS_:
                                    1- 2277     	.line	947, "main.c"; 	return FALSE;
     0039 2100                      1- 2278     	MOVIA	0x00
                                    1- 2279     	MGOTO	_02374_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 2280     _02360_DS_:
                                    1- 2281     	.line	949, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2282     	BANKSEL	r0x1024
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 2283     	MOVR	r0x1024,W
     003D 24AA                      1- 2284     	XORIA	0xaa
     003E 0903                      1- 2285     	BTRSS	STATUS,2
                                    1- 2286     	MGOTO	_02359_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2287     	.line	950, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA0
                                    1- 2288     	BANKSEL	r0x1027
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 2289     	MOVR	r0x1027,W
     0042 00rr                      1- 2290     	MOVAR	STK01
                                    1- 2291     	BANKSEL	r0x1026
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 2292     	MOVR	r0x1026,W
     0045 00rr                      1- 2293     	MOVAR	STK00
                                    1- 2294     	BANKSEL	r0x1025
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 2295     	MOVR	r0x1025,W
                                    1- 2296     	MCALL	__gptrget1
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2297     	BANKSEL	r0x1024
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 2298     	MOVAR	r0x1024
     004B 00rr                      1- 2299     	MOVAR	STK01
     004C 2110                      1- 2300     	MOVIA	0x10
     004D 00rr                      1- 2301     	MOVAR	STK00
     004E 21EA                      1- 2302     	MOVIA	0xea
                                    1- 2303     	MCALL	_ip53xs_writeByte
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2304     	.line	951, "main.c"; 	pdata++;
                                    1- 2305     	BANKSEL	r0x1027
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 05rr                      1- 2306     	INCR	r0x1027,F
     0052 0903                      1- 2307     	BTRSS	STATUS,2
                                    1- 2308     	MGOTO	_00009_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2309     	BANKSEL	r0x1026
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 05rr                      1- 2310     	INCR	r0x1026,F
     0056                           1- 2311     _00009_DS_:
     0056 0903                      1- 2312     	BTRSS	STATUS,2
                                    1- 2313     	MGOTO	_00010_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2314     	BANKSEL	r0x1025
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 05rr                      1- 2315     	INCR	r0x1025,F
     005A                           1- 2316     _00010_DS_:
                                    1- 2317     	.line	952, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA1
                                    1- 2318     	BANKSEL	r0x1027
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1- 2319     	MOVR	r0x1027,W
     005C 00rr                      1- 2320     	MOVAR	STK01
                                    1- 2321     	BANKSEL	r0x1026
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1- 2322     	MOVR	r0x1026,W
     005F 00rr                      1- 2323     	MOVAR	STK00
                                    1- 2324     	BANKSEL	r0x1025
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2325     	MOVR	r0x1025,W
                                    1- 2326     	MCALL	__gptrget1
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2327     	BANKSEL	r0x1024
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 00rr                      1- 2328     	MOVAR	r0x1024
     0065 00rr                      1- 2329     	MOVAR	STK01
     0066 2111                      1- 2330     	MOVIA	0x11
     0067 00rr                      1- 2331     	MOVAR	STK00
     0068 21EA                      1- 2332     	MOVIA	0xea
                                    1- 2333     	MCALL	_ip53xs_writeByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2334     	.line	954, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x66);
     006A 2166                      1- 2335     	MOVIA	0x66
     006B 00rr                      1- 2336     	MOVAR	STK01
     006C 2112                      1- 2337     	MOVIA	0x12
     006D 00rr                      1- 2338     	MOVAR	STK00
     006E 21EA                      1- 2339     	MOVIA	0xea
                                    1- 2340     	MCALL	_ip53xs_writeByte
     006F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2341     	.line	956, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x66);
     0070 2166                      1- 2342     	MOVIA	0x66
     0071 00rr                      1- 2343     	MOVAR	STK01
     0072 2113                      1- 2344     	MOVIA	0x13
     0073 00rr                      1- 2345     	MOVAR	STK00
     0074 21EA                      1- 2346     	MOVIA	0xea
                                    1- 2347     	MCALL	_ip53xs_writeByte
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2348     	.line	958, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0076 2100                      1- 2349     	MOVIA	0x00
     0077 00rr                      1- 2350     	MOVAR	STK00
     0078 21EA                      1- 2351     	MOVIA	0xea
                                    1- 2352     	MCALL	_ip53xs_readByte
     0079 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2353     	BANKSEL	r0x1024
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 00rr                      1- 2354     	MOVAR	r0x1024
                                    1- 2355     	.line	960, "main.c"; 	do
     007C 2164                      1- 2356     	MOVIA	0x64
                                    1- 2357     	BANKSEL	r0x1023
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 2358     	MOVAR	r0x1023
     007F                           1- 2359     _02365_DS_:
                                    1- 2360     	.line	962, "main.c"; 	if (timer_out)
                                    1- 2361     	BANKSEL	r0x1023
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1- 2362     	MOVR	r0x1023,W
     0081 0D03                      1- 2363     	BTRSC	STATUS,2
                                    1- 2364     	MGOTO	_02363_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2365     	.line	964, "main.c"; 	timer_out--;
     0083 06rr                      1- 2366     	DECR	r0x1023,F
                                    1- 2367     	MGOTO	_02366_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2368     _02363_DS_:
                                    1- 2369     	.line	968, "main.c"; 	return FALSE;
     0085 2100                      1- 2370     	MOVIA	0x00
                                    1- 2371     	MGOTO	_02374_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 2372     _02366_DS_:
                                    1- 2373     	.line	970, "main.c"; 	} while (0x55 != reg_ip55xs);
                                    1- 2374     	BANKSEL	r0x1024
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 2375     	MOVR	r0x1024,W
     0089 2455                      1- 2376     	XORIA	0x55
     008A 0903                      1- 2377     	BTRSS	STATUS,2
                                    1- 2378     	MGOTO	_02365_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2379     	.line	972, "main.c"; 	pdata++;
                                    1- 2380     	BANKSEL	r0x1027
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 05rr                      1- 2381     	INCR	r0x1027,F
     008E 0903                      1- 2382     	BTRSS	STATUS,2
                                    1- 2383     	MGOTO	_00011_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2384     	BANKSEL	r0x1026
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 2385     	INCR	r0x1026,F
     0092                           1- 2386     _00011_DS_:
     0092 0903                      1- 2387     	BTRSS	STATUS,2
                                    1- 2388     	MGOTO	_00012_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2389     	BANKSEL	r0x1025
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 2390     	INCR	r0x1025,F
     0096                           1- 2391     _00012_DS_:
                                    1- 2392     	.line	973, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA2
                                    1- 2393     	BANKSEL	r0x1027
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 2394     	MOVR	r0x1027,W
     0098 00rr                      1- 2395     	MOVAR	STK01
                                    1- 2396     	BANKSEL	r0x1026
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 2397     	MOVR	r0x1026,W
     009B 00rr                      1- 2398     	MOVAR	STK00
                                    1- 2399     	BANKSEL	r0x1025
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 01rr                      1- 2400     	MOVR	r0x1025,W
                                    1- 2401     	MCALL	__gptrget1
     009E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2402     	BANKSEL	r0x1024
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 2403     	MOVAR	r0x1024
     00A1 00rr                      1- 2404     	MOVAR	STK01
     00A2 2110                      1- 2405     	MOVIA	0x10
     00A3 00rr                      1- 2406     	MOVAR	STK00
     00A4 21EA                      1- 2407     	MOVIA	0xea
                                    1- 2408     	MCALL	_ip53xs_writeByte
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2409     	.line	974, "main.c"; 	pdata++;
                                    1- 2410     	BANKSEL	r0x1027
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 05rr                      1- 2411     	INCR	r0x1027,F
     00A8 0903                      1- 2412     	BTRSS	STATUS,2
                                    1- 2413     	MGOTO	_00013_DS_
     00A9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2414     	BANKSEL	r0x1026
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 05rr                      1- 2415     	INCR	r0x1026,F
     00AC                           1- 2416     _00013_DS_:
     00AC 0903                      1- 2417     	BTRSS	STATUS,2
                                    1- 2418     	MGOTO	_00014_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2419     	BANKSEL	r0x1025
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 05rr                      1- 2420     	INCR	r0x1025,F
     00B0                           1- 2421     _00014_DS_:
                                    1- 2422     	.line	975, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA3
                                    1- 2423     	BANKSEL	r0x1027
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 01rr                      1- 2424     	MOVR	r0x1027,W
     00B2 00rr                      1- 2425     	MOVAR	STK01
                                    1- 2426     	BANKSEL	r0x1026
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 01rr                      1- 2427     	MOVR	r0x1026,W
     00B5 00rr                      1- 2428     	MOVAR	STK00
                                    1- 2429     	BANKSEL	r0x1025
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 2430     	MOVR	r0x1025,W
                                    1- 2431     	MCALL	__gptrget1
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2432     	BANKSEL	r0x1024
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 2433     	MOVAR	r0x1024
     00BB 00rr                      1- 2434     	MOVAR	STK01
     00BC 2111                      1- 2435     	MOVIA	0x11
     00BD 00rr                      1- 2436     	MOVAR	STK00
     00BE 21EA                      1- 2437     	MOVIA	0xea
                                    1- 2438     	MCALL	_ip53xs_writeByte
     00BF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2439     	.line	976, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x77);
     00C0 2177                      1- 2440     	MOVIA	0x77
     00C1 00rr                      1- 2441     	MOVAR	STK01
     00C2 2112                      1- 2442     	MOVIA	0x12
     00C3 00rr                      1- 2443     	MOVAR	STK00
     00C4 21EA                      1- 2444     	MOVIA	0xea
                                    1- 2445     	MCALL	_ip53xs_writeByte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2446     	.line	978, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x77);
     00C6 2177                      1- 2447     	MOVIA	0x77
     00C7 00rr                      1- 2448     	MOVAR	STK01
     00C8 2113                      1- 2449     	MOVIA	0x13
     00C9 00rr                      1- 2450     	MOVAR	STK00
     00CA 21EA                      1- 2451     	MOVIA	0xea
                                    1- 2452     	MCALL	_ip53xs_writeByte
     00CB 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2453     	.line	980, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     00CC 2100                      1- 2454     	MOVIA	0x00
     00CD 00rr                      1- 2455     	MOVAR	STK00
     00CE 21EA                      1- 2456     	MOVIA	0xea
                                    1- 2457     	MCALL	_ip53xs_readByte
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2458     	BANKSEL	r0x1024
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 00rr                      1- 2459     	MOVAR	r0x1024
                                    1- 2460     	.line	982, "main.c"; 	do
     00D2 2164                      1- 2461     	MOVIA	0x64
                                    1- 2462     	BANKSEL	r0x1023
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1- 2463     	MOVAR	r0x1023
     00D5                           1- 2464     _02371_DS_:
                                    1- 2465     	.line	984, "main.c"; 	if (timer_out)
                                    1- 2466     	BANKSEL	r0x1023
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 01rr                      1- 2467     	MOVR	r0x1023,W
     00D7 0D03                      1- 2468     	BTRSC	STATUS,2
                                    1- 2469     	MGOTO	_02369_DS_
     00D8 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2470     	.line	986, "main.c"; 	timer_out--;
     00D9 06rr                      1- 2471     	DECR	r0x1023,F
                                    1- 2472     	MGOTO	_02372_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
     00DB                           1- 2473     _02369_DS_:
                                    1- 2474     	.line	990, "main.c"; 	return FALSE;
     00DB 2100                      1- 2475     	MOVIA	0x00
                                    1- 2476     	MGOTO	_02374_DS_
     00DC 3rrr                      3-   62 m1      LGOTO rom_address
     00DD                           1- 2477     _02372_DS_:
                                    1- 2478     	.line	992, "main.c"; 	} while (0xFF != reg_ip55xs);
                                    1- 2479     	BANKSEL	r0x1024
     00DD rrrr                      3-  109 m1      .banksel ram_address
     00DE 01rr                      1- 2480     	MOVR	r0x1024,W
     00DF 24FF                      1- 2481     	XORIA	0xff
     00E0 0903                      1- 2482     	BTRSS	STATUS,2
                                    1- 2483     	MGOTO	_02371_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2484     	.line	993, "main.c"; 	return TRUE;
     00E2 2101                      1- 2485     	MOVIA	0x01
     00E3                           1- 2486     _02374_DS_:
                                    1- 2487     	.line	994, "main.c"; 	}
                                    1- 2488     	RETURN	
     00E3 0010                      3-   39 m1      ret
                                    1- 2489     ; exit point of _ip55xs_write4Bytes
                                    1- 2491     ;***
                                    1- 2492     ;  pBlock Stats: dbName = C
                                    1- 2493     ;***
                                    1- 2494     ;has an exit
                                    1- 2495     ;functions called:
                                    1- 2496     ;   _i2c_start
                                    1- 2497     ;   _i2c_writeByte
                                    1- 2498     ;   _i2c_stop
                                    1- 2499     ;   _i2c_writeByte
                                    1- 2500     ;   _i2c_stop
                                    1- 2501     ;   _i2c_start
                                    1- 2502     ;   _i2c_writeByte
                                    1- 2503     ;   _i2c_stop
                                    1- 2504     ;   _i2c_readByte
                                    1- 2505     ;   _i2c_send_nack
                                    1- 2506     ;   _i2c_stop
                                    1- 2507     ;   _i2c_start
                                    1- 2508     ;   _i2c_writeByte
                                    1- 2509     ;   _i2c_stop
                                    1- 2510     ;   _i2c_writeByte
                                    1- 2511     ;   _i2c_stop
                                    1- 2512     ;   _i2c_start
                                    1- 2513     ;   _i2c_writeByte
                                    1- 2514     ;   _i2c_stop
                                    1- 2515     ;   _i2c_readByte
                                    1- 2516     ;   _i2c_send_nack
                                    1- 2517     ;   _i2c_stop
                                    1- 2518     ;5 compiler assigned registers:
                                    1- 2519     ;   r0x101F
                                    1- 2520     ;   STK00
                                    1- 2521     ;   r0x1020
                                    1- 2522     ;   r0x1021
                                    1- 2523     ;   r0x1022
                                    1- 2524     ;; Starting pCode block
                                    1- 2525     .segment "code"; module=main, function=_ip53xs_readByte
                                    1- 2527     ;local variable name mapping:
     0000                           1- 2531     _ip53xs_readByte:
                                    1- 2532     ; 2 exit points
                                    1- 2533     	.line	892, "main.c"; 	unsigned char ip53xs_readByte(unsigned char deviceAddr, unsigned char regAddr) //(unsigned char regAddr)
                                    1- 2534     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2535     	MOVAR	r0x101F
     0002 01rr                      1- 2536     	MOVR	STK00,W
                                    1- 2537     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2538     	MOVAR	r0x1020
                                    1- 2539     	.line	894, "main.c"; 	unsigned char readByte = 0;
                                    1- 2540     	BANKSEL	r0x1021
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 2541     	CLRR	r0x1021
                                    1- 2542     	.line	895, "main.c"; 	if (P_I2C_INT)
     0007 09rr                      1- 2543     	BTRSS	_PORTAbits,2
                                    1- 2544     	MGOTO	_02350_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2545     	.line	897, "main.c"; 	i2c_start();
                                    1- 2546     	MCALL	_i2c_start
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2547     	.line	899, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2548     	BANKSEL	r0x101F
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1- 2549     	MOVR	r0x101F,W
                                    1- 2550     	MCALL	_i2c_writeByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2551     	BANKSEL	r0x1022
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2552     	MOVAR	r0x1022
     000F 01rr                      1- 2553     	MOVR	r0x1022,W
     0010 0D03                      1- 2554     	BTRSC	STATUS,2
                                    1- 2555     	MGOTO	_02344_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2556     	.line	901, "main.c"; 	i2c_stop();
                                    1- 2557     	MCALL	_i2c_stop
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2558     	.line	902, "main.c"; 	return FALSE;
     0013 2100                      1- 2559     	MOVIA	0x00
                                    1- 2560     	MGOTO	_02351_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
     0015                           1- 2561     _02344_DS_:
                                    1- 2562     	.line	905, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2563     	BANKSEL	r0x1020
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2564     	MOVR	r0x1020,W
                                    1- 2565     	MCALL	_i2c_writeByte
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2566     	BANKSEL	r0x1020
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2567     	MOVAR	r0x1020
     001A 01rr                      1- 2568     	MOVR	r0x1020,W
     001B 0D03                      1- 2569     	BTRSC	STATUS,2
                                    1- 2570     	MGOTO	_02346_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2571     	.line	907, "main.c"; 	i2c_stop();
                                    1- 2572     	MCALL	_i2c_stop
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2573     	.line	908, "main.c"; 	return FALSE;
     001E 2100                      1- 2574     	MOVIA	0x00
                                    1- 2575     	MGOTO	_02351_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2576     _02346_DS_:
                                    1- 2577     	.line	911, "main.c"; 	i2c_start();
                                    1- 2578     	MCALL	_i2c_start
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2579     	.line	913, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 2580     	BANKSEL	r0x101F
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 18rr                      1- 2581     	BSR	r0x101F,0
     0023 01rr                      1- 2582     	MOVR	r0x101F,W
                                    1- 2583     	MCALL	_i2c_writeByte
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2584     	BANKSEL	r0x101F
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 2585     	MOVAR	r0x101F
     0027 01rr                      1- 2586     	MOVR	r0x101F,W
     0028 0D03                      1- 2587     	BTRSC	STATUS,2
                                    1- 2588     	MGOTO	_02348_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2589     	.line	915, "main.c"; 	i2c_stop();
                                    1- 2590     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2591     	.line	916, "main.c"; 	return FALSE;
     002B 2100                      1- 2592     	MOVIA	0x00
                                    1- 2593     	MGOTO	_02351_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 2594     _02348_DS_:
                                    1- 2595     	.line	919, "main.c"; 	readByte = i2c_readByte();
                                    1- 2596     	MCALL	_i2c_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2597     	BANKSEL	r0x1021
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2598     	MOVAR	r0x1021
                                    1- 2599     	.line	920, "main.c"; 	i2c_send_nack();
                                    1- 2600     	MCALL	_i2c_send_nack
     0030 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2601     	.line	921, "main.c"; 	i2c_stop();
                                    1- 2602     	MCALL	_i2c_stop
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1- 2603     _02350_DS_:
                                    1- 2604     	.line	924, "main.c"; 	return readByte;
                                    1- 2605     	BANKSEL	r0x1021
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 2606     	MOVR	r0x1021,W
     0034                           1- 2607     _02351_DS_:
                                    1- 2608     	.line	925, "main.c"; 	}
                                    1- 2609     	RETURN	
     0034 0010                      3-   39 m1      ret
                                    1- 2610     ; exit point of _ip53xs_readByte
                                    1- 2612     ;***
                                    1- 2613     ;  pBlock Stats: dbName = C
                                    1- 2614     ;***
                                    1- 2615     ;has an exit
                                    1- 2616     ;functions called:
                                    1- 2617     ;   _i2c_start
                                    1- 2618     ;   _i2c_writeByte
                                    1- 2619     ;   _i2c_stop
                                    1- 2620     ;   _i2c_writeByte
                                    1- 2621     ;   _i2c_stop
                                    1- 2622     ;   _i2c_writeByte
                                    1- 2623     ;   _i2c_stop
                                    1- 2624     ;   _i2c_stop
                                    1- 2625     ;   _i2c_start
                                    1- 2626     ;   _i2c_writeByte
                                    1- 2627     ;   _i2c_stop
                                    1- 2628     ;   _i2c_writeByte
                                    1- 2629     ;   _i2c_stop
                                    1- 2630     ;   _i2c_writeByte
                                    1- 2631     ;   _i2c_stop
                                    1- 2632     ;   _i2c_stop
                                    1- 2633     ;5 compiler assigned registers:
                                    1- 2634     ;   r0x101F
                                    1- 2635     ;   STK00
                                    1- 2636     ;   r0x1020
                                    1- 2637     ;   STK01
                                    1- 2638     ;   r0x1021
                                    1- 2639     ;; Starting pCode block
                                    1- 2640     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 2642     ;local variable name mapping:
     0000                           1- 2646     _ip53xs_writeByte:
                                    1- 2647     ; 2 exit points
                                    1- 2648     	.line	862, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 2649     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2650     	MOVAR	r0x101F
     0002 01rr                      1- 2651     	MOVR	STK00,W
                                    1- 2652     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2653     	MOVAR	r0x1020
     0005 01rr                      1- 2654     	MOVR	STK01,W
                                    1- 2655     	BANKSEL	r0x1021
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2656     	MOVAR	r0x1021
                                    1- 2657     	.line	864, "main.c"; 	if (P_I2C_INT)
     0008 09rr                      1- 2658     	BTRSS	_PORTAbits,2
                                    1- 2659     	MGOTO	_02337_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2660     	.line	866, "main.c"; 	i2c_start();
                                    1- 2661     	MCALL	_i2c_start
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2662     	.line	868, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2663     	BANKSEL	r0x101F
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2664     	MOVR	r0x101F,W
                                    1- 2665     	MCALL	_i2c_writeByte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2666     	BANKSEL	r0x101F
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2667     	MOVAR	r0x101F
     0010 01rr                      1- 2668     	MOVR	r0x101F,W
     0011 0D03                      1- 2669     	BTRSC	STATUS,2
                                    1- 2670     	MGOTO	_02331_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2671     	.line	870, "main.c"; 	i2c_stop();
                                    1- 2672     	MCALL	_i2c_stop
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2673     	.line	871, "main.c"; 	return FALSE;
     0014 2100                      1- 2674     	MOVIA	0x00
                                    1- 2675     	MGOTO	_02338_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2676     _02331_DS_:
                                    1- 2677     	.line	874, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2678     	BANKSEL	r0x1020
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 2679     	MOVR	r0x1020,W
                                    1- 2680     	MCALL	_i2c_writeByte
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2681     	BANKSEL	r0x101F
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2682     	MOVAR	r0x101F
     001B 01rr                      1- 2683     	MOVR	r0x101F,W
     001C 0D03                      1- 2684     	BTRSC	STATUS,2
                                    1- 2685     	MGOTO	_02333_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2686     	.line	876, "main.c"; 	i2c_stop();
                                    1- 2687     	MCALL	_i2c_stop
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2688     	.line	877, "main.c"; 	return FALSE;
     001F 2100                      1- 2689     	MOVIA	0x00
                                    1- 2690     	MGOTO	_02338_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2691     _02333_DS_:
                                    1- 2692     	.line	880, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 2693     	BANKSEL	r0x1021
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 2694     	MOVR	r0x1021,W
                                    1- 2695     	MCALL	_i2c_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2696     	BANKSEL	r0x101F
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2697     	MOVAR	r0x101F
     0026 01rr                      1- 2698     	MOVR	r0x101F,W
     0027 0D03                      1- 2699     	BTRSC	STATUS,2
                                    1- 2700     	MGOTO	_02335_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2701     	.line	882, "main.c"; 	i2c_stop();
                                    1- 2702     	MCALL	_i2c_stop
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2703     	.line	883, "main.c"; 	return FALSE;
     002A 2100                      1- 2704     	MOVIA	0x00
                                    1- 2705     	MGOTO	_02338_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 2706     _02335_DS_:
                                    1- 2707     	.line	886, "main.c"; 	i2c_stop();
                                    1- 2708     	MCALL	_i2c_stop
     002C 2rrr                      3-   65 m1      LCALL rom_address
     002D                           1- 2709     _02337_DS_:
                                    1- 2710     	.line	889, "main.c"; 	return TRUE;
     002D 2101                      1- 2711     	MOVIA	0x01
     002E                           1- 2712     _02338_DS_:
                                    1- 2713     	.line	890, "main.c"; 	}
                                    1- 2714     	RETURN	
     002E 0010                      3-   39 m1      ret
                                    1- 2715     ; exit point of _ip53xs_writeByte
                                    1- 2717     ;***
                                    1- 2718     ;  pBlock Stats: dbName = C
                                    1- 2719     ;***
                                    1- 2720     ;has an exit
                                    1- 2721     ;functions called:
                                    1- 2722     ;   __dly_us
                                    1- 2723     ;   __dly_us
                                    1- 2724     ;   __dly_us
                                    1- 2725     ;   __dly_us
                                    1- 2726     ;3 compiler assigned registers:
                                    1- 2727     ;   r0x101B
                                    1- 2728     ;   r0x101C
                                    1- 2729     ;   r0x101D
                                    1- 2730     ;; Starting pCode block
                                    1- 2731     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2733     ;local variable name mapping:
     0000                           1- 2736     _i2c_readByte:
                                    1- 2737     ; 2 exit points
                                    1- 2738     	.line	836, "main.c"; 	unsigned char readByte = 0;
                                    1- 2739     	BANKSEL	r0x101B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2740     	CLRR	r0x101B
                                    1- 2741     	.line	838, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Err                      1- 2742     	BCR	_PORTAbits,4
                                    1- 2743     	.line	839, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2744     	IOSTR	_IOSTA
                                    1- 2745     	BANKSEL	r0x101C
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2746     	MOVAR	r0x101C
     0006 19rr                      1- 2747     	BSR	r0x101C,3
     0007 01rr                      1- 2748     	MOVR	r0x101C,W
     0008 000r                      1- 2749     	IOST	_IOSTA
                                    1- 2750     	.line	841, "main.c"; 	while (i--)
     0009 2108                      1- 2751     	MOVIA	0x08
     000A 00rr                      1- 2752     	MOVAR	r0x101C
     000B                           1- 2753     _02323_DS_:
                                    1- 2754     	BANKSEL	r0x101C
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2755     	MOVR	r0x101C,W
                                    1- 2756     	BANKSEL	r0x101D
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2757     	MOVAR	r0x101D
                                    1- 2758     	BANKSEL	r0x101C
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2759     	DECR	r0x101C,F
                                    1- 2760     	BANKSEL	r0x101D
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2761     	MOVR	r0x101D,W
     0013 0D03                      1- 2762     	BTRSC	STATUS,2
                                    1- 2763     	MGOTO	_02325_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2764     	.line	844, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 1Arr                      1- 2765     	BSR	_PORTAbits,4
                                    1- 2766     	.line	845, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2767     	MOVIA	0x00
                                    1- 2768     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2769     	.line	846, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2770     	BCR	STATUS,0
                                    1- 2771     	BANKSEL	r0x101B
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2772     	RLR	r0x101B,F
                                    1- 2773     	.line	848, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2774     	BTRSC	_PORTAbits,3
                                    1- 2775     	.line	850, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2776     	BSR	r0x101B,0
                                    1- 2777     	.line	853, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Err                      1- 2778     	BCR	_PORTAbits,4
                                    1- 2779     	.line	854, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2780     	MOVIA	0x00
                                    1- 2781     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2782     	MGOTO	_02323_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2783     _02325_DS_:
                                    1- 2784     	.line	858, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2785     	IOSTR	_IOSTA
                                    1- 2786     	BANKSEL	r0x101C
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2787     	MOVAR	r0x101C
     0024 1Drr                      1- 2788     	BCR	r0x101C,3
     0025 01rr                      1- 2789     	MOVR	r0x101C,W
     0026 000r                      1- 2790     	IOST	_IOSTA
                                    1- 2791     	.line	859, "main.c"; 	return readByte;  // 返回数据
                                    1- 2792     	BANKSEL	r0x101B
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2793     	MOVR	r0x101B,W
                                    1- 2794     	.line	860, "main.c"; 	}
                                    1- 2795     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2796     ; exit point of _i2c_readByte
                                    1- 2798     ;***
                                    1- 2799     ;  pBlock Stats: dbName = C
                                    1- 2800     ;***
                                    1- 2801     ;has an exit
                                    1- 2802     ;functions called:
                                    1- 2803     ;   __dly_us
                                    1- 2804     ;   __dly_us
                                    1- 2805     ;   _i2c_chk_ack
                                    1- 2806     ;   __dly_us
                                    1- 2807     ;   __dly_us
                                    1- 2808     ;   _i2c_chk_ack
                                    1- 2809     ;3 compiler assigned registers:
                                    1- 2810     ;   r0x101C
                                    1- 2811     ;   r0x101D
                                    1- 2812     ;   r0x101E
                                    1- 2813     ;; Starting pCode block
                                    1- 2814     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2816     ;local variable name mapping:
     0000                           1- 2819     _i2c_writeByte:
                                    1- 2820     ; 2 exit points
                                    1- 2821     	.line	808, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2822     	BANKSEL	r0x101C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2823     	MOVAR	r0x101C
                                    1- 2824     	.line	812, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2825     	MOVIA	0x08
                                    1- 2826     	BANKSEL	r0x101D
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2827     	MOVAR	r0x101D
     0005                           1- 2828     _02314_DS_:
                                    1- 2829     	BANKSEL	r0x101D
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2830     	MOVR	r0x101D,W
                                    1- 2831     	BANKSEL	r0x101E
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2832     	MOVAR	r0x101E
                                    1- 2833     	BANKSEL	r0x101D
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2834     	DECR	r0x101D,F
                                    1- 2835     	BANKSEL	r0x101E
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2836     	MOVR	r0x101E,W
     000D 0D03                      1- 2837     	BTRSC	STATUS,2
                                    1- 2838     	MGOTO	_02316_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2839     	.line	814, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Err                      1- 2840     	BCR	_PORTAbits,4
                                    1- 2841     	.line	815, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2842     	MOVIA	0x00
                                    1- 2843     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2844     	.line	816, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2845     	BANKSEL	r0x101C
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2846     	BTRSS	r0x101C,7
                                    1- 2847     	MGOTO	_02312_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2848     	.line	818, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2849     	BSR	_PORTAbits,3
                                    1- 2850     	MGOTO	_02313_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2851     _02312_DS_:
                                    1- 2852     	.line	822, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2853     	BCR	_PORTAbits,3
     0018                           1- 2854     _02313_DS_:
                                    1- 2855     	.line	824, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2856     	BCR	STATUS,0
                                    1- 2857     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2858     	RLR	r0x101C,F
                                    1- 2859     	.line	825, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 1Arr                      1- 2860     	BSR	_PORTAbits,4
                                    1- 2861     	.line	826, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2862     	MOVIA	0x00
                                    1- 2863     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2864     	.line	827, "main.c"; 	NOP();
     001E 0000                      1- 2865     	nop
                                    1- 2866     	MGOTO	_02314_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2867     _02316_DS_:
                                    1- 2868     	.line	830, "main.c"; 	return i2c_chk_ack();
                                    1- 2869     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2870     	BANKSEL	r0x101C
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2871     	MOVAR	r0x101C
                                    1- 2872     	.line	831, "main.c"; 	}
                                    1- 2873     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2874     ; exit point of _i2c_writeByte
                                    1- 2876     ;***
                                    1- 2877     ;  pBlock Stats: dbName = C
                                    1- 2878     ;***
                                    1- 2879     ;has an exit
                                    1- 2880     ;functions called:
                                    1- 2881     ;   __dly_us
                                    1- 2882     ;   __dly_us
                                    1- 2883     ;   __dly_us
                                    1- 2884     ;   __dly_us
                                    1- 2885     ;; Starting pCode block
                                    1- 2886     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2888     _i2c_send_nack:
                                    1- 2889     ; 2 exit points
                                    1- 2890     	.line	799, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2891     	BCR	_PORTAbits,4
                                    1- 2892     	.line	800, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2893     	BSR	_PORTAbits,3
                                    1- 2894     	.line	801, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2895     	MOVIA	0x0a
                                    1- 2896     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2897     	.line	802, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2898     	BSR	_PORTAbits,4
                                    1- 2899     	.line	803, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2900     	MOVIA	0x0a
                                    1- 2901     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2902     	.line	804, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2903     	BCR	_PORTAbits,4
                                    1- 2904     	.line	805, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2905     	BCR	_PORTAbits,3
                                    1- 2906     	.line	806, "main.c"; 	}
                                    1- 2907     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2908     ; exit point of _i2c_send_nack
                                    1- 2910     ;***
                                    1- 2911     ;  pBlock Stats: dbName = C
                                    1- 2912     ;***
                                    1- 2913     ;has an exit
                                    1- 2914     ;functions called:
                                    1- 2915     ;   __dly_us
                                    1- 2916     ;   __dly_us
                                    1- 2917     ;   __dly_us
                                    1- 2918     ;   __dly_us
                                    1- 2919     ;; Starting pCode block
                                    1- 2920     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2922     _i2c_send_ack:
                                    1- 2923     ; 2 exit points
                                    1- 2924     	.line	788, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2925     	BCR	_PORTAbits,4
                                    1- 2926     	.line	789, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2927     	BCR	_PORTAbits,3
                                    1- 2928     	.line	790, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2929     	MOVIA	0x0a
                                    1- 2930     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2931     	.line	791, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2932     	BSR	_PORTAbits,4
                                    1- 2933     	.line	792, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2934     	MOVIA	0x0a
                                    1- 2935     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2936     	.line	793, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2937     	BCR	_PORTAbits,4
                                    1- 2938     	.line	794, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2939     	BCR	_PORTAbits,3
                                    1- 2940     	.line	795, "main.c"; 	}
                                    1- 2941     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2942     ; exit point of _i2c_send_ack
                                    1- 2944     ;***
                                    1- 2945     ;  pBlock Stats: dbName = C
                                    1- 2946     ;***
                                    1- 2947     ;has an exit
                                    1- 2948     ;functions called:
                                    1- 2949     ;   __dly_us
                                    1- 2950     ;   __dly_us
                                    1- 2951     ;   __dly_us
                                    1- 2952     ;   __dly_us
                                    1- 2953     ;1 compiler assigned register :
                                    1- 2954     ;   r0x101B
                                    1- 2955     ;; Starting pCode block
                                    1- 2956     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2958     ;local variable name mapping:
     0000                           1- 2960     _i2c_chk_ack:
                                    1- 2961     ; 2 exit points
                                    1- 2962     	.line	765, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Err                      1- 2963     	BCR	_PORTAbits,4
                                    1- 2964     	.line	766, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2965     	IOSTR	_IOSTA
                                    1- 2966     	BANKSEL	r0x101B
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2967     	MOVAR	r0x101B
     0004 19rr                      1- 2968     	BSR	r0x101B,3
     0005 01rr                      1- 2969     	MOVR	r0x101B,W
     0006 000r                      1- 2970     	IOST	_IOSTA
                                    1- 2971     	.line	768, "main.c"; 	_dly_us(0);
     0007 2100                      1- 2972     	MOVIA	0x00
                                    1- 2973     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2974     	.line	769, "main.c"; 	P_I2C_SCL_SET;
     0009 1Arr                      1- 2975     	BSR	_PORTAbits,4
                                    1- 2976     	.line	770, "main.c"; 	_dly_us(0);
     000A 2100                      1- 2977     	MOVIA	0x00
                                    1- 2978     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2979     	.line	771, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 2980     	MOVIA	0xfa
                                    1- 2981     	BANKSEL	r0x101B
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2982     	MOVAR	r0x101B
     000F                           1- 2983     _02295_DS_:
     000F 09rr                      1- 2984     	BTRSS	_PORTAbits,3
                                    1- 2985     	MGOTO	_02297_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2986     	.line	773, "main.c"; 	--getAckTime;
                                    1- 2987     	BANKSEL	r0x101B
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 2988     	DECRSZ	r0x101B,F
                                    1- 2989     	.line	775, "main.c"; 	if (0 == getAckTime)
                                    1- 2990     	MGOTO	_02295_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2991     	.line	777, "main.c"; 	return 1;
     0014 2101                      1- 2992     	MOVIA	0x01
                                    1- 2993     	MGOTO	_02298_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2994     _02297_DS_:
                                    1- 2995     	.line	781, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Err                      1- 2996     	BCR	_PORTAbits,4
                                    1- 2997     	.line	782, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 2998     	IOSTR	_IOSTA
                                    1- 2999     	BANKSEL	r0x101B
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 3000     	MOVAR	r0x101B
     001A 1Drr                      1- 3001     	BCR	r0x101B,3
     001B 01rr                      1- 3002     	MOVR	r0x101B,W
     001C 000r                      1- 3003     	IOST	_IOSTA
                                    1- 3004     	.line	783, "main.c"; 	return 0;
     001D 2100                      1- 3005     	MOVIA	0x00
     001E                           1- 3006     _02298_DS_:
                                    1- 3007     	.line	784, "main.c"; 	}
                                    1- 3008     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 3009     ; exit point of _i2c_chk_ack
                                    1- 3011     ;***
                                    1- 3012     ;  pBlock Stats: dbName = C
                                    1- 3013     ;***
                                    1- 3014     ;has an exit
                                    1- 3015     ;functions called:
                                    1- 3016     ;   __dly_us
                                    1- 3017     ;   __dly_us
                                    1- 3018     ;   __dly_us
                                    1- 3019     ;   __dly_us
                                    1- 3020     ;; Starting pCode block
                                    1- 3021     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 3023     _i2c_stop:
                                    1- 3024     ; 2 exit points
                                    1- 3025     	.line	753, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 3026     	BCR	_PORTAbits,4
                                    1- 3027     	.line	754, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 3028     	BCR	_PORTAbits,3
                                    1- 3029     	.line	755, "main.c"; 	_dly_us(10);
     0002 210A                      1- 3030     	MOVIA	0x0a
                                    1- 3031     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3032     	.line	756, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 3033     	BSR	_PORTAbits,4
                                    1- 3034     	.line	757, "main.c"; 	_dly_us(10);
     0005 210A                      1- 3035     	MOVIA	0x0a
                                    1- 3036     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3037     	.line	758, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 3038     	BSR	_PORTAbits,3
                                    1- 3039     	.line	759, "main.c"; 	}
                                    1- 3040     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3041     ; exit point of _i2c_stop
                                    1- 3043     ;***
                                    1- 3044     ;  pBlock Stats: dbName = C
                                    1- 3045     ;***
                                    1- 3046     ;has an exit
                                    1- 3047     ;functions called:
                                    1- 3048     ;   __dly_us
                                    1- 3049     ;   __dly_us
                                    1- 3050     ;   __dly_us
                                    1- 3051     ;   __dly_us
                                    1- 3052     ;1 compiler assigned register :
                                    1- 3053     ;   r0x101B
                                    1- 3054     ;; Starting pCode block
                                    1- 3055     .segment "code"; module=main, function=_i2c_start
     0000                           1- 3057     _i2c_start:
                                    1- 3058     ; 2 exit points
                                    1- 3059     	.line	740, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 3060     	BSR	_PORTAbits,3
                                    1- 3061     	.line	741, "main.c"; 	P_I2C_SCL_SET;
     0001 1Arr                      1- 3062     	BSR	_PORTAbits,4
                                    1- 3063     	.line	742, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 3064     	IOSTR	_IOSTA
                                    1- 3065     	BANKSEL	r0x101B
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 3066     	MOVAR	r0x101B
     0005 1Drr                      1- 3067     	BCR	r0x101B,3
     0006 01rr                      1- 3068     	MOVR	r0x101B,W
     0007 000r                      1- 3069     	IOST	_IOSTA
                                    1- 3070     	.line	743, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 3071     	IOSTR	_IOSTA
     0009 00rr                      1- 3072     	MOVAR	r0x101B
     000A 1Err                      1- 3073     	BCR	r0x101B,4
     000B 01rr                      1- 3074     	MOVR	r0x101B,W
     000C 000r                      1- 3075     	IOST	_IOSTA
                                    1- 3076     	.line	744, "main.c"; 	_dly_us(10);
     000D 210A                      1- 3077     	MOVIA	0x0a
                                    1- 3078     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3079     	.line	745, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 3080     	BCR	_PORTAbits,3
                                    1- 3081     	.line	746, "main.c"; 	_dly_us(10);
     0010 210A                      1- 3082     	MOVIA	0x0a
                                    1- 3083     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3084     	.line	747, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Err                      1- 3085     	BCR	_PORTAbits,4
                                    1- 3086     	.line	748, "main.c"; 	}
                                    1- 3087     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 3088     ; exit point of _i2c_start
                                    1- 3090     ;***
                                    1- 3091     ;  pBlock Stats: dbName = C
                                    1- 3092     ;***
                                    1- 3093     ;has an exit
                                    1- 3094     ;functions called:
                                    1- 3095     ;   __dly_us
                                    1- 3096     ;   __dly_us
                                    1- 3097     ;1 compiler assigned register :
                                    1- 3098     ;   r0x101B
                                    1- 3099     ;; Starting pCode block
                                    1- 3100     .segment "code"; module=main, function=_gpioKeyScan
     0000                           1- 3102     _gpioKeyScan:
                                    1- 3103     ; 2 exit points
                                    1- 3104     	.line	610, "main.c"; 	P_KEY_INPUT;
     0000 001r                      1- 3105     	IOSTR	_IOSTB
                                    1- 3106     	BANKSEL	r0x101B
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3107     	MOVAR	r0x101B
     0003 18rr                      1- 3108     	BSR	r0x101B,0
     0004 01rr                      1- 3109     	MOVR	r0x101B,W
     0005 000r                      1- 3110     	IOST	_IOSTB
                                    1- 3111     	.line	611, "main.c"; 	_dly_us(5);
     0006 2105                      1- 3112     	MOVIA	0x05
                                    1- 3113     	MCALL	__dly_us
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3114     	.line	612, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 3115     	BANKSEL	_gpioKeyWaitTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 01rr                      1- 3116     	MOVR	_gpioKeyWaitTimer,W
     000A 0D03                      1- 3117     	BTRSC	STATUS,2
                                    1- 3118     	MGOTO	_02204_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3119     	.line	614, "main.c"; 	gpioKeyWaitTimer--;
     000C 01rr                      1- 3120     	MOVR	_gpioKeyWaitTimer,W
                                    1- 3121     	BANKSEL	r0x101B
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 3122     	MOVAR	r0x101B
     000F 06rr                      1- 3123     	DECR	r0x101B,W
                                    1- 3124     	BANKSEL	_gpioKeyWaitTimer
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 3125     	MOVAR	_gpioKeyWaitTimer
     0012                           1- 3126     _02204_DS_:
                                    1- 3127     	.line	617, "main.c"; 	indexKey = 0;
                                    1- 3128     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Drr                      1- 3129     	BCR	_vFlag_1,2
                                    1- 3130     	.line	619, "main.c"; 	if (P_KEY)
     0014 08rr                      1- 3131     	BTRSS	_PORTBbits,0
                                    1- 3132     	MGOTO	_02206_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3133     	.line	621, "main.c"; 	indexKey = 1;
     0016 19rr                      1- 3134     	BSR	_vFlag_1,2
                                    1- 3135     	.line	622, "main.c"; 	P_KEY_IPS_SET;
     0017 18rr                      1- 3136     	BSR	_PORTBbits,1
                                    1- 3137     	.line	623, "main.c"; 	P_KEY_IPS_INPUT;
     0018 001r                      1- 3138     	IOSTR	_IOSTB
                                    1- 3139     	BANKSEL	r0x101B
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 3140     	MOVAR	r0x101B
     001B 18rr                      1- 3141     	BSR	r0x101B,1
     001C 01rr                      1- 3142     	MOVR	r0x101B,W
     001D 000r                      1- 3143     	IOST	_IOSTB
     001E                           1- 3144     _02206_DS_:
                                    1- 3145     	.line	626, "main.c"; 	switch (gpioKeyState)
                                    1- 3146     	BANKSEL	_gpioKeyState
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 01rr                      1- 3147     	MOVR	_gpioKeyState,W
     0020 0D03                      1- 3148     	BTRSC	STATUS,2
                                    1- 3149     	MGOTO	_02207_DS_
     0021 3rrr                      3-   62 m1      LGOTO rom_address
     0022 01rr                      1- 3150     	MOVR	_gpioKeyState,W
     0023 2401                      1- 3151     	XORIA	0x01
     0024 0D03                      1- 3152     	BTRSC	STATUS,2
                                    1- 3153     	MGOTO	_02210_DS_
     0025 3rrr                      3-   62 m1      LGOTO rom_address
     0026 01rr                      1- 3154     	MOVR	_gpioKeyState,W
     0027 2402                      1- 3155     	XORIA	0x02
     0028 0D03                      1- 3156     	BTRSC	STATUS,2
                                    1- 3157     	MGOTO	_02216_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A 01rr                      1- 3158     	MOVR	_gpioKeyState,W
     002B 2403                      1- 3159     	XORIA	0x03
     002C 0D03                      1- 3160     	BTRSC	STATUS,2
                                    1- 3161     	MGOTO	_02222_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3162     	MGOTO	_02225_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
     002F                           1- 3163     _02207_DS_:
                                    1- 3164     	.line	629, "main.c"; 	if (indexKey)
                                    1- 3165     	BANKSEL	_vFlag_1
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 09rr                      1- 3166     	BTRSS	_vFlag_1,2
                                    1- 3167     	MGOTO	_02209_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3168     	.line	632, "main.c"; 	return MSG_NONE;
     0032 2100                      1- 3169     	MOVIA	0x00
                                    1- 3170     	MGOTO	_02227_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
     0034                           1- 3171     _02209_DS_:
                                    1- 3172     	.line	637, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME; // gSysTick_current;
     0034 2103                      1- 3173     	MOVIA	0x03
                                    1- 3174     	BANKSEL	_gpioKeyWaitTimer
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 3175     	MOVAR	_gpioKeyWaitTimer
                                    1- 3176     	.line	640, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0037 2101                      1- 3177     	MOVIA	0x01
                                    1- 3178     	BANKSEL	_gpioKeyState
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 00rr                      1- 3179     	MOVAR	_gpioKeyState
     003A                           1- 3180     _02210_DS_:
                                    1- 3181     	.line	643, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3182     	BANKSEL	_vFlag_1
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 09rr                      1- 3183     	BTRSS	_vFlag_1,2
                                    1- 3184     	MGOTO	_02214_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3185     	.line	647, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3186     	BANKSEL	_gpioKeyState
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1- 3187     	CLRR	_gpioKeyState
                                    1- 3188     	MGOTO	_02226_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
     0040                           1- 3189     _02214_DS_:
                                    1- 3190     	.line	650, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_JTTER_TIME)
                                    1- 3191     	BANKSEL	_gpioKeyWaitTimer
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 3192     	MOVR	_gpioKeyWaitTimer,W
     0042 0903                      1- 3193     	BTRSS	STATUS,2
                                    1- 3194     	MGOTO	_02226_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3195     	.line	657, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME; // gSysTick_current;
     0044 2196                      1- 3196     	MOVIA	0x96
     0045 00rr                      1- 3197     	MOVAR	_gpioKeyWaitTimer
                                    1- 3198     	.line	658, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     0046 2102                      1- 3199     	MOVIA	0x02
                                    1- 3200     	BANKSEL	_gpioKeyState
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 3201     	MOVAR	_gpioKeyState
                                    1- 3202     	.line	659, "main.c"; 	P_KEY_IPS_CLR;
     0049 1Crr                      1- 3203     	BCR	_PORTBbits,1
                                    1- 3204     	.line	660, "main.c"; 	P_KEY_IPS_OUTPUT;
     004A 001r                      1- 3205     	IOSTR	_IOSTB
                                    1- 3206     	BANKSEL	r0x101B
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 00rr                      1- 3207     	MOVAR	r0x101B
     004D 1Crr                      1- 3208     	BCR	r0x101B,1
     004E 01rr                      1- 3209     	MOVR	r0x101B,W
     004F 000r                      1- 3210     	IOST	_IOSTB
                                    1- 3211     	.line	664, "main.c"; 	break;
                                    1- 3212     	MGOTO	_02226_DS_
     0050 3rrr                      3-   62 m1      LGOTO rom_address
     0051                           1- 3213     _02216_DS_:
                                    1- 3214     	.line	667, "main.c"; 	if (indexKey)               // if(PreKeyIndex != indexKey)
                                    1- 3215     	BANKSEL	_vFlag_1
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 09rr                      1- 3216     	BTRSS	_vFlag_1,2
                                    1- 3217     	MGOTO	_02220_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3218     	.line	672, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3219     	BANKSEL	_gpioKeyState
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 02rr                      1- 3220     	CLRR	_gpioKeyState
                                    1- 3221     	.line	674, "main.c"; 	return MSG_MODE; // GpioKeyEvent[PreKeyIndex][1]; //SPR
     0056 2121                      1- 3222     	MOVIA	0x21
                                    1- 3223     	MGOTO	_02227_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
     0058                           1- 3224     _02220_DS_:
                                    1- 3225     	.line	677, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_CP_TIME)
                                    1- 3226     	BANKSEL	_gpioKeyWaitTimer
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 01rr                      1- 3227     	MOVR	_gpioKeyWaitTimer,W
     005A 0903                      1- 3228     	BTRSS	STATUS,2
                                    1- 3229     	MGOTO	_02226_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3230     	.line	685, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     005C 2103                      1- 3231     	MOVIA	0x03
                                    1- 3232     	BANKSEL	_gpioKeyState
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 00rr                      1- 3233     	MOVAR	_gpioKeyState
                                    1- 3234     	.line	700, "main.c"; 	return MSG_POWER_ON; // GpioKeyEvent[PreKeyIndex][2];  //CPS
     005F 2141                      1- 3235     	MOVIA	0x41
                                    1- 3236     	MGOTO	_02227_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
     0061                           1- 3237     _02222_DS_:
                                    1- 3238     	.line	706, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3239     	BANKSEL	_vFlag_1
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 09rr                      1- 3240     	BTRSS	_vFlag_1,2
                                    1- 3241     	MGOTO	_02226_DS_
     0063 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3242     	.line	712, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3243     	BANKSEL	_gpioKeyState
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 02rr                      1- 3244     	CLRR	_gpioKeyState
                                    1- 3245     	.line	726, "main.c"; 	break;
                                    1- 3246     	MGOTO	_02226_DS_
     0066 3rrr                      3-   62 m1      LGOTO rom_address
     0067                           1- 3247     _02225_DS_:
                                    1- 3248     	.line	729, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3249     	BANKSEL	_gpioKeyState
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 02rr                      1- 3250     	CLRR	_gpioKeyState
     0069                           1- 3251     _02226_DS_:
                                    1- 3252     	.line	733, "main.c"; 	return MSG_NONE;
     0069 2100                      1- 3253     	MOVIA	0x00
     006A                           1- 3254     _02227_DS_:
                                    1- 3255     	.line	734, "main.c"; 	}
                                    1- 3256     	RETURN	
     006A 0010                      3-   39 m1      ret
                                    1- 3257     ; exit point of _gpioKeyScan
                                    1- 3259     ;***
                                    1- 3260     ;  pBlock Stats: dbName = C
                                    1- 3261     ;***
                                    1- 3262     ;1 compiler assigned register :
                                    1- 3263     ;   r0x1031
                                    1- 3264     ;; Starting pCode block
                                    1- 3265     .segment "code"; module=main, function=_io_led_scan
                                    1- 3267     ;local variable name mapping:
     0000                           1- 3269     _io_led_scan:
                                    1- 3270     ; 0 exit points
                                    1- 3271     	.line	311, "main.c"; 	P_LED_SEG1_INPUT;
     0000 001r                      1- 3272     	IOSTR	_IOSTB
                                    1- 3273     	BANKSEL	r0x1031
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3274     	MOVAR	r0x1031
     0003 1Arr                      1- 3275     	BSR	r0x1031,5
     0004 01rr                      1- 3276     	MOVR	r0x1031,W
     0005 000r                      1- 3277     	IOST	_IOSTB
                                    1- 3278     	.line	312, "main.c"; 	P_LED_SEG2_INPUT;
     0006 001r                      1- 3279     	IOSTR	_IOSTA
     0007 00rr                      1- 3280     	MOVAR	r0x1031
     0008 18rr                      1- 3281     	BSR	r0x1031,0
     0009 01rr                      1- 3282     	MOVR	r0x1031,W
     000A 000r                      1- 3283     	IOST	_IOSTA
                                    1- 3284     	.line	313, "main.c"; 	P_LED_SEG3_INPUT;
     000B 001r                      1- 3285     	IOSTR	_IOSTA
     000C 00rr                      1- 3286     	MOVAR	r0x1031
     000D 18rr                      1- 3287     	BSR	r0x1031,1
     000E 01rr                      1- 3288     	MOVR	r0x1031,W
     000F 000r                      1- 3289     	IOST	_IOSTA
                                    1- 3290     	.line	314, "main.c"; 	P_LED_SEG4_INPUT;
     0010 001r                      1- 3291     	IOSTR	_IOSTA
     0011 00rr                      1- 3292     	MOVAR	r0x1031
     0012 1Brr                      1- 3293     	BSR	r0x1031,7
     0013 01rr                      1- 3294     	MOVR	r0x1031,W
     0014 000r                      1- 3295     	IOST	_IOSTA
                                    1- 3296     	.line	315, "main.c"; 	P_LED_SEG5_INPUT;
     0015 001r                      1- 3297     	IOSTR	_IOSTA
     0016 00rr                      1- 3298     	MOVAR	r0x1031
     0017 1Brr                      1- 3299     	BSR	r0x1031,6
     0018 01rr                      1- 3300     	MOVR	r0x1031,W
     0019 000r                      1- 3301     	IOST	_IOSTA
                                    1- 3302     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3303     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3304     	.line	317, "main.c"; 	switch (indexScan)
     001A 2112                      1- 3305     	MOVIA	0x12
                                    1- 3306     	BANKSEL	_io_led_scan_indexScan_65536_31
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 04rr                      1- 3307     	SUBAR	_io_led_scan_indexScan_65536_31,W
     001D 0C03                      1- 3308     	BTRSC	STATUS,0
                                    1- 3309     	MGOTO	_02113_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F 21rr                      1- 3310     	MOVIA	((_02198_DS_ >> 8) & 0xff)
     0020 008A                      1- 3311     	MOVAR	PCHBUF
     0021 01rr                      1- 3312     	MOVR	_io_led_scan_indexScan_65536_31,W
     0022 25rr                      1- 3313     	ADDIA	_02198_DS_
     0023 0C03                      1- 3314     	BTRSC	STATUS,0
     0024 058A                      1- 3315     	INCR	PCHBUF,F
     0025 0082                      1- 3316     	MOVAR	PCL
     0026                           1- 3317     _02198_DS_:
                                    1- 3318     	MGOTO	_02058_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3319     	MGOTO	_02061_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3320     	MGOTO	_02064_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3321     	MGOTO	_02067_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3322     	MGOTO	_02070_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3323     	MGOTO	_02073_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3324     	MGOTO	_02076_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3325     	MGOTO	_02079_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3326     	MGOTO	_02082_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3327     	MGOTO	_02085_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3328     	MGOTO	_02088_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3329     	MGOTO	_02091_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3330     	MGOTO	_02094_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3331     	MGOTO	_02097_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3332     	MGOTO	_02100_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3333     	MGOTO	_02103_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3334     	MGOTO	_02106_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3335     	MGOTO	_02109_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 3336     _02058_DS_:
                                    1- 3337     	.line	320, "main.c"; 	if (displayDecade & SEG_A) // 2A
                                    1- 3338     	BANKSEL	_displayDecade
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1- 3339     	BTRSS	_displayDecade,0
                                    1- 3340     	MGOTO	_02113_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3341     	.line	322, "main.c"; 	P_LED_SEG2_SET;
     003B 18rr                      1- 3342     	BSR	_PORTAbits,0
                                    1- 3343     	.line	323, "main.c"; 	P_LED_SEG2_OUTPUT;
     003C 001r                      1- 3344     	IOSTR	_IOSTA
                                    1- 3345     	BANKSEL	r0x1031
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3346     	MOVAR	r0x1031
     003F 1Crr                      1- 3347     	BCR	r0x1031,0
     0040 01rr                      1- 3348     	MOVR	r0x1031,W
     0041 000r                      1- 3349     	IOST	_IOSTA
                                    1- 3350     	.line	324, "main.c"; 	P_LED_SEG3_CLR;
     0042 1Crr                      1- 3351     	BCR	_PORTAbits,1
                                    1- 3352     	.line	325, "main.c"; 	P_LED_SEG3_OUTPUT;
     0043 001r                      1- 3353     	IOSTR	_IOSTA
     0044 00rr                      1- 3354     	MOVAR	r0x1031
     0045 1Crr                      1- 3355     	BCR	r0x1031,1
     0046 01rr                      1- 3356     	MOVR	r0x1031,W
     0047 000r                      1- 3357     	IOST	_IOSTA
                                    1- 3358     	.line	327, "main.c"; 	break;
                                    1- 3359     	MGOTO	_02113_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 3360     _02061_DS_:
                                    1- 3361     	.line	330, "main.c"; 	if (displayDecade & SEG_B) // 2B
                                    1- 3362     	BANKSEL	_displayDecade
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 08rr                      1- 3363     	BTRSS	_displayDecade,1
                                    1- 3364     	MGOTO	_02113_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3365     	.line	332, "main.c"; 	P_LED_SEG3_SET;
     004C 18rr                      1- 3366     	BSR	_PORTAbits,1
                                    1- 3367     	.line	333, "main.c"; 	P_LED_SEG3_OUTPUT;
     004D 001r                      1- 3368     	IOSTR	_IOSTA
                                    1- 3369     	BANKSEL	r0x1031
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 3370     	MOVAR	r0x1031
     0050 1Crr                      1- 3371     	BCR	r0x1031,1
     0051 01rr                      1- 3372     	MOVR	r0x1031,W
     0052 000r                      1- 3373     	IOST	_IOSTA
                                    1- 3374     	.line	334, "main.c"; 	P_LED_SEG2_CLR;
     0053 1Crr                      1- 3375     	BCR	_PORTAbits,0
                                    1- 3376     	.line	335, "main.c"; 	P_LED_SEG2_OUTPUT;
     0054 001r                      1- 3377     	IOSTR	_IOSTA
     0055 00rr                      1- 3378     	MOVAR	r0x1031
     0056 1Crr                      1- 3379     	BCR	r0x1031,0
     0057 01rr                      1- 3380     	MOVR	r0x1031,W
     0058 000r                      1- 3381     	IOST	_IOSTA
                                    1- 3382     	.line	337, "main.c"; 	break;
                                    1- 3383     	MGOTO	_02113_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 3384     _02064_DS_:
                                    1- 3385     	.line	340, "main.c"; 	if (displayDecade & SEG_C) // 2C
                                    1- 3386     	BANKSEL	_displayDecade
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 09rr                      1- 3387     	BTRSS	_displayDecade,2
                                    1- 3388     	MGOTO	_02113_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3389     	.line	342, "main.c"; 	P_LED_SEG4_SET;
     005D 1Brr                      1- 3390     	BSR	_PORTAbits,7
                                    1- 3391     	.line	343, "main.c"; 	P_LED_SEG4_OUTPUT;
     005E 001r                      1- 3392     	IOSTR	_IOSTA
                                    1- 3393     	BANKSEL	r0x1031
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3394     	MOVAR	r0x1031
     0061 1Frr                      1- 3395     	BCR	r0x1031,7
     0062 01rr                      1- 3396     	MOVR	r0x1031,W
     0063 000r                      1- 3397     	IOST	_IOSTA
                                    1- 3398     	.line	344, "main.c"; 	P_LED_SEG3_CLR;
     0064 1Crr                      1- 3399     	BCR	_PORTAbits,1
                                    1- 3400     	.line	345, "main.c"; 	P_LED_SEG3_OUTPUT;
     0065 001r                      1- 3401     	IOSTR	_IOSTA
     0066 00rr                      1- 3402     	MOVAR	r0x1031
     0067 1Crr                      1- 3403     	BCR	r0x1031,1
     0068 01rr                      1- 3404     	MOVR	r0x1031,W
     0069 000r                      1- 3405     	IOST	_IOSTA
                                    1- 3406     	.line	347, "main.c"; 	break;
                                    1- 3407     	MGOTO	_02113_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 3408     _02067_DS_:
                                    1- 3409     	.line	350, "main.c"; 	if (displayDecade & SEG_D) // 2D
                                    1- 3410     	BANKSEL	_displayDecade
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 09rr                      1- 3411     	BTRSS	_displayDecade,3
                                    1- 3412     	MGOTO	_02113_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3413     	.line	352, "main.c"; 	P_LED_SEG4_SET;
     006E 1Brr                      1- 3414     	BSR	_PORTAbits,7
                                    1- 3415     	.line	353, "main.c"; 	P_LED_SEG4_OUTPUT;
     006F 001r                      1- 3416     	IOSTR	_IOSTA
                                    1- 3417     	BANKSEL	r0x1031
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 00rr                      1- 3418     	MOVAR	r0x1031
     0072 1Frr                      1- 3419     	BCR	r0x1031,7
     0073 01rr                      1- 3420     	MOVR	r0x1031,W
     0074 000r                      1- 3421     	IOST	_IOSTA
                                    1- 3422     	.line	354, "main.c"; 	P_LED_SEG2_CLR;
     0075 1Crr                      1- 3423     	BCR	_PORTAbits,0
                                    1- 3424     	.line	355, "main.c"; 	P_LED_SEG2_OUTPUT;
     0076 001r                      1- 3425     	IOSTR	_IOSTA
     0077 00rr                      1- 3426     	MOVAR	r0x1031
     0078 1Crr                      1- 3427     	BCR	r0x1031,0
     0079 01rr                      1- 3428     	MOVR	r0x1031,W
     007A 000r                      1- 3429     	IOST	_IOSTA
                                    1- 3430     	.line	357, "main.c"; 	break;
                                    1- 3431     	MGOTO	_02113_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C                           1- 3432     _02070_DS_:
                                    1- 3433     	.line	360, "main.c"; 	if (displayDecade & SEG_E) // 2E
                                    1- 3434     	BANKSEL	_displayDecade
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 0Arr                      1- 3435     	BTRSS	_displayDecade,4
                                    1- 3436     	MGOTO	_02113_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3437     	.line	362, "main.c"; 	P_LED_SEG5_SET;
     007F 1Brr                      1- 3438     	BSR	_PORTAbits,6
                                    1- 3439     	.line	363, "main.c"; 	P_LED_SEG5_OUTPUT;
     0080 001r                      1- 3440     	IOSTR	_IOSTA
                                    1- 3441     	BANKSEL	r0x1031
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 3442     	MOVAR	r0x1031
     0083 1Frr                      1- 3443     	BCR	r0x1031,6
     0084 01rr                      1- 3444     	MOVR	r0x1031,W
     0085 000r                      1- 3445     	IOST	_IOSTA
                                    1- 3446     	.line	364, "main.c"; 	P_LED_SEG2_CLR;
     0086 1Crr                      1- 3447     	BCR	_PORTAbits,0
                                    1- 3448     	.line	365, "main.c"; 	P_LED_SEG2_OUTPUT;
     0087 001r                      1- 3449     	IOSTR	_IOSTA
     0088 00rr                      1- 3450     	MOVAR	r0x1031
     0089 1Crr                      1- 3451     	BCR	r0x1031,0
     008A 01rr                      1- 3452     	MOVR	r0x1031,W
     008B 000r                      1- 3453     	IOST	_IOSTA
                                    1- 3454     	.line	367, "main.c"; 	break;
                                    1- 3455     	MGOTO	_02113_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1- 3456     _02073_DS_:
                                    1- 3457     	.line	370, "main.c"; 	if (displayDecade & SEG_F) // 2F
                                    1- 3458     	BANKSEL	_displayDecade
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 0Arr                      1- 3459     	BTRSS	_displayDecade,5
                                    1- 3460     	MGOTO	_02113_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3461     	.line	372, "main.c"; 	P_LED_SEG5_SET;
     0090 1Brr                      1- 3462     	BSR	_PORTAbits,6
                                    1- 3463     	.line	373, "main.c"; 	P_LED_SEG5_OUTPUT;
     0091 001r                      1- 3464     	IOSTR	_IOSTA
                                    1- 3465     	BANKSEL	r0x1031
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 3466     	MOVAR	r0x1031
     0094 1Frr                      1- 3467     	BCR	r0x1031,6
     0095 01rr                      1- 3468     	MOVR	r0x1031,W
     0096 000r                      1- 3469     	IOST	_IOSTA
                                    1- 3470     	.line	374, "main.c"; 	P_LED_SEG3_CLR;
     0097 1Crr                      1- 3471     	BCR	_PORTAbits,1
                                    1- 3472     	.line	375, "main.c"; 	P_LED_SEG3_OUTPUT;
     0098 001r                      1- 3473     	IOSTR	_IOSTA
     0099 00rr                      1- 3474     	MOVAR	r0x1031
     009A 1Crr                      1- 3475     	BCR	r0x1031,1
     009B 01rr                      1- 3476     	MOVR	r0x1031,W
     009C 000r                      1- 3477     	IOST	_IOSTA
                                    1- 3478     	.line	377, "main.c"; 	break;
                                    1- 3479     	MGOTO	_02113_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
     009E                           1- 3480     _02076_DS_:
                                    1- 3481     	.line	380, "main.c"; 	if (displayDecade & SEG_G) // 2G
                                    1- 3482     	BANKSEL	_displayDecade
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 0Brr                      1- 3483     	BTRSS	_displayDecade,6
                                    1- 3484     	MGOTO	_02113_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3485     	.line	382, "main.c"; 	P_LED_SEG5_SET;
     00A1 1Brr                      1- 3486     	BSR	_PORTAbits,6
                                    1- 3487     	.line	383, "main.c"; 	P_LED_SEG5_OUTPUT;
     00A2 001r                      1- 3488     	IOSTR	_IOSTA
                                    1- 3489     	BANKSEL	r0x1031
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 00rr                      1- 3490     	MOVAR	r0x1031
     00A5 1Frr                      1- 3491     	BCR	r0x1031,6
     00A6 01rr                      1- 3492     	MOVR	r0x1031,W
     00A7 000r                      1- 3493     	IOST	_IOSTA
                                    1- 3494     	.line	384, "main.c"; 	P_LED_SEG4_CLR;
     00A8 1Frr                      1- 3495     	BCR	_PORTAbits,7
                                    1- 3496     	.line	385, "main.c"; 	P_LED_SEG4_OUTPUT;
     00A9 001r                      1- 3497     	IOSTR	_IOSTA
     00AA 00rr                      1- 3498     	MOVAR	r0x1031
     00AB 1Frr                      1- 3499     	BCR	r0x1031,7
     00AC 01rr                      1- 3500     	MOVR	r0x1031,W
     00AD 000r                      1- 3501     	IOST	_IOSTA
                                    1- 3502     	.line	387, "main.c"; 	break;
                                    1- 3503     	MGOTO	_02113_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 3504     _02079_DS_:
                                    1- 3505     	.line	390, "main.c"; 	if (displayDigit & SEG_A) // 3A
                                    1- 3506     	BANKSEL	_displayDigit
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 08rr                      1- 3507     	BTRSS	_displayDigit,0
                                    1- 3508     	MGOTO	_02113_DS_
     00B1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3509     	.line	392, "main.c"; 	P_LED_SEG1_SET;
     00B2 1Arr                      1- 3510     	BSR	_PORTBbits,5
                                    1- 3511     	.line	393, "main.c"; 	P_LED_SEG1_OUTPUT;
     00B3 001r                      1- 3512     	IOSTR	_IOSTB
                                    1- 3513     	BANKSEL	r0x1031
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3514     	MOVAR	r0x1031
     00B6 1Err                      1- 3515     	BCR	r0x1031,5
     00B7 01rr                      1- 3516     	MOVR	r0x1031,W
     00B8 000r                      1- 3517     	IOST	_IOSTB
                                    1- 3518     	.line	394, "main.c"; 	P_LED_SEG2_CLR;
     00B9 1Crr                      1- 3519     	BCR	_PORTAbits,0
                                    1- 3520     	.line	395, "main.c"; 	P_LED_SEG2_OUTPUT;
     00BA 001r                      1- 3521     	IOSTR	_IOSTA
     00BB 00rr                      1- 3522     	MOVAR	r0x1031
     00BC 1Crr                      1- 3523     	BCR	r0x1031,0
     00BD 01rr                      1- 3524     	MOVR	r0x1031,W
     00BE 000r                      1- 3525     	IOST	_IOSTA
                                    1- 3526     	.line	397, "main.c"; 	break;
                                    1- 3527     	MGOTO	_02113_DS_
     00BF 3rrr                      3-   62 m1      LGOTO rom_address
     00C0                           1- 3528     _02082_DS_:
                                    1- 3529     	.line	400, "main.c"; 	if (displayDigit & SEG_B) // 3B
                                    1- 3530     	BANKSEL	_displayDigit
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 08rr                      1- 3531     	BTRSS	_displayDigit,1
                                    1- 3532     	MGOTO	_02113_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3533     	.line	402, "main.c"; 	P_LED_SEG2_SET;
     00C3 18rr                      1- 3534     	BSR	_PORTAbits,0
                                    1- 3535     	.line	403, "main.c"; 	P_LED_SEG2_OUTPUT;
     00C4 001r                      1- 3536     	IOSTR	_IOSTA
                                    1- 3537     	BANKSEL	r0x1031
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 3538     	MOVAR	r0x1031
     00C7 1Crr                      1- 3539     	BCR	r0x1031,0
     00C8 01rr                      1- 3540     	MOVR	r0x1031,W
     00C9 000r                      1- 3541     	IOST	_IOSTA
                                    1- 3542     	.line	404, "main.c"; 	P_LED_SEG1_CLR;
     00CA 1Err                      1- 3543     	BCR	_PORTBbits,5
                                    1- 3544     	.line	405, "main.c"; 	P_LED_SEG1_OUTPUT;
     00CB 001r                      1- 3545     	IOSTR	_IOSTB
     00CC 00rr                      1- 3546     	MOVAR	r0x1031
     00CD 1Err                      1- 3547     	BCR	r0x1031,5
     00CE 01rr                      1- 3548     	MOVR	r0x1031,W
     00CF 000r                      1- 3549     	IOST	_IOSTB
                                    1- 3550     	.line	407, "main.c"; 	break;
                                    1- 3551     	MGOTO	_02113_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 3552     _02085_DS_:
                                    1- 3553     	.line	410, "main.c"; 	if (displayDigit & SEG_C) // 3C
                                    1- 3554     	BANKSEL	_displayDigit
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 09rr                      1- 3555     	BTRSS	_displayDigit,2
                                    1- 3556     	MGOTO	_02113_DS_
     00D3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3557     	.line	412, "main.c"; 	P_LED_SEG1_SET;
     00D4 1Arr                      1- 3558     	BSR	_PORTBbits,5
                                    1- 3559     	.line	413, "main.c"; 	P_LED_SEG1_OUTPUT;
     00D5 001r                      1- 3560     	IOSTR	_IOSTB
                                    1- 3561     	BANKSEL	r0x1031
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 00rr                      1- 3562     	MOVAR	r0x1031
     00D8 1Err                      1- 3563     	BCR	r0x1031,5
     00D9 01rr                      1- 3564     	MOVR	r0x1031,W
     00DA 000r                      1- 3565     	IOST	_IOSTB
                                    1- 3566     	.line	414, "main.c"; 	P_LED_SEG3_CLR;
     00DB 1Crr                      1- 3567     	BCR	_PORTAbits,1
                                    1- 3568     	.line	415, "main.c"; 	P_LED_SEG3_OUTPUT;
     00DC 001r                      1- 3569     	IOSTR	_IOSTA
     00DD 00rr                      1- 3570     	MOVAR	r0x1031
     00DE 1Crr                      1- 3571     	BCR	r0x1031,1
     00DF 01rr                      1- 3572     	MOVR	r0x1031,W
     00E0 000r                      1- 3573     	IOST	_IOSTA
                                    1- 3574     	.line	417, "main.c"; 	break;
                                    1- 3575     	MGOTO	_02113_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 3576     _02088_DS_:
                                    1- 3577     	.line	420, "main.c"; 	if (displayDigit & SEG_D) // 3D
                                    1- 3578     	BANKSEL	_displayDigit
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 09rr                      1- 3579     	BTRSS	_displayDigit,3
                                    1- 3580     	MGOTO	_02113_DS_
     00E4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3581     	.line	422, "main.c"; 	P_LED_SEG3_SET;
     00E5 18rr                      1- 3582     	BSR	_PORTAbits,1
                                    1- 3583     	.line	423, "main.c"; 	P_LED_SEG3_OUTPUT;
     00E6 001r                      1- 3584     	IOSTR	_IOSTA
                                    1- 3585     	BANKSEL	r0x1031
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 3586     	MOVAR	r0x1031
     00E9 1Crr                      1- 3587     	BCR	r0x1031,1
     00EA 01rr                      1- 3588     	MOVR	r0x1031,W
     00EB 000r                      1- 3589     	IOST	_IOSTA
                                    1- 3590     	.line	424, "main.c"; 	P_LED_SEG1_CLR;
     00EC 1Err                      1- 3591     	BCR	_PORTBbits,5
                                    1- 3592     	.line	425, "main.c"; 	P_LED_SEG1_OUTPUT;
     00ED 001r                      1- 3593     	IOSTR	_IOSTB
     00EE 00rr                      1- 3594     	MOVAR	r0x1031
     00EF 1Err                      1- 3595     	BCR	r0x1031,5
     00F0 01rr                      1- 3596     	MOVR	r0x1031,W
     00F1 000r                      1- 3597     	IOST	_IOSTB
                                    1- 3598     	.line	427, "main.c"; 	break;
                                    1- 3599     	MGOTO	_02113_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
     00F3                           1- 3600     _02091_DS_:
                                    1- 3601     	.line	430, "main.c"; 	if (displayDigit & SEG_E) // 3E
                                    1- 3602     	BANKSEL	_displayDigit
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 0Arr                      1- 3603     	BTRSS	_displayDigit,4
                                    1- 3604     	MGOTO	_02113_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3605     	.line	432, "main.c"; 	P_LED_SEG1_SET;
     00F6 1Arr                      1- 3606     	BSR	_PORTBbits,5
                                    1- 3607     	.line	433, "main.c"; 	P_LED_SEG1_OUTPUT;
     00F7 001r                      1- 3608     	IOSTR	_IOSTB
                                    1- 3609     	BANKSEL	r0x1031
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3610     	MOVAR	r0x1031
     00FA 1Err                      1- 3611     	BCR	r0x1031,5
     00FB 01rr                      1- 3612     	MOVR	r0x1031,W
     00FC 000r                      1- 3613     	IOST	_IOSTB
                                    1- 3614     	.line	434, "main.c"; 	P_LED_SEG4_CLR;
     00FD 1Frr                      1- 3615     	BCR	_PORTAbits,7
                                    1- 3616     	.line	435, "main.c"; 	P_LED_SEG4_OUTPUT;
     00FE 001r                      1- 3617     	IOSTR	_IOSTA
     00FF 00rr                      1- 3618     	MOVAR	r0x1031
     0100 1Frr                      1- 3619     	BCR	r0x1031,7
     0101 01rr                      1- 3620     	MOVR	r0x1031,W
     0102 000r                      1- 3621     	IOST	_IOSTA
                                    1- 3622     	.line	437, "main.c"; 	break;
                                    1- 3623     	MGOTO	_02113_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 3624     _02094_DS_:
                                    1- 3625     	.line	440, "main.c"; 	if (displayDigit & SEG_F) // 3F
                                    1- 3626     	BANKSEL	_displayDigit
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 0Arr                      1- 3627     	BTRSS	_displayDigit,5
                                    1- 3628     	MGOTO	_02113_DS_
     0106 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3629     	.line	442, "main.c"; 	P_LED_SEG4_SET;
     0107 1Brr                      1- 3630     	BSR	_PORTAbits,7
                                    1- 3631     	.line	443, "main.c"; 	P_LED_SEG4_OUTPUT;
     0108 001r                      1- 3632     	IOSTR	_IOSTA
                                    1- 3633     	BANKSEL	r0x1031
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 00rr                      1- 3634     	MOVAR	r0x1031
     010B 1Frr                      1- 3635     	BCR	r0x1031,7
     010C 01rr                      1- 3636     	MOVR	r0x1031,W
     010D 000r                      1- 3637     	IOST	_IOSTA
                                    1- 3638     	.line	444, "main.c"; 	P_LED_SEG1_CLR;
     010E 1Err                      1- 3639     	BCR	_PORTBbits,5
                                    1- 3640     	.line	445, "main.c"; 	P_LED_SEG1_OUTPUT;
     010F 001r                      1- 3641     	IOSTR	_IOSTB
     0110 00rr                      1- 3642     	MOVAR	r0x1031
     0111 1Err                      1- 3643     	BCR	r0x1031,5
     0112 01rr                      1- 3644     	MOVR	r0x1031,W
     0113 000r                      1- 3645     	IOST	_IOSTB
                                    1- 3646     	.line	447, "main.c"; 	break;
                                    1- 3647     	MGOTO	_02113_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
     0115                           1- 3648     _02097_DS_:
                                    1- 3649     	.line	450, "main.c"; 	if (displayDigit & SEG_G) // 3G OK
                                    1- 3650     	BANKSEL	_displayDigit
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 3651     	BTRSS	_displayDigit,6
                                    1- 3652     	MGOTO	_02113_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3653     	.line	452, "main.c"; 	P_LED_SEG5_SET;
     0118 1Brr                      1- 3654     	BSR	_PORTAbits,6
                                    1- 3655     	.line	453, "main.c"; 	P_LED_SEG5_OUTPUT;
     0119 001r                      1- 3656     	IOSTR	_IOSTA
                                    1- 3657     	BANKSEL	r0x1031
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 00rr                      1- 3658     	MOVAR	r0x1031
     011C 1Frr                      1- 3659     	BCR	r0x1031,6
     011D 01rr                      1- 3660     	MOVR	r0x1031,W
     011E 000r                      1- 3661     	IOST	_IOSTA
                                    1- 3662     	.line	454, "main.c"; 	P_LED_SEG1_CLR;
     011F 1Err                      1- 3663     	BCR	_PORTBbits,5
                                    1- 3664     	.line	455, "main.c"; 	P_LED_SEG1_OUTPUT;
     0120 001r                      1- 3665     	IOSTR	_IOSTB
     0121 00rr                      1- 3666     	MOVAR	r0x1031
     0122 1Err                      1- 3667     	BCR	r0x1031,5
     0123 01rr                      1- 3668     	MOVR	r0x1031,W
     0124 000r                      1- 3669     	IOST	_IOSTB
                                    1- 3670     	.line	457, "main.c"; 	break;
                                    1- 3671     	MGOTO	_02113_DS_
     0125 3rrr                      3-   62 m1      LGOTO rom_address
     0126                           1- 3672     _02100_DS_:
                                    1- 3673     	.line	460, "main.c"; 	if (displayHundred & SEG_B) // 1B OK
                                    1- 3674     	BANKSEL	_displayHundred
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 08rr                      1- 3675     	BTRSS	_displayHundred,1
                                    1- 3676     	MGOTO	_02113_DS_
     0128 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3677     	.line	462, "main.c"; 	P_LED_SEG3_SET;
     0129 18rr                      1- 3678     	BSR	_PORTAbits,1
                                    1- 3679     	.line	463, "main.c"; 	P_LED_SEG3_OUTPUT;
     012A 001r                      1- 3680     	IOSTR	_IOSTA
                                    1- 3681     	BANKSEL	r0x1031
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 3682     	MOVAR	r0x1031
     012D 1Crr                      1- 3683     	BCR	r0x1031,1
     012E 01rr                      1- 3684     	MOVR	r0x1031,W
     012F 000r                      1- 3685     	IOST	_IOSTA
                                    1- 3686     	.line	464, "main.c"; 	P_LED_SEG4_CLR;
     0130 1Frr                      1- 3687     	BCR	_PORTAbits,7
                                    1- 3688     	.line	465, "main.c"; 	P_LED_SEG4_OUTPUT;
     0131 001r                      1- 3689     	IOSTR	_IOSTA
     0132 00rr                      1- 3690     	MOVAR	r0x1031
     0133 1Frr                      1- 3691     	BCR	r0x1031,7
     0134 01rr                      1- 3692     	MOVR	r0x1031,W
     0135 000r                      1- 3693     	IOST	_IOSTA
                                    1- 3694     	.line	467, "main.c"; 	break;
                                    1- 3695     	MGOTO	_02113_DS_
     0136 3rrr                      3-   62 m1      LGOTO rom_address
     0137                           1- 3696     _02103_DS_:
                                    1- 3697     	.line	470, "main.c"; 	if (displayHundred & SEG_C) // 1C OK
                                    1- 3698     	BANKSEL	_displayHundred
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 09rr                      1- 3699     	BTRSS	_displayHundred,2
                                    1- 3700     	MGOTO	_02113_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3701     	.line	472, "main.c"; 	P_LED_SEG2_SET;
     013A 18rr                      1- 3702     	BSR	_PORTAbits,0
                                    1- 3703     	.line	473, "main.c"; 	P_LED_SEG2_OUTPUT;
     013B 001r                      1- 3704     	IOSTR	_IOSTA
                                    1- 3705     	BANKSEL	r0x1031
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 00rr                      1- 3706     	MOVAR	r0x1031
     013E 1Crr                      1- 3707     	BCR	r0x1031,0
     013F 01rr                      1- 3708     	MOVR	r0x1031,W
     0140 000r                      1- 3709     	IOST	_IOSTA
                                    1- 3710     	.line	474, "main.c"; 	P_LED_SEG4_CLR;
     0141 1Frr                      1- 3711     	BCR	_PORTAbits,7
                                    1- 3712     	.line	475, "main.c"; 	P_LED_SEG4_OUTPUT;
     0142 001r                      1- 3713     	IOSTR	_IOSTA
     0143 00rr                      1- 3714     	MOVAR	r0x1031
     0144 1Frr                      1- 3715     	BCR	r0x1031,7
     0145 01rr                      1- 3716     	MOVR	r0x1031,W
     0146 000r                      1- 3717     	IOST	_IOSTA
                                    1- 3718     	.line	478, "main.c"; 	break;
                                    1- 3719     	MGOTO	_02113_DS_
     0147 3rrr                      3-   62 m1      LGOTO rom_address
     0148                           1- 3720     _02106_DS_:
                                    1- 3721     	.line	493, "main.c"; 	if (displayHundred & SEG_D) // 1D quick
                                    1- 3722     	BANKSEL	_displayHundred
     0148 rrrr                      3-  109 m1      .banksel ram_address
     0149 09rr                      1- 3723     	BTRSS	_displayHundred,3
                                    1- 3724     	MGOTO	_02113_DS_
     014A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3725     	.line	495, "main.c"; 	P_LED_SEG3_SET;
     014B 18rr                      1- 3726     	BSR	_PORTAbits,1
                                    1- 3727     	.line	496, "main.c"; 	P_LED_SEG3_OUTPUT;
     014C 001r                      1- 3728     	IOSTR	_IOSTA
                                    1- 3729     	BANKSEL	r0x1031
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 00rr                      1- 3730     	MOVAR	r0x1031
     014F 1Crr                      1- 3731     	BCR	r0x1031,1
     0150 01rr                      1- 3732     	MOVR	r0x1031,W
     0151 000r                      1- 3733     	IOST	_IOSTA
                                    1- 3734     	.line	497, "main.c"; 	P_LED_SEG5_CLR;
     0152 1Frr                      1- 3735     	BCR	_PORTAbits,6
                                    1- 3736     	.line	498, "main.c"; 	P_LED_SEG5_OUTPUT;
     0153 001r                      1- 3737     	IOSTR	_IOSTA
     0154 00rr                      1- 3738     	MOVAR	r0x1031
     0155 1Frr                      1- 3739     	BCR	r0x1031,6
     0156 01rr                      1- 3740     	MOVR	r0x1031,W
     0157 000r                      1- 3741     	IOST	_IOSTA
                                    1- 3742     	.line	500, "main.c"; 	break;
                                    1- 3743     	MGOTO	_02113_DS_
     0158 3rrr                      3-   62 m1      LGOTO rom_address
     0159                           1- 3744     _02109_DS_:
                                    1- 3745     	.line	503, "main.c"; 	if (displayHundred & SEG_E) // 1E wireless
                                    1- 3746     	BANKSEL	_displayHundred
     0159 rrrr                      3-  109 m1      .banksel ram_address
     015A 0Arr                      1- 3747     	BTRSS	_displayHundred,4
                                    1- 3748     	MGOTO	_02113_DS_
     015B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3749     	.line	505, "main.c"; 	P_LED_SEG2_SET;
     015C 18rr                      1- 3750     	BSR	_PORTAbits,0
                                    1- 3751     	.line	506, "main.c"; 	P_LED_SEG2_OUTPUT;
     015D 001r                      1- 3752     	IOSTR	_IOSTA
                                    1- 3753     	BANKSEL	r0x1031
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 00rr                      1- 3754     	MOVAR	r0x1031
     0160 1Crr                      1- 3755     	BCR	r0x1031,0
     0161 01rr                      1- 3756     	MOVR	r0x1031,W
     0162 000r                      1- 3757     	IOST	_IOSTA
                                    1- 3758     	.line	507, "main.c"; 	P_LED_SEG5_CLR;
     0163 1Frr                      1- 3759     	BCR	_PORTAbits,6
                                    1- 3760     	.line	508, "main.c"; 	P_LED_SEG5_OUTPUT;
     0164 001r                      1- 3761     	IOSTR	_IOSTA
     0165 00rr                      1- 3762     	MOVAR	r0x1031
     0166 1Frr                      1- 3763     	BCR	r0x1031,6
     0167 01rr                      1- 3764     	MOVR	r0x1031,W
     0168 000r                      1- 3765     	IOST	_IOSTA
     0169                           1- 3766     _02113_DS_:
                                    1- 3767     	.line	515, "main.c"; 	indexScan++; //! 1ms 调用一次
                                    1- 3768     	BANKSEL	_io_led_scan_indexScan_65536_31
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 05rr                      1- 3769     	INCR	_io_led_scan_indexScan_65536_31,F
                                    1- 3770     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3771     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3772     	.line	546, "main.c"; 	if (indexScan > 17) //
     016B 2112                      1- 3773     	MOVIA	0x12
     016C 04rr                      1- 3774     	SUBAR	_io_led_scan_indexScan_65536_31,W
     016D 0C03                      1- 3775     	BTRSC	STATUS,0
                                    1- 3776     	.line	548, "main.c"; 	indexScan = 0;
     016E 02rr                      1- 3777     	CLRR	_io_led_scan_indexScan_65536_31
                                    1- 3778     	.line	550, "main.c"; 	}
                                    1- 3779     	RETURN	
     016F 0010                      3-   39 m1      ret
                                    1- 3781     ;***
                                    1- 3782     ;  pBlock Stats: dbName = C
                                    1- 3783     ;***
                                    1- 3784     ;has an exit
                                    1- 3785     ;1 compiler assigned register :
                                    1- 3786     ;   r0x101A
                                    1- 3787     ;; Starting pCode block
                                    1- 3788     .segment "code"; module=main, function=__dly_us
     0000                           1- 3790     __dly_us:
                                    1- 3791     ; 2 exit points
                                    1- 3792     	.line	299, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3793     	BANKSEL	r0x101A
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3794     	MOVAR	r0x101A
     0002                           1- 3795     _02050_DS_:
                                    1- 3796     	.line	301, "main.c"; 	while (cnt)
                                    1- 3797     	BANKSEL	r0x101A
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3798     	MOVR	r0x101A,W
     0004 0D03                      1- 3799     	BTRSC	STATUS,2
                                    1- 3800     	MGOTO	_02053_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3801     	.line	303, "main.c"; 	cnt--;
     0006 06rr                      1- 3802     	DECR	r0x101A,F
                                    1- 3803     	MGOTO	_02050_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3804     _02053_DS_:
                                    1- 3805     	.line	305, "main.c"; 	}
                                    1- 3806     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3807     ; exit point of __dly_us
                                    1- 3809     ;***
                                    1- 3810     ;  pBlock Stats: dbName = C
                                    1- 3811     ;***
                                    1- 3812     ;has an exit
                                    1- 3813     ;; Starting pCode block
                                    1- 3814     .segment "code"; module=main, function=_disable_breathing_mode
     0000                           1- 3816     _disable_breathing_mode:
                                    1- 3817     ; 2 exit points
                                    1- 3818     	.line	291, "main.c"; 	bFlag_is_breathing_mode = 0;
                                    1- 3819     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 1Crr                      1- 3820     	BCR	_vFlag_1,0
                                    1- 3821     	.line	292, "main.c"; 	indicator_light_mode = 0;
                                    1- 3822     	BANKSEL	_indicator_light_mode
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 3823     	CLRR	_indicator_light_mode
                                    1- 3824     	.line	293, "main.c"; 	P_LED_R_CLR;
     0004 1Err                      1- 3825     	BCR	_PORTBbits,4
                                    1- 3826     	.line	294, "main.c"; 	P_LED_G_CLR;
     0005 1Drr                      1- 3827     	BCR	_PORTBbits,3
                                    1- 3828     	.line	295, "main.c"; 	P_LED_B_CLR;
     0006 1Drr                      1- 3829     	BCR	_PORTBbits,2
                                    1- 3830     	.line	296, "main.c"; 	}
                                    1- 3831     	RETURN	
     0007 0010                      3-   39 m1      ret
                                    1- 3832     ; exit point of _disable_breathing_mode
                                    1- 3834     ;***
                                    1- 3835     ;  pBlock Stats: dbName = C
                                    1- 3836     ;***
                                    1- 3837     ;has an exit
                                    1- 3838     ;; Starting pCode block
                                    1- 3839     .segment "code"; module=main, function=_enable_breathing_mode
     0000                           1- 3841     _enable_breathing_mode:
                                    1- 3842     ; 2 exit points
                                    1- 3843     	.line	284, "main.c"; 	bFlag_is_breathing_mode = 1;
                                    1- 3844     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 18rr                      1- 3845     	BSR	_vFlag_1,0
                                    1- 3846     	.line	285, "main.c"; 	bFlag_inc_or_dec = 0;
     0002 1Crr                      1- 3847     	BCR	_vFlag_1,1
                                    1- 3848     	.line	286, "main.c"; 	indicator_light_mode = 0;
                                    1- 3849     	BANKSEL	_indicator_light_mode
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 3850     	CLRR	_indicator_light_mode
                                    1- 3851     	.line	287, "main.c"; 	}
                                    1- 3852     	RETURN	
     0005 0010                      3-   39 m1      ret
                                    1- 3853     ; exit point of _enable_breathing_mode
                                    1- 3856     ;	code size estimation:
                                    1- 3857     ;	 1603+  391 =  1994 instructions ( 4770 byte)
                                    1- 3859     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
