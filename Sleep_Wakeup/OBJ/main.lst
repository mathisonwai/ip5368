
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_PWM5RH
                                    1-   27     	extern	_PWM5DUTY
                                    1-   28     	extern	_P5CR1
                                    1-   29     	extern	_PWM4DUTY
                                    1-   30     	extern	_P4CR1
                                    1-   31     	extern	_PS3CV
                                    1-   32     	extern	_PWM3DUTY
                                    1-   33     	extern	_T3CR2
                                    1-   34     	extern	_T3CR1
                                    1-   35     	extern	_TMR3
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_PWM2DUTY
                                    1-   38     	extern	_P2CR1
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_STATUS
                                    1-   52     	extern	_PCL
                                    1-   53     	extern	_TMR0
                                    1-   54     	extern	_INTE2bits
                                    1-   55     	extern	_RFCbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_INTEbits
                                    1-   60     	extern	_BPHCONbits
                                    1-   61     	extern	_ABPLCONbits
                                    1-   62     	extern	_BWUCONbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_PORTBbits
                                    1-   65     	extern	_PORTAbits
                                    1-   66     	extern	__gptrget1
                                    1-   67     	extern	__nyc_ny8_startup
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     ; global declarations
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     	extern	_main
                                    1-   72     	extern	_app_display_all
                                    1-   73     	extern	_get_cap
                                    1-   74     	extern	_is_chg_or_dischg
                                    1-   75     	extern	_get_p_ext_int_status
                                    1-   76     	extern	_init_ip53xs
                                    1-   77     	extern	_ip55xs_read4Bytes
                                    1-   78     	extern	_ip55xs_write4Bytes
                                    1-   79     	extern	_ip53xs_readByte
                                    1-   80     	extern	_ip53xs_writeByte
                                    1-   81     	extern	_i2c_readByte
                                    1-   82     	extern	_i2c_writeByte
                                    1-   83     	extern	_i2c_send_nack
                                    1-   84     	extern	_i2c_send_ack
                                    1-   85     	extern	_i2c_chk_ack
                                    1-   86     	extern	_i2c_stop
                                    1-   87     	extern	_i2c_start
                                    1-   88     	extern	_gpioKeyScan
                                    1-   89     	extern	__dly_us
                                    1-   90     	extern	_disable_breathing_mode
                                    1-   91     	extern	_enable_breathing_mode
                                    1-   92     	extern	_isr
                                    1-   93     	extern	_RESPIRATION_LAMP_TABLE
                                    1-   94     	extern	_DispTable
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_RFC
                                    1-   97     	extern	_INTEDG
                                    1-   98     	extern	_AWUCON
                                    1-   99     	extern	_INTF
                                    1-  100     	extern	_INTE
                                    1-  101     	extern	_BPHCON
                                    1-  102     	extern	_ABPLCON
                                    1-  103     	extern	_BWUCON
                                    1-  104     	extern	_PCON
                                    1-  105     	extern	_PORTB
                                    1-  106     	extern	_PORTA
                                    1-  107     	extern	_gSysTick
                                    1-  108     	extern	_timer_slice_10ms
                                    1-  109     	extern	_displayDigit
                                    1-  110     	extern	_displayDecade
                                    1-  111     	extern	_displayHundred
                                    1-  112     	extern	_displayData
                                    1-  113     	extern	_forceDispTimer
                                    1-  114     	extern	_IP_DATA
                                    1-  115     	extern	_respiration_lamp_timer
                                    1-  116     	extern	_gpioKeyState
                                    1-  117     	extern	_gpioKeyWaitTimer
                                    1-  118     	extern	_timer_slice_16ms
                                    1-  119     	extern	_bat_level_buf
                                    1-  120     	extern	_delaySleepTimer
                                    1-  121     	extern	_displayTimer
                                    1-  122     	extern	_underVoltageDispTimer
                                    1-  123     	extern	_indicator_light_mode
                                    1-  124     	extern	_always_light_timer_shadow
                                    1-  125     	extern	_always_light_timer
                                    1-  126     	extern	_moto_work_mode
                                    1-  127     	extern	_vFlag_1
                                    1-  128     	extern	_vFlag_0
                                    1-  129     	extern	_io_led_scan
                                    1-  131     	extern PSAVE
                                    1-  132     	extern SSAVE
                                    1-  133     	extern WSAVE
                                    1-  134     	extern STK12
                                    1-  135     	extern STK11
                                    1-  136     	extern STK10
                                    1-  137     	extern STK09
                                    1-  138     	extern STK08
                                    1-  139     	extern STK07
                                    1-  140     	extern STK06
                                    1-  141     	extern STK05
                                    1-  142     	extern STK04
                                    1-  143     	extern STK03
                                    1-  144     	extern STK02
                                    1-  145     	extern STK01
                                    1-  146     	extern STK00
                                    1-  148     .segment "share_bank"
     0000                           1-  149     PSAVE:
                                    1-  150     	.res 1
                                    1-  151     .segment "share_bank"
     0000                           1-  152     SSAVE:
                                    1-  153     	.res 1
                                    1-  154     .segment "share_bank"
     0000                           1-  155     WSAVE:
                                    1-  156     	.res 1
                                    1-  157     .segment "share_bank"
     0000                           1-  158     STK12:
                                    1-  159     	.res 1
                                    1-  160     .segment "share_bank"
     0000                           1-  161     STK11:
                                    1-  162     	.res 1
                                    1-  163     .segment "share_bank"
     0000                           1-  164     STK10:
                                    1-  165     	.res 1
                                    1-  166     .segment "share_bank"
     0000                           1-  167     STK09:
                                    1-  168     	.res 1
                                    1-  169     .segment "share_bank"
     0000                           1-  170     STK08:
                                    1-  171     	.res 1
                                    1-  172     .segment "share_bank"
     0000                           1-  173     STK07:
                                    1-  174     	.res 1
                                    1-  175     .segment "share_bank"
     0000                           1-  176     STK06:
                                    1-  177     	.res 1
                                    1-  178     .segment "share_bank"
     0000                           1-  179     STK05:
                                    1-  180     	.res 1
                                    1-  181     .segment "share_bank"
     0000                           1-  182     STK04:
                                    1-  183     	.res 1
                                    1-  184     .segment "share_bank"
     0000                           1-  185     STK03:
                                    1-  186     	.res 1
                                    1-  187     .segment "share_bank"
     0000                           1-  188     STK02:
                                    1-  189     	.res 1
                                    1-  190     .segment "share_bank"
     0000                           1-  191     STK01:
                                    1-  192     	.res 1
                                    1-  193     .segment "share_bank"
     0000                           1-  194     STK00:
                                    1-  195     	.res 1
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; global definitions
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     .segment "uninit"
     0000                           1-  201     _vFlag_0:
                                    1-  202     	.res 1
                                    1-  205     .segment "uninit"
     0000                           1-  206     _vFlag_1:
                                    1-  207     	.res 1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _moto_work_mode:
                                    1-  212     	.res 1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _always_light_timer:
                                    1-  217     	.res 1
                                    1-  220     .segment "uninit"
     0000                           1-  221     _always_light_timer_shadow:
                                    1-  222     	.res 1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _indicator_light_mode:
                                    1-  227     	.res 1
                                    1-  230     .segment "uninit"
     0000                           1-  231     _underVoltageDispTimer:
                                    1-  232     	.res 1
                                    1-  235     .segment "uninit"
     0000                           1-  236     _displayTimer:
                                    1-  237     	.res 1
                                    1-  240     .segment "uninit"
     0000                           1-  241     _delaySleepTimer:
                                    1-  242     	.res 1
                                    1-  245     .segment "uninit"
     0000                           1-  246     _bat_level_buf:
                                    1-  247     	.res 1
                                    1-  250     .segment "uninit"
     0000                           1-  251     _timer_slice_16ms:
                                    1-  252     	.res 1
                                    1-  255     .segment "uninit"
     0000                           1-  256     _gpioKeyWaitTimer:
                                    1-  257     	.res 1
                                    1-  260     .segment "uninit"
     0000                           1-  261     _gpioKeyState:
                                    1-  262     	.res 1
                                    1-  265     .segment "uninit"
     0000                           1-  266     _respiration_lamp_timer:
                                    1-  267     	.res 1
                                    1-  270     .segment "uninit"
     0000                           1-  271     _IP_DATA:
                                    1-  272     	.res 4
                                    1-  275     .segment "uninit"
     0000                           1-  276     _forceDispTimer:
                                    1-  277     	.res 1
                                    1-  280     .segment "uninit"
     0000                           1-  281     _displayData:
                                    1-  282     	.res 1
                                    1-  285     .segment "uninit"
     0000                           1-  286     _displayHundred:
                                    1-  287     	.res 1
                                    1-  290     .segment "uninit"
     0000                           1-  291     _displayDecade:
                                    1-  292     	.res 1
                                    1-  295     .segment "uninit"
     0000                           1-  296     _displayDigit:
                                    1-  297     	.res 1
                                    1-  300     .segment "uninit"
     0000                           1-  301     _timer_slice_10ms:
                                    1-  302     	.res 1
                                    1-  305     .segment "uninit"
     0000                           1-  306     _gSysTick:
                                    1-  307     	.res 1
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; absolute symbol definitions
                                    1-  312     ;--------------------------------------------------------
                                    1-  313     ;--------------------------------------------------------
                                    1-  314     ; compiler-defined variables
                                    1-  315     ;--------------------------------------------------------
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1032:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1033:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x101A:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1031:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x101B:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x101C:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x101D:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x101E:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x101F:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x1020:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1021:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1022:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1024:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1023:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1027:
                                    1-  360     	.res	1
                                    1-  361     .segment "uninit"
     0000                           1-  362     r0x1026:
                                    1-  363     	.res	1
                                    1-  364     .segment "uninit"
     0000                           1-  365     r0x1025:
                                    1-  366     	.res	1
                                    1-  367     .segment "uninit"
     0000                           1-  368     r0x102E:
                                    1-  369     	.res	1
                                    1-  370     .segment "uninit"
     0000                           1-  371     r0x102A:
                                    1-  372     	.res	1
                                    1-  373     .segment "uninit"
     0000                           1-  374     r0x1028:
                                    1-  375     	.res	1
                                    1-  376     .segment "uninit"
     0000                           1-  377     r0x102D:
                                    1-  378     	.res	1
                                    1-  379     .segment "uninit"
     0000                           1-  380     _isr_timerCnt_65536_5:
                                    1-  381     	.res	1
                                    1-  383     .segment "uninit"
     0000                           1-  384     _isr_respiration_lamp_series_65536_5:
                                    1-  385     	.res	1
                                    1-  387     .segment "uninit"
     0000                           1-  388     _isr_led_lamp_65536_5:
                                    1-  389     	.res	1
                                    1-  391     .segment "uninit"
     0000                           1-  392     ___sdcc_saved_fsr:
                                    1-  393     	.res	1
                                    1-  395     .segment "uninit"
     0000                           1-  396     ___sdcc_saved_stk00:
                                    1-  397     	.res	1
                                    1-  399     .segment "uninit"
     0000                           1-  400     ___sdcc_saved_stk01:
                                    1-  401     	.res	1
                                    1-  403     .segment "uninit"
     0000                           1-  404     _get_p_ext_int_status_counter_65536_115:
                                    1-  405     	.res	1
                                    1-  407     .segment "uninit"
     0000                           1-  408     _is_chg_or_dischg_counter_65536_125:
                                    1-  409     	.res	1
                                    1-  411     ;--------------------------------------------------------
                                    1-  412     ; initialized data
                                    1-  413     ;--------------------------------------------------------
                                    1-  415     .segment "idata"
     0000                           1-  416     _io_led_scan_indexScan_65536_30:
     0000 0000                      1-  419     	dw	0x00	; 0
                                    1-  422     .segment "code"
     0000                           1-  423     _DispTable:
     0000 203F                      1-  424     	retia 0x3f	; 63
     0001 2006                      1-  425     	retia 0x06	; 6
     0002 205B                      1-  426     	retia 0x5b	; 91
     0003 204F                      1-  427     	retia 0x4f	; 79	'O'
     0004 2066                      1-  428     	retia 0x66	; 102	'f'
     0005 206D                      1-  429     	retia 0x6d	; 109	'm'
     0006 207D                      1-  430     	retia 0x7d	; 125
     0007 2007                      1-  431     	retia 0x07	; 7
     0008 207F                      1-  432     	retia 0x7f	; 127
     0009 206F                      1-  433     	retia 0x6f	; 111	'o'
     000A 2079                      1-  434     	retia 0x79	; 121	'y'
     000B 2050                      1-  435     	retia 0x50	; 80	'P'
     000C 2076                      1-  436     	retia 0x76	; 118	'v'
     000D 2000                      1-  437     	retia 0x00	; 0
                                    1-  439     .segment "code"
     0000                           1-  440     _RESPIRATION_LAMP_TABLE:
     0000 2001                      1-  441     	retia 0x01	; 1
     0001 2001                      1-  442     	retia 0x01	; 1
     0002 2001                      1-  443     	retia 0x01	; 1
     0003 2001                      1-  444     	retia 0x01	; 1
     0004 2001                      1-  445     	retia 0x01	; 1
     0005 2002                      1-  446     	retia 0x02	; 2
     0006 2002                      1-  447     	retia 0x02	; 2
     0007 2002                      1-  448     	retia 0x02	; 2
     0008 2002                      1-  449     	retia 0x02	; 2
     0009 2002                      1-  450     	retia 0x02	; 2
     000A 2002                      1-  451     	retia 0x02	; 2
     000B 2002                      1-  452     	retia 0x02	; 2
     000C 2002                      1-  453     	retia 0x02	; 2
     000D 2003                      1-  454     	retia 0x03	; 3
     000E 2003                      1-  455     	retia 0x03	; 3
     000F 2003                      1-  456     	retia 0x03	; 3
     0010 2003                      1-  457     	retia 0x03	; 3
     0011 2003                      1-  458     	retia 0x03	; 3
     0012 2004                      1-  459     	retia 0x04	; 4
     0013 2004                      1-  460     	retia 0x04	; 4
     0014 2004                      1-  461     	retia 0x04	; 4
     0015 2005                      1-  462     	retia 0x05	; 5
     0016 2005                      1-  463     	retia 0x05	; 5
     0017 2005                      1-  464     	retia 0x05	; 5
     0018 2006                      1-  465     	retia 0x06	; 6
     0019 2006                      1-  466     	retia 0x06	; 6
     001A 2006                      1-  467     	retia 0x06	; 6
     001B 2007                      1-  468     	retia 0x07	; 7
     001C 2007                      1-  469     	retia 0x07	; 7
     001D 2008                      1-  470     	retia 0x08	; 8
     001E 2009                      1-  471     	retia 0x09	; 9
     001F 2009                      1-  472     	retia 0x09	; 9
     0020 200A                      1-  473     	retia 0x0a	; 10
     0021 200B                      1-  474     	retia 0x0b	; 11
     0022 200B                      1-  475     	retia 0x0b	; 11
     0023 200C                      1-  476     	retia 0x0c	; 12
     0024 200D                      1-  477     	retia 0x0d	; 13
     0025 200E                      1-  478     	retia 0x0e	; 14
     0026 200F                      1-  479     	retia 0x0f	; 15
     0027 2010                      1-  480     	retia 0x10	; 16
     0028 2011                      1-  481     	retia 0x11	; 17
     0029 2012                      1-  482     	retia 0x12	; 18
     002A 2014                      1-  483     	retia 0x14	; 20
     002B 2015                      1-  484     	retia 0x15	; 21
     002C 2017                      1-  485     	retia 0x17	; 23
     002D 2018                      1-  486     	retia 0x18	; 24
     002E 201A                      1-  487     	retia 0x1a	; 26
     002F 201C                      1-  488     	retia 0x1c	; 28
     0030 201E                      1-  489     	retia 0x1e	; 30
     0031 2020                      1-  490     	retia 0x20	; 32
     0032 2022                      1-  491     	retia 0x22	; 34
     0033 2025                      1-  492     	retia 0x25	; 37
     0034 2027                      1-  493     	retia 0x27	; 39
     0035 202A                      1-  494     	retia 0x2a	; 42
     0036 202D                      1-  495     	retia 0x2d	; 45
     0037 2030                      1-  496     	retia 0x30	; 48	'0'
     0038 2034                      1-  497     	retia 0x34	; 52	'4'
     0039 2038                      1-  498     	retia 0x38	; 56	'8'
     003A 203C                      1-  499     	retia 0x3c	; 60
     003B 2040                      1-  500     	retia 0x40	; 64
     003C 2044                      1-  501     	retia 0x44	; 68	'D'
     003D 2049                      1-  502     	retia 0x49	; 73	'I'
     003E 204F                      1-  503     	retia 0x4f	; 79	'O'
     003F 2054                      1-  504     	retia 0x54	; 84	'T'
     0040 205A                      1-  505     	retia 0x5a	; 90	'Z'
     0041 2061                      1-  506     	retia 0x61	; 97	'a'
     0042 2068                      1-  507     	retia 0x68	; 104	'h'
     0043 206F                      1-  508     	retia 0x6f	; 111	'o'
     0044 2077                      1-  509     	retia 0x77	; 119	'w'
     0045 2080                      1-  510     	retia 0x80	; 128
     0046 2089                      1-  511     	retia 0x89	; 137
     0047 2093                      1-  512     	retia 0x93	; 147
     0048 209D                      1-  513     	retia 0x9d	; 157
     0049 20A8                      1-  514     	retia 0xa8	; 168
     004A 20B4                      1-  515     	retia 0xb4	; 180
     004B 20C1                      1-  516     	retia 0xc1	; 193
     004C 20CF                      1-  517     	retia 0xcf	; 207
     004D 20DE                      1-  518     	retia 0xde	; 222
     004E 20EE                      1-  519     	retia 0xee	; 238
     004F 20FF                      1-  520     	retia 0xff	; 255
     0050 20FF                      1-  521     	retia 0xff	; 255
                                    1-  522     ;--------------------------------------------------------
                                    1-  523     ; initialized absolute data
                                    1-  524     ;--------------------------------------------------------
                                    1-  525     ;--------------------------------------------------------
                                    1-  526     ; overlayable items in internal ram 
                                    1-  527     ;--------------------------------------------------------
                                    1-  528     ;	udata_ovr
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ; reset vector 
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ORG	0x0000
     0000 3rrr                      1-  533     	LGOTO	__nyc_ny8_startup
                                    1-  534     ;--------------------------------------------------------
                                    1-  535     ; interrupt and initialization code
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ORG 0x0008
                                    1-  538     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  540     .segment "code"
     0000                           1-  541     __sdcc_interrupt:
                                    1-  542     ;***
                                    1-  543     ;  pBlock Stats: dbName = I
                                    1-  544     ;***
                                    1-  545     ;functions called:
                                    1-  546     ;   _io_led_scan
                                    1-  547     ;   __gptrget1
                                    1-  548     ;   _io_led_scan
                                    1-  549     ;   __gptrget1
                                    1-  550     ;4 compiler assigned registers:
                                    1-  551     ;   STK00
                                    1-  552     ;   STK01
                                    1-  553     ;   r0x1032
                                    1-  554     ;   r0x1033
                                    1-  555     ;; Starting pCode block
     0000                           1-  556     _isr:
                                    1-  557     ; 0 exit points
                                    1-  558     	.line	189, "main.c"; 	void isr(void) __interrupt(0) // 64us  8MHz 2T
     0000 00rr                      1-  559     	MOVAR	WSAVE
     0001 1503                      1-  560     	SWAPR	STATUS,W
     0002 0283                      1-  561     	CLRR	STATUS
     0003 00rr                      1-  562     	MOVAR	SSAVE
     0004 010A                      1-  563     	MOVR	PCHBUF,W
     0005 028A                      1-  564     	CLRR	PCHBUF
     0006 00rr                      1-  565     	MOVAR	PSAVE
     0007 0104                      1-  566     	MOVR	FSR,W
                                    1-  567     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  568     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  569     	MOVR	STK00,W
                                    1-  570     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  571     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  572     	MOVR	STK01,W
                                    1-  573     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  574     	MOVAR	___sdcc_saved_stk01
                                    1-  575     	.line	195, "main.c"; 	if (TM0IF)
     0010 08rr                      1-  576     	BTRSS	_INTFbits,0
                                    1-  577     	MGOTO	_02032_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  578     	.line	197, "main.c"; 	TM0IF = 0;
     0012 21FE                      1-  579     	MOVIA	0xfe
     0013 00rr                      1-  580     	MOVAR	(_INTFbits + 0)
                                    1-  581     	.line	202, "main.c"; 	timerCnt++;
                                    1-  582     	BANKSEL	_isr_timerCnt_65536_5
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1-  583     	INCR	_isr_timerCnt_65536_5,F
                                    1-  584     	.line	204, "main.c"; 	if (!(timerCnt & 0x0F))
     0016 01rr                      1-  585     	MOVR	_isr_timerCnt_65536_5,W
     0017 220F                      1-  586     	ANDIA	0x0f
     0018 0903                      1-  587     	BTRSS	STATUS,2
                                    1-  588     	MGOTO	_02008_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  589     	.line	208, "main.c"; 	bFlag_gSysTick_Change = 1; // 1ms
                                    1-  590     	BANKSEL	_vFlag_0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 18rr                      1-  591     	BSR	_vFlag_0,0
                                    1-  592     	.line	210, "main.c"; 	if (!(timerCnt))
                                    1-  593     	BANKSEL	_isr_timerCnt_65536_5
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1-  594     	MOVR	_isr_timerCnt_65536_5,W
     001E 0903                      1-  595     	BTRSS	STATUS,2
                                    1-  596     	MGOTO	_00015_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  597     	.line	213, "main.c"; 	bFlag_slice_16ms = 1;
                                    1-  598     	BANKSEL	_vFlag_0
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 18rr                      1-  599     	BSR	_vFlag_0,1
     0022                           1-  600     _00015_DS_:
                                    1-  601     	.line	215, "main.c"; 	io_led_scan();
                                    1-  602     	MCALL	_io_led_scan
     0022 2rrr                      3-   65 m1      LCALL rom_address
     0023                           1-  603     _02008_DS_:
                                    1-  604     	.line	218, "main.c"; 	if (bFlag_is_breathing_mode) // 100us
                                    1-  605     	BANKSEL	_vFlag_1
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 08rr                      1-  606     	BTRSS	_vFlag_1,0
                                    1-  607     	MGOTO	_02032_DS_
     0025 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  608     	.line	220, "main.c"; 	respiration_lamp_timer++;
                                    1-  609     	BANKSEL	_respiration_lamp_timer
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 01rr                      1-  610     	MOVR	_respiration_lamp_timer,W
                                    1-  611     	BANKSEL	r0x1032
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 00rr                      1-  612     	MOVAR	r0x1032
     002A 05rr                      1-  613     	INCR	r0x1032,W
                                    1-  614     	BANKSEL	_respiration_lamp_timer
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 00rr                      1-  615     	MOVAR	_respiration_lamp_timer
                                    1-  616     	.line	222, "main.c"; 	if (!(respiration_lamp_timer))
     002D 01rr                      1-  617     	MOVR	_respiration_lamp_timer,W
     002E 0903                      1-  618     	BTRSS	STATUS,2
                                    1-  619     	MGOTO	_02019_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  620     	.line	224, "main.c"; 	if (bFlag_inc_or_dec)
                                    1-  621     	BANKSEL	_vFlag_1
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 08rr                      1-  622     	BTRSS	_vFlag_1,1
                                    1-  623     	MGOTO	_02016_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  624     	.line	226, "main.c"; 	if (!(--respiration_lamp_series))
                                    1-  625     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 17rr                      1-  626     	DECRSZ	_isr_respiration_lamp_series_65536_5,F
                                    1-  627     	MGOTO	_02017_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  628     	.line	228, "main.c"; 	bFlag_inc_or_dec = 0;
                                    1-  629     	BANKSEL	_vFlag_1
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 1Crr                      1-  630     	BCR	_vFlag_1,1
                                    1-  631     	.line	230, "main.c"; 	if (++indicator_light_mode > 2)
                                    1-  632     	BANKSEL	_indicator_light_mode
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 05rr                      1-  633     	INCR	_indicator_light_mode,W
                                    1-  634     	BANKSEL	r0x1032
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 00rr                      1-  635     	MOVAR	r0x1032
                                    1-  636     	BANKSEL	_indicator_light_mode
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 00rr                      1-  637     	MOVAR	_indicator_light_mode
                                    1-  638     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  639     ;;unsigned compare: left >= lit(0x3=3), size=1
     003E 2103                      1-  640     	MOVIA	0x03
                                    1-  641     	BANKSEL	r0x1032
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 04rr                      1-  642     	SUBAR	r0x1032,W
     0041 0803                      1-  643     	BTRSS	STATUS,0
                                    1-  644     	MGOTO	_02017_DS_
     0042 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  645     	.line	232, "main.c"; 	indicator_light_mode = 0;
                                    1-  646     	BANKSEL	_indicator_light_mode
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 02rr                      1-  647     	CLRR	_indicator_light_mode
                                    1-  648     	MGOTO	_02017_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1-  649     _02016_DS_:
                                    1-  650     	.line	238, "main.c"; 	if (++respiration_lamp_series >= CONST_RESPIRATION_LAMP_SERIES)
                                    1-  651     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 05rr                      1-  652     	INCR	_isr_respiration_lamp_series_65536_5,F
                                    1-  653     ;;unsigned compare: left < lit(0x50=80), size=1
     0048 2150                      1-  654     	MOVIA	0x50
     0049 04rr                      1-  655     	SUBAR	_isr_respiration_lamp_series_65536_5,W
     004A 0803                      1-  656     	BTRSS	STATUS,0
                                    1-  657     	MGOTO	_02017_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  658     	.line	240, "main.c"; 	respiration_lamp_series = CONST_RESPIRATION_LAMP_SERIES;
     004C 2150                      1-  659     	MOVIA	0x50
     004D 00rr                      1-  660     	MOVAR	_isr_respiration_lamp_series_65536_5
                                    1-  661     	.line	241, "main.c"; 	bFlag_inc_or_dec = 1;
                                    1-  662     	BANKSEL	_vFlag_1
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 18rr                      1-  663     	BSR	_vFlag_1,1
     0050                           1-  664     _02017_DS_:
                                    1-  665     	.line	245, "main.c"; 	led_lamp = RESPIRATION_LAMP_TABLE[respiration_lamp_series];
                                    1-  666     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 01rr                      1-  667     	MOVR	_isr_respiration_lamp_series_65536_5,W
     0052 25rr                      1-  668     	ADDIA	(_RESPIRATION_LAMP_TABLE + 0)
                                    1-  669     	BANKSEL	r0x1032
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 00rr                      1-  670     	MOVAR	r0x1032
     0055 21rr                      1-  671     	MOVIA	((_RESPIRATION_LAMP_TABLE + 0) >> 8) & 0xff
     0056 2600                      1-  672     	ADCIA	0x00
                                    1-  673     	BANKSEL	r0x1033
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1-  674     	MOVAR	r0x1033
                                    1-  675     	BANKSEL	r0x1032
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1-  676     	MOVR	r0x1032,W
     005B 00rr                      1-  677     	MOVAR	STK01
                                    1-  678     	BANKSEL	r0x1033
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1-  679     	MOVR	r0x1033,W
     005E 00rr                      1-  680     	MOVAR	STK00
     005F 2180                      1-  681     	MOVIA	0x80
                                    1-  682     	MCALL	__gptrget1
     0060 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  683     	BANKSEL	_isr_led_lamp_65536_5
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 00rr                      1-  684     	MOVAR	_isr_led_lamp_65536_5
     0063                           1-  685     _02019_DS_:
                                    1-  686     	.line	248, "main.c"; 	if (respiration_lamp_timer >= led_lamp)
                                    1-  687     	BANKSEL	_isr_led_lamp_65536_5
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 01rr                      1-  688     	MOVR	_isr_led_lamp_65536_5,W
                                    1-  689     	BANKSEL	_respiration_lamp_timer
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 04rr                      1-  690     	SUBAR	_respiration_lamp_timer,W
     0067 0803                      1-  691     	BTRSS	STATUS,0
                                    1-  692     	MGOTO	_02027_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  693     	.line	250, "main.c"; 	P_LED_R_OFF;
     0069 1Err                      1-  694     	BCR	_PORTBbits,4
                                    1-  695     	.line	252, "main.c"; 	P_LED_B_OFF; // white led
     006A 1Drr                      1-  696     	BCR	_PORTBbits,2
                                    1-  697     	MGOTO	_02032_DS_
     006B 3rrr                      3-   62 m1      LGOTO rom_address
     006C                           1-  698     _02027_DS_:
                                    1-  699     	.line	256, "main.c"; 	if (0x01 == indicator_light_mode)
                                    1-  700     	BANKSEL	_indicator_light_mode
     006C rrrr                      3-  109 m1      .banksel ram_address
     006D 01rr                      1-  701     	MOVR	_indicator_light_mode,W
     006E 2401                      1-  702     	XORIA	0x01
     006F 0903                      1-  703     	BTRSS	STATUS,2
                                    1-  704     	MGOTO	_02024_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  705     	.line	258, "main.c"; 	P_LED_B_ON; // white
     0071 19rr                      1-  706     	BSR	_PORTBbits,2
                                    1-  707     	MGOTO	_02032_DS_
     0072 3rrr                      3-   62 m1      LGOTO rom_address
     0073                           1-  708     _02024_DS_:
                                    1-  709     	.line	260, "main.c"; 	else if (0x02 == indicator_light_mode)
                                    1-  710     	BANKSEL	_indicator_light_mode
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 01rr                      1-  711     	MOVR	_indicator_light_mode,W
     0075 2402                      1-  712     	XORIA	0x02
     0076 0903                      1-  713     	BTRSS	STATUS,2
                                    1-  714     	.line	266, "main.c"; 	P_LED_R_ON; // orange
     0077 1Arr                      1-  715     	BSR	_PORTBbits,4
     0078                           1-  716     _02032_DS_:
                                    1-  717     	.line	272, "main.c"; 	if (INTFbits.PABIF)
     0078 08rr                      1-  718     	BTRSS	_INTFbits,1
                                    1-  719     	MGOTO	_02035_DS_
     0079 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  720     	.line	274, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     007A 21FD                      1-  721     	MOVIA	0xfd
     007B 00rr                      1-  722     	MOVAR	(_INTFbits + 0)
     007C                           1-  723     _02035_DS_:
                                    1-  724     	.line	276, "main.c"; 	}
                                    1-  725     	BANKSEL	___sdcc_saved_stk01
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 01rr                      1-  726     	MOVR	___sdcc_saved_stk01,W
     007E 00rr                      1-  727     	MOVAR	STK01
                                    1-  728     	BANKSEL	___sdcc_saved_stk00
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1-  729     	MOVR	___sdcc_saved_stk00,W
     0081 00rr                      1-  730     	MOVAR	STK00
                                    1-  731     	BANKSEL	___sdcc_saved_fsr
     0082 rrrr                      3-  109 m1      .banksel ram_address
     0083 01rr                      1-  732     	MOVR	___sdcc_saved_fsr,W
     0084 0084                      1-  733     	MOVAR	FSR
     0085 01rr                      1-  734     	MOVR	PSAVE,W
     0086 008A                      1-  735     	MOVAR	PCHBUF
     0087 0283                      1-  736     	CLRR	STATUS
     0088 15rr                      1-  737     	SWAPR	SSAVE,W
     0089 0083                      1-  738     	MOVAR	STATUS
     008A 15rr                      1-  739     	SWAPR	WSAVE,F
     008B 15rr                      1-  740     	SWAPR	WSAVE,W
     008C                           1-  741     END_OF_INTERRUPT:
     008C 0011                      1-  742     	RETIE	
                                    1-  744     ;--------------------------------------------------------
                                    1-  745     ; code
                                    1-  746     ;--------------------------------------------------------
                                    1-  747     ; code_main	code
                                    1-  748     ;***
                                    1-  749     ;  pBlock Stats: dbName = M
                                    1-  750     ;***
                                    1-  751     ;has an exit
                                    1-  752     ;functions called:
                                    1-  753     ;   _gpioKeyScan
                                    1-  754     ;   _get_p_ext_int_status
                                    1-  755     ;   _is_chg_or_dischg
                                    1-  756     ;   _get_cap
                                    1-  757     ;   _app_display_all
                                    1-  758     ;   _gpioKeyScan
                                    1-  759     ;   _get_p_ext_int_status
                                    1-  760     ;   _is_chg_or_dischg
                                    1-  761     ;   _get_cap
                                    1-  762     ;   _app_display_all
                                    1-  763     ;1 compiler assigned register :
                                    1-  764     ;   r0x102D
                                    1-  765     ;; Starting pCode block
                                    1-  766     .segment "code"; module=main, function=_main
     0000                           1-  768     _main:
                                    1-  769     ; 2 exit points
                                    1-  770     	.line	1345, "main.c"; 	DISI();
     0000 0013                      1-  771     	DISI
                                    1-  772     	.line	1347, "main.c"; 	BPHCON = (unsigned char)~C_PB0_PHB; // Enable PB1 Pull-High resistor
     0001 21FE                      1-  773     	MOVIA	0xfe
     0002 00rr                      1-  774     	MOVAR	_BPHCON
                                    1-  775     	.line	1348, "main.c"; 	BWUCON = C_PB0_Wakeup;              // Enable PB1 input change wakeup function
     0003 2101                      1-  776     	MOVIA	0x01
     0004 00rr                      1-  777     	MOVAR	_BWUCON
                                    1-  778     	.line	1350, "main.c"; 	IOSTA = 0xFF;
     0005 21FF                      1-  779     	MOVIA	0xff
     0006 000r                      1-  780     	IOST	_IOSTA
                                    1-  781     	.line	1351, "main.c"; 	IOSTB = 0xFF;
     0007 000r                      1-  782     	IOST	_IOSTB
                                    1-  783     	.line	1353, "main.c"; 	PORTA = 0x00; // PORTB data buffer=0x00
     0008 02rr                      1-  784     	CLRR	_PORTA
                                    1-  785     	.line	1354, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1-  786     	CLRR	_PORTB
                                    1-  787     	.line	1356, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     000A 2102                      1-  788     	MOVIA	0x02
     000B 00rr                      1-  789     	MOVAR	_INTE
                                    1-  790     	.line	1357, "main.c"; 	INTF = 0x00;         // Clear all interrupt flags
     000C 02rr                      1-  791     	CLRR	_INTF
                                    1-  792     	.line	1360, "main.c"; 	OSCCR = C_FLOSC_Sel; // OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     000D 0200                      1-  793     	CLRA	
     000E 00rr                      1-  795     	SFUN	_OSCCR
     000F 0000                      1-  796     	NOP	
                                    1-  797     	.line	1363, "main.c"; 	OSCCR = C_FHOSC_Sel; // OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     0010 2101                      1-  798     	MOVIA	0x01
     0011 00rr                      1-  800     	SFUN	_OSCCR
     0012 0000                      1-  801     	NOP	
                                    1-  802     	.line	1378, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     0013 0200                      1-  803     	CLRA	
     0014 000r                      1-  804     	IOST	_PCON1
                                    1-  805     	.line	1381, "main.c"; 	T0MD = 0x0F; // 8M,2T  Prescaler0 to wdt,
     0015 210F                      1-  806     	MOVIA	0x0f
     0016 0003                      1-  807     	T0MD	
                                    1-  808     	.line	1390, "main.c"; 	INTE = 0x01; // Timer0 overflow interrupt enable bit
     0017 2101                      1-  809     	MOVIA	0x01
     0018 00rr                      1-  810     	MOVAR	_INTE
                                    1-  811     	.line	1393, "main.c"; 	PCON = 0xC8; //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0019 21C8                      1-  812     	MOVIA	0xc8
     001A 00rr                      1-  813     	MOVAR	_PCON
                                    1-  814     	.line	1395, "main.c"; 	PCON1 = 0x01; //  C_TMR0_En;                          // Enable Timer0
     001B 2101                      1-  815     	MOVIA	0x01
     001C 000r                      1-  816     	IOST	_PCON1
                                    1-  817     	.line	1396, "main.c"; 	ENI();
     001D 0004                      1-  818     	ENI
                                    1-  819     	.line	1398, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     001E 2114                      1-  820     	MOVIA	0x14
                                    1-  821     	BANKSEL	_delaySleepTimer
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1-  822     	MOVAR	_delaySleepTimer
                                    1-  823     	.line	1399, "main.c"; 	bFlag_power_on = 1;
                                    1-  824     	BANKSEL	_vFlag_1
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 1Arr                      1-  825     	BSR	_vFlag_1,4
                                    1-  826     	.line	1404, "main.c"; 	forceDispTimer = 20;
     0023 2114                      1-  827     	MOVIA	0x14
                                    1-  828     	BANKSEL	_forceDispTimer
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1-  829     	MOVAR	_forceDispTimer
                                    1-  830     	.line	1405, "main.c"; 	P_LED_R_OUTPUT;
     0026 001r                      1-  831     	IOSTR	_IOSTB
                                    1-  832     	BANKSEL	r0x102D
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1-  833     	MOVAR	r0x102D
     0029 1Err                      1-  834     	BCR	r0x102D,4
     002A 01rr                      1-  835     	MOVR	r0x102D,W
     002B 000r                      1-  836     	IOST	_IOSTB
                                    1-  837     	.line	1406, "main.c"; 	P_LED_R_OFF;
     002C 1Err                      1-  838     	BCR	_PORTBbits,4
                                    1-  839     	.line	1407, "main.c"; 	P_LED_G_OUTPUT;
     002D 001r                      1-  840     	IOSTR	_IOSTB
     002E 00rr                      1-  841     	MOVAR	r0x102D
     002F 1Drr                      1-  842     	BCR	r0x102D,3
     0030 01rr                      1-  843     	MOVR	r0x102D,W
     0031 000r                      1-  844     	IOST	_IOSTB
                                    1-  845     	.line	1408, "main.c"; 	P_LED_G_OFF;
     0032 1Drr                      1-  846     	BCR	_PORTBbits,3
                                    1-  847     	.line	1409, "main.c"; 	P_LED_B_OUTPUT;
     0033 001r                      1-  848     	IOSTR	_IOSTB
     0034 00rr                      1-  849     	MOVAR	r0x102D
     0035 1Drr                      1-  850     	BCR	r0x102D,2
     0036 01rr                      1-  851     	MOVR	r0x102D,W
     0037 000r                      1-  852     	IOST	_IOSTB
                                    1-  853     	.line	1410, "main.c"; 	P_LED_B_OFF;
     0038 1Drr                      1-  854     	BCR	_PORTBbits,2
                                    1-  855     	.line	1412, "main.c"; 	displayTimer = CONST_TIMER_DISP;
     0039 2114                      1-  856     	MOVIA	0x14
                                    1-  857     	BANKSEL	_displayTimer
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 00rr                      1-  858     	MOVAR	_displayTimer
     003C                           1-  859     _02576_DS_:
                                    1-  860     	.line	1416, "main.c"; 	CLRWDT();
     003C 0002                      1-  861     	clrwdt
                                    1-  862     	.line	1417, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  863     	BANKSEL	_vFlag_0
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 08rr                      1-  864     	BTRSS	_vFlag_0,0
                                    1-  865     	MGOTO	_02576_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  866     	.line	1419, "main.c"; 	bFlag_gSysTick_Change = 0;
     0040 1Crr                      1-  867     	BCR	_vFlag_0,0
                                    1-  868     	.line	1420, "main.c"; 	if (bFlag_slice_16ms)
     0041 08rr                      1-  869     	BTRSS	_vFlag_0,1
                                    1-  870     	MGOTO	_02576_DS_
     0042 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  871     	.line	1423, "main.c"; 	bFlag_slice_16ms = 0;
     0043 1Crr                      1-  872     	BCR	_vFlag_0,1
                                    1-  873     	.line	1424, "main.c"; 	timer_slice_16ms++;
                                    1-  874     	BANKSEL	_timer_slice_16ms
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1-  875     	MOVR	_timer_slice_16ms,W
                                    1-  876     	BANKSEL	r0x102D
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 00rr                      1-  877     	MOVAR	r0x102D
     0048 05rr                      1-  878     	INCR	r0x102D,W
                                    1-  879     	BANKSEL	_timer_slice_16ms
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1-  880     	MOVAR	_timer_slice_16ms
                                    1-  881     	.line	1425, "main.c"; 	gpioKeyScan();
                                    1-  882     	MCALL	_gpioKeyScan
     004B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  883     	.line	1426, "main.c"; 	get_p_ext_int_status();
                                    1-  884     	MCALL	_get_p_ext_int_status
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  885     	.line	1427, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  886     	BANKSEL	_vFlag_1
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 0Drr                      1-  887     	BTRSC	_vFlag_1,3
                                    1-  888     	.line	1429, "main.c"; 	is_chg_or_dischg();
                                    1-  889     	MCALL	_is_chg_or_dischg
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  890     	.line	1432, "main.c"; 	if (!(timer_slice_16ms & 0x1F))
                                    1-  891     	BANKSEL	_timer_slice_16ms
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 01rr                      1-  892     	MOVR	_timer_slice_16ms,W
     0052 221F                      1-  893     	ANDIA	0x1f
     0053 0903                      1-  894     	BTRSS	STATUS,2
                                    1-  895     	MGOTO	_02559_DS_
     0054 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  896     	.line	1434, "main.c"; 	bFlag_blink ^= 1;
     0055 2180                      1-  897     	MOVIA	0x80
                                    1-  898     	BANKSEL	_vFlag_0
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 12rr                      1-  899     	XORAR	_vFlag_0,F
                                    1-  900     	.line	1436, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  901     	BANKSEL	_vFlag_1
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 0Drr                      1-  902     	BTRSC	_vFlag_1,3
                                    1-  903     	.line	1438, "main.c"; 	get_cap();
                                    1-  904     	MCALL	_get_cap
     005A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  905     	.line	1440, "main.c"; 	app_display_all();
                                    1-  906     	MCALL	_app_display_all
     005B 2rrr                      3-   65 m1      LCALL rom_address
     005C                           1-  907     _02559_DS_:
                                    1-  908     	.line	1442, "main.c"; 	if (!(timer_slice_16ms & 0x3F))
                                    1-  909     	BANKSEL	_timer_slice_16ms
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1-  910     	MOVR	_timer_slice_16ms,W
     005E 223F                      1-  911     	ANDIA	0x3f
     005F 0903                      1-  912     	BTRSS	STATUS,2
                                    1-  913     	MGOTO	_02576_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  914     	.line	1447, "main.c"; 	if ((0 == bFlag_charger_on) && (!P_I2C_INT))
                                    1-  915     	BANKSEL	_vFlag_1
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 0Err                      1-  916     	BTRSC	_vFlag_1,5
                                    1-  917     	MGOTO	_02576_DS_
     0063 3rrr                      3-   62 m1      LGOTO rom_address
     0064 0Drr                      1-  918     	BTRSC	_PORTAbits,2
                                    1-  919     	MGOTO	_02576_DS_
     0065 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  920     	.line	1449, "main.c"; 	if (!delaySleepTimer)
                                    1-  921     	BANKSEL	_delaySleepTimer
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 01rr                      1-  922     	MOVR	_delaySleepTimer,W
     0068 0903                      1-  923     	BTRSS	STATUS,2
                                    1-  924     	MGOTO	_02564_DS_
     0069 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  925     	.line	1452, "main.c"; 	DISI();
     006A 0013                      1-  926     	DISI
                                    1-  927     	.line	1453, "main.c"; 	INTE = 0x00; // Timer0 overflow interrupt enable bit
     006B 02rr                      1-  928     	CLRR	_INTE
                                    1-  929     	.line	1454, "main.c"; 	PCON = 0xC8;
     006C 21C8                      1-  930     	MOVIA	0xc8
     006D 00rr                      1-  931     	MOVAR	_PCON
                                    1-  932     	.line	1455, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     006E 0200                      1-  933     	CLRA	
     006F 000r                      1-  934     	IOST	_PCON1
                                    1-  935     	.line	1463, "main.c"; 	PORTA = 0x00;
     0070 02rr                      1-  936     	CLRR	_PORTA
                                    1-  937     	.line	1464, "main.c"; 	PORTB = 0x00;
     0071 02rr                      1-  938     	CLRR	_PORTB
                                    1-  939     	.line	1465, "main.c"; 	IOSTA = 0xFF;
     0072 21FF                      1-  940     	MOVIA	0xff
     0073 000r                      1-  941     	IOST	_IOSTA
                                    1-  942     	.line	1466, "main.c"; 	IOSTB = 0xFF;
     0074 000r                      1-  943     	IOST	_IOSTB
                                    1-  944     	.line	1475, "main.c"; 	AWUCON = (C_PA2_Wakeup); // OK
     0075 2104                      1-  945     	MOVIA	0x04
     0076 00rr                      1-  946     	MOVAR	_AWUCON
                                    1-  947     	.line	1476, "main.c"; 	BWUCON = C_PB0_Wakeup;   // OK
     0077 2101                      1-  948     	MOVIA	0x01
     0078 00rr                      1-  949     	MOVAR	_BWUCON
                                    1-  950     	.line	1478, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     0079 2102                      1-  951     	MOVIA	0x02
     007A 00rr                      1-  952     	MOVAR	_INTE
                                    1-  953     	.line	1479, "main.c"; 	INTF = 0;
     007B 02rr                      1-  954     	CLRR	_INTF
                                    1-  955     	.line	1485, "main.c"; 	if (!P_KEY)
     007C 08rr                      1-  956     	BTRSS	_PORTBbits,0
                                    1-  957     	MGOTO	_02562_DS_
     007D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  958     	.line	1489, "main.c"; 	UPDATE_REG(PORTB);
     007E 01rr                      1-  959     	MOVR	_PORTB,F
                                    1-  960     	.line	1490, "main.c"; 	UPDATE_REG(PORTA);
     007F 01rr                      1-  961     	MOVR	_PORTA,F
                                    1-  962     	.line	1491, "main.c"; 	NOP();
     0080 0000                      1-  963     	nop
                                    1-  964     	.line	1492, "main.c"; 	SLEEP();
     0081 0001                      1-  965     	sleep
                                    1-  966     	.line	1493, "main.c"; 	NOP();
     0082 0000                      1-  967     	nop
     0083                           1-  968     _02562_DS_:
                                    1-  969     	.line	1495, "main.c"; 	INTFbits.PABIF = 0;
     0083 21FD                      1-  970     	MOVIA	0xfd
     0084 00rr                      1-  971     	MOVAR	(_INTFbits + 0)
                                    1-  972     	.line	1499, "main.c"; 	delaySleepTimer = CONST_DELAY_SLEEP_TIME;
     0085 2114                      1-  973     	MOVIA	0x14
                                    1-  974     	BANKSEL	_delaySleepTimer
     0086 rrrr                      3-  109 m1      .banksel ram_address
     0087 00rr                      1-  975     	MOVAR	_delaySleepTimer
                                    1-  976     	.line	1517, "main.c"; 	PCON1 |= C_TMR0_En;            // Enable Timer0
     0088 001r                      1-  977     	IOSTR	_PCON1
                                    1-  978     	BANKSEL	r0x102D
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 00rr                      1-  979     	MOVAR	r0x102D
     008B 18rr                      1-  980     	BSR	r0x102D,0
     008C 01rr                      1-  981     	MOVR	r0x102D,W
     008D 000r                      1-  982     	IOST	_PCON1
                                    1-  983     	.line	1518, "main.c"; 	INTE = (0x01 /*| C_INT_LVD*/); // Timer0 overflow interrupt enable bit
     008E 2101                      1-  984     	MOVIA	0x01
     008F 00rr                      1-  985     	MOVAR	_INTE
                                    1-  986     	.line	1519, "main.c"; 	ENI();
     0090 0004                      1-  987     	ENI
                                    1-  988     	MGOTO	_02576_DS_
     0091 3rrr                      3-   62 m1      LGOTO rom_address
     0092                           1-  989     _02564_DS_:
                                    1-  990     	.line	1523, "main.c"; 	delaySleepTimer--;
                                    1-  991     	BANKSEL	_delaySleepTimer
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 01rr                      1-  992     	MOVR	_delaySleepTimer,W
                                    1-  993     	BANKSEL	r0x102D
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 00rr                      1-  994     	MOVAR	r0x102D
     0096 06rr                      1-  995     	DECR	r0x102D,W
                                    1-  996     	BANKSEL	_delaySleepTimer
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 00rr                      1-  997     	MOVAR	_delaySleepTimer
                                    1-  998     	MGOTO	_02576_DS_
     0099 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  999     	.line	1532, "main.c"; 	}
                                    1- 1000     	RETURN	
     009A 0010                      3-   39 m1      ret
                                    1- 1001     ; exit point of _main
                                    1- 1003     ;***
                                    1- 1004     ;  pBlock Stats: dbName = C
                                    1- 1005     ;***
                                    1- 1006     ;has an exit
                                    1- 1007     ;functions called:
                                    1- 1008     ;   __gptrget1
                                    1- 1009     ;   __gptrget1
                                    1- 1010     ;   __divuchar
                                    1- 1011     ;   __moduchar
                                    1- 1012     ;   __gptrget1
                                    1- 1013     ;   __gptrget1
                                    1- 1014     ;   __gptrget1
                                    1- 1015     ;   __gptrget1
                                    1- 1016     ;   __divuchar
                                    1- 1017     ;   __moduchar
                                    1- 1018     ;   __gptrget1
                                    1- 1019     ;   __gptrget1
                                    1- 1020     ;   __divuchar
                                    1- 1021     ;   __moduchar
                                    1- 1022     ;   __gptrget1
                                    1- 1023     ;   __gptrget1
                                    1- 1024     ;   __gptrget1
                                    1- 1025     ;   __gptrget1
                                    1- 1026     ;   __gptrget1
                                    1- 1027     ;   __gptrget1
                                    1- 1028     ;   __divuchar
                                    1- 1029     ;   __moduchar
                                    1- 1030     ;   __gptrget1
                                    1- 1031     ;   __gptrget1
                                    1- 1032     ;   __gptrget1
                                    1- 1033     ;   __gptrget1
                                    1- 1034     ;   __divuchar
                                    1- 1035     ;   __moduchar
                                    1- 1036     ;   __gptrget1
                                    1- 1037     ;   __gptrget1
                                    1- 1038     ;   __divuchar
                                    1- 1039     ;   __moduchar
                                    1- 1040     ;   __gptrget1
                                    1- 1041     ;   __gptrget1
                                    1- 1042     ;   __gptrget1
                                    1- 1043     ;   __gptrget1
                                    1- 1044     ;5 compiler assigned registers:
                                    1- 1045     ;   r0x101A
                                    1- 1046     ;   STK01
                                    1- 1047     ;   STK00
                                    1- 1048     ;   r0x101B
                                    1- 1049     ;   r0x101C
                                    1- 1050     ;; Starting pCode block
                                    1- 1051     .segment "code"; module=main, function=_app_display_all
                                    1- 1053     ;local variable name mapping:
     0000                           1- 1056     _app_display_all:
                                    1- 1057     ; 2 exit points
                                    1- 1058     	.line	1144, "main.c"; 	if (forceDispTimer)
                                    1- 1059     	BANKSEL	_forceDispTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1060     	MOVR	_forceDispTimer,W
     0002 0D03                      1- 1061     	BTRSC	STATUS,2
                                    1- 1062     	MGOTO	_02547_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1063     	.line	1146, "main.c"; 	forceDispTimer--;
     0004 01rr                      1- 1064     	MOVR	_forceDispTimer,W
                                    1- 1065     	BANKSEL	r0x101A
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1066     	MOVAR	r0x101A
     0007 06rr                      1- 1067     	DECR	r0x101A,W
                                    1- 1068     	BANKSEL	_forceDispTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1069     	MOVAR	_forceDispTimer
                                    1- 1070     	.line	1147, "main.c"; 	displayHundred = DispTable[1];
     000A 21rr                      1- 1071     	MOVIA	(_DispTable + 1)
     000B 00rr                      1- 1072     	MOVAR	STK01
     000C 21rr                      1- 1073     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     000D 00rr                      1- 1074     	MOVAR	STK00
     000E 2180                      1- 1075     	MOVIA	0x80
                                    1- 1076     	MCALL	__gptrget1
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1077     	BANKSEL	_displayHundred
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1078     	MOVAR	_displayHundred
                                    1- 1079     	.line	1149, "main.c"; 	displayHundred |= (SEG_E | SEG_D);
     0012 2118                      1- 1080     	MOVIA	0x18
     0013 11rr                      1- 1081     	IORAR	_displayHundred,F
                                    1- 1082     	.line	1150, "main.c"; 	displayDecade = DispTable[8];
     0014 21rr                      1- 1083     	MOVIA	(_DispTable + 8)
     0015 00rr                      1- 1084     	MOVAR	STK01
     0016 21rr                      1- 1085     	MOVIA	((_DispTable + 8) >> 8) & 0xff
     0017 00rr                      1- 1086     	MOVAR	STK00
     0018 2180                      1- 1087     	MOVIA	0x80
                                    1- 1088     	MCALL	__gptrget1
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1089     	BANKSEL	_displayDigit
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1090     	MOVAR	_displayDigit
                                    1- 1091     	BANKSEL	r0x101A
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1092     	MOVAR	r0x101A
                                    1- 1093     	BANKSEL	_displayDecade
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1094     	MOVAR	_displayDecade
                                    1- 1095     ;;102	MOVR	r0x101A,W
                                    1- 1096     	.line	1153, "main.c"; 	if (!forceDispTimer)
                                    1- 1097     	BANKSEL	_forceDispTimer
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1- 1098     	MOVR	_forceDispTimer,W
     0022 0903                      1- 1099     	BTRSS	STATUS,2
                                    1- 1100     	MGOTO	_02549_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1101     	.line	1155, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1102     	BANKSEL	_displayHundred
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1- 1103     	CLRR	_displayHundred
                                    1- 1104     	.line	1156, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1105     	BANKSEL	_displayDecade
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 02rr                      1- 1106     	CLRR	_displayDecade
                                    1- 1107     	.line	1157, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1108     	BANKSEL	_displayDigit
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 02rr                      1- 1109     	CLRR	_displayDigit
                                    1- 1110     	MGOTO	_02549_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
     002B                           1- 1111     _02547_DS_:
                                    1- 1112     	.line	1162, "main.c"; 	else if (bFlag_charger_on) // bFlag_charger_nbFlag_vin_plug_in
                                    1- 1113     	BANKSEL	_vFlag_1
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 0Arr                      1- 1114     	BTRSS	_vFlag_1,5
                                    1- 1115     	MGOTO	_02544_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1116     	.line	1164, "main.c"; 	underVoltageDispTimer = 0;
                                    1- 1117     	BANKSEL	_underVoltageDispTimer
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 02rr                      1- 1118     	CLRR	_underVoltageDispTimer
                                    1- 1119     	.line	1166, "main.c"; 	displayTimer = CONST_TIMER_DISP; // 拨出显示5秒
     0030 2114                      1- 1120     	MOVIA	0x14
                                    1- 1121     	BANKSEL	_displayTimer
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1122     	MOVAR	_displayTimer
                                    1- 1123     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1124     	.line	1168, "main.c"; 	if (displayData < 100) // 充电
     0033 2164                      1- 1125     	MOVIA	0x64
                                    1- 1126     	BANKSEL	_displayData
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 04rr                      1- 1127     	SUBAR	_displayData,W
     0036 0C03                      1- 1128     	BTRSC	STATUS,0
                                    1- 1129     	MGOTO	_02506_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1130     	.line	1170, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1131     	BANKSEL	_displayHundred
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 02rr                      1- 1132     	CLRR	_displayHundred
                                    1- 1133     	.line	1171, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1134     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 0Arr                      1- 1135     	BTRSS	_vFlag_0,4
                                    1- 1136     	MGOTO	_00001_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1137     	.line	1173, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1138     	BANKSEL	_displayHundred
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 19rr                      1- 1139     	BSR	_displayHundred,3
     003F                           1- 1140     _00001_DS_:
                                    1- 1141     	.line	1176, "main.c"; 	if (bFlag_blink)
                                    1- 1142     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 0Brr                      1- 1143     	BTRSS	_vFlag_0,7
                                    1- 1144     	MGOTO	_02501_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1145     	.line	1178, "main.c"; 	i = displayData / 10;
     0042 210A                      1- 1146     	MOVIA	0x0a
     0043 00rr                      1- 1147     	MOVAR	STK00
                                    1- 1148     	BANKSEL	_displayData
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1149     	MOVR	_displayData,W
                                    1- 1150     	MCALL	__divuchar
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1151     	BANKSEL	r0x101A
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 1152     	MOVAR	r0x101A
                                    1- 1153     	.line	1179, "main.c"; 	j = displayData % 10;
     0049 210A                      1- 1154     	MOVIA	0x0a
     004A 00rr                      1- 1155     	MOVAR	STK00
                                    1- 1156     	BANKSEL	_displayData
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1157     	MOVR	_displayData,W
                                    1- 1158     	MCALL	__moduchar
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1159     	BANKSEL	r0x101B
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 1160     	MOVAR	r0x101B
                                    1- 1161     	.line	1180, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1162     	BANKSEL	_displayDecade
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 02rr                      1- 1163     	CLRR	_displayDecade
                                    1- 1164     	.line	1182, "main.c"; 	if (i) // 十位是0 不显示
                                    1- 1165     	BANKSEL	r0x101A
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1166     	MOVR	r0x101A,W
     0054 0D03                      1- 1167     	BTRSC	STATUS,2
                                    1- 1168     	MGOTO	_02499_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1169     	.line	1184, "main.c"; 	displayDecade = DispTable[i];
     0056 21rr                      1- 1170     	MOVIA	(_DispTable + 0)
     0057 03rr                      1- 1171     	ADDAR	r0x101A,F
     0058 21rr                      1- 1172     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0059 2600                      1- 1173     	ADCIA	0x00
                                    1- 1174     	BANKSEL	r0x101C
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1175     	MOVAR	r0x101C
                                    1- 1176     	BANKSEL	r0x101A
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1177     	MOVR	r0x101A,W
     005E 00rr                      1- 1178     	MOVAR	STK01
                                    1- 1179     	BANKSEL	r0x101C
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1180     	MOVR	r0x101C,W
     0061 00rr                      1- 1181     	MOVAR	STK00
     0062 2180                      1- 1182     	MOVIA	0x80
                                    1- 1183     	MCALL	__gptrget1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1184     	BANKSEL	_displayDecade
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1185     	MOVAR	_displayDecade
     0066                           1- 1186     _02499_DS_:
                                    1- 1187     	.line	1187, "main.c"; 	displayDigit = DispTable[j];
     0066 21rr                      1- 1188     	MOVIA	(_DispTable + 0)
                                    1- 1189     	BANKSEL	r0x101B
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1- 1190     	ADDAR	r0x101B,F
     0069 21rr                      1- 1191     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     006A 2600                      1- 1192     	ADCIA	0x00
                                    1- 1193     	BANKSEL	r0x101A
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1194     	MOVAR	r0x101A
                                    1- 1195     	BANKSEL	r0x101B
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1196     	MOVR	r0x101B,W
     006F 00rr                      1- 1197     	MOVAR	STK01
                                    1- 1198     	BANKSEL	r0x101A
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1199     	MOVR	r0x101A,W
     0072 00rr                      1- 1200     	MOVAR	STK00
     0073 2180                      1- 1201     	MOVIA	0x80
                                    1- 1202     	MCALL	__gptrget1
     0074 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1203     	BANKSEL	_displayDigit
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 00rr                      1- 1204     	MOVAR	_displayDigit
                                    1- 1205     	MGOTO	_02549_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 1206     _02501_DS_:
                                    1- 1207     	.line	1191, "main.c"; 	displayDigit = DISP_ALL_OFF; // 个位闪烁 充电
                                    1- 1208     	BANKSEL	_displayDigit
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 02rr                      1- 1209     	CLRR	_displayDigit
                                    1- 1210     	MGOTO	_02549_DS_
     007A 3rrr                      3-   62 m1      LGOTO rom_address
     007B                           1- 1211     _02506_DS_:
                                    1- 1212     	.line	1196, "main.c"; 	displayHundred = DispTable[1];
     007B 21rr                      1- 1213     	MOVIA	(_DispTable + 1)
     007C 00rr                      1- 1214     	MOVAR	STK01
     007D 21rr                      1- 1215     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     007E 00rr                      1- 1216     	MOVAR	STK00
     007F 2180                      1- 1217     	MOVIA	0x80
                                    1- 1218     	MCALL	__gptrget1
     0080 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1219     	BANKSEL	_displayHundred
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 1220     	MOVAR	_displayHundred
                                    1- 1221     	.line	1197, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1222     	BANKSEL	_vFlag_0
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 0Arr                      1- 1223     	BTRSS	_vFlag_0,4
                                    1- 1224     	MGOTO	_00002_DS_
     0085 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1225     	.line	1199, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1226     	BANKSEL	_displayHundred
     0086 rrrr                      3-  109 m1      .banksel ram_address
     0087 19rr                      1- 1227     	BSR	_displayHundred,3
     0088                           1- 1228     _00002_DS_:
                                    1- 1229     	.line	1201, "main.c"; 	displayDecade = DispTable[0];
     0088 21rr                      1- 1230     	MOVIA	(_DispTable + 0)
     0089 00rr                      1- 1231     	MOVAR	STK01
     008A 21rr                      1- 1232     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     008B 00rr                      1- 1233     	MOVAR	STK00
     008C 2180                      1- 1234     	MOVIA	0x80
                                    1- 1235     	MCALL	__gptrget1
     008D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1236     	BANKSEL	_displayDigit
     008E rrrr                      3-  109 m1      .banksel ram_address
     008F 00rr                      1- 1237     	MOVAR	_displayDigit
                                    1- 1238     	BANKSEL	r0x101A
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 1239     	MOVAR	r0x101A
                                    1- 1240     	BANKSEL	_displayDecade
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 1241     	MOVAR	_displayDecade
                                    1- 1242     ;;101	MOVR	r0x101A,W
                                    1- 1243     	.line	1202, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1244     	MGOTO	_02549_DS_
     0094 3rrr                      3-   62 m1      LGOTO rom_address
     0095                           1- 1245     _02544_DS_:
                                    1- 1246     	.line	1209, "main.c"; 	if (underVoltageDispTimer) // 欠压关机显示
                                    1- 1247     	BANKSEL	_underVoltageDispTimer
     0095 rrrr                      3-  109 m1      .banksel ram_address
     0096 01rr                      1- 1248     	MOVR	_underVoltageDispTimer,W
     0097 0D03                      1- 1249     	BTRSC	STATUS,2
                                    1- 1250     	MGOTO	_02541_DS_
     0098 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1251     	.line	1211, "main.c"; 	underVoltageDispTimer--;
     0099 01rr                      1- 1252     	MOVR	_underVoltageDispTimer,W
                                    1- 1253     	BANKSEL	r0x101A
     009A rrrr                      3-  109 m1      .banksel ram_address
     009B 00rr                      1- 1254     	MOVAR	r0x101A
     009C 06rr                      1- 1255     	DECR	r0x101A,W
                                    1- 1256     	BANKSEL	_underVoltageDispTimer
     009D rrrr                      3-  109 m1      .banksel ram_address
     009E 00rr                      1- 1257     	MOVAR	_underVoltageDispTimer
                                    1- 1258     	.line	1212, "main.c"; 	displayTimer = 0;
                                    1- 1259     	BANKSEL	_displayTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 02rr                      1- 1260     	CLRR	_displayTimer
                                    1- 1261     	.line	1213, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1262     	BANKSEL	_displayHundred
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1- 1263     	CLRR	_displayHundred
                                    1- 1264     	.line	1214, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1265     	BANKSEL	_vFlag_0
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 0Arr                      1- 1266     	BTRSS	_vFlag_0,4
                                    1- 1267     	MGOTO	_00003_DS_
     00A5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1268     	.line	1216, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1269     	BANKSEL	_displayHundred
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 19rr                      1- 1270     	BSR	_displayHundred,3
     00A8                           1- 1271     _00003_DS_:
                                    1- 1272     	.line	1225, "main.c"; 	if (underVoltageDispTimer % 2)
                                    1- 1273     	BANKSEL	_underVoltageDispTimer
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 08rr                      1- 1274     	BTRSS	_underVoltageDispTimer,0
                                    1- 1275     	MGOTO	_02516_DS_
     00AA 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1276     	.line	1227, "main.c"; 	i = displayData / 10;
     00AB 210A                      1- 1277     	MOVIA	0x0a
     00AC 00rr                      1- 1278     	MOVAR	STK00
                                    1- 1279     	BANKSEL	_displayData
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 01rr                      1- 1280     	MOVR	_displayData,W
                                    1- 1281     	MCALL	__divuchar
     00AF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1282     	BANKSEL	r0x101A
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 00rr                      1- 1283     	MOVAR	r0x101A
                                    1- 1284     	.line	1228, "main.c"; 	j = displayData % 10;
     00B2 210A                      1- 1285     	MOVIA	0x0a
     00B3 00rr                      1- 1286     	MOVAR	STK00
                                    1- 1287     	BANKSEL	_displayData
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 01rr                      1- 1288     	MOVR	_displayData,W
                                    1- 1289     	MCALL	__moduchar
     00B6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1290     	BANKSEL	r0x101B
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 00rr                      1- 1291     	MOVAR	r0x101B
                                    1- 1292     	.line	1230, "main.c"; 	if (i)
                                    1- 1293     	BANKSEL	r0x101A
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 01rr                      1- 1294     	MOVR	r0x101A,W
     00BB 0D03                      1- 1295     	BTRSC	STATUS,2
                                    1- 1296     	MGOTO	_02511_DS_
     00BC 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1297     	.line	1232, "main.c"; 	displayDecade = DispTable[i];
     00BD 21rr                      1- 1298     	MOVIA	(_DispTable + 0)
     00BE 03rr                      1- 1299     	ADDAR	r0x101A,F
     00BF 21rr                      1- 1300     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00C0 2600                      1- 1301     	ADCIA	0x00
                                    1- 1302     	BANKSEL	r0x101C
     00C1 rrrr                      3-  109 m1      .banksel ram_address
     00C2 00rr                      1- 1303     	MOVAR	r0x101C
                                    1- 1304     	BANKSEL	r0x101A
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 01rr                      1- 1305     	MOVR	r0x101A,W
     00C5 00rr                      1- 1306     	MOVAR	STK01
                                    1- 1307     	BANKSEL	r0x101C
     00C6 rrrr                      3-  109 m1      .banksel ram_address
     00C7 01rr                      1- 1308     	MOVR	r0x101C,W
     00C8 00rr                      1- 1309     	MOVAR	STK00
     00C9 2180                      1- 1310     	MOVIA	0x80
                                    1- 1311     	MCALL	__gptrget1
     00CA 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1312     	BANKSEL	_displayDecade
     00CB rrrr                      3-  109 m1      .banksel ram_address
     00CC 00rr                      1- 1313     	MOVAR	_displayDecade
                                    1- 1314     	MGOTO	_02512_DS_
     00CD 3rrr                      3-   62 m1      LGOTO rom_address
     00CE                           1- 1315     _02511_DS_:
                                    1- 1316     	.line	1236, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1317     	BANKSEL	_displayDecade
     00CE rrrr                      3-  109 m1      .banksel ram_address
     00CF 02rr                      1- 1318     	CLRR	_displayDecade
     00D0                           1- 1319     _02512_DS_:
                                    1- 1320     	.line	1239, "main.c"; 	displayDigit = DispTable[j];
     00D0 21rr                      1- 1321     	MOVIA	(_DispTable + 0)
                                    1- 1322     	BANKSEL	r0x101B
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 03rr                      1- 1323     	ADDAR	r0x101B,F
     00D3 21rr                      1- 1324     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00D4 2600                      1- 1325     	ADCIA	0x00
                                    1- 1326     	BANKSEL	r0x101A
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 00rr                      1- 1327     	MOVAR	r0x101A
                                    1- 1328     	BANKSEL	r0x101B
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 01rr                      1- 1329     	MOVR	r0x101B,W
     00D9 00rr                      1- 1330     	MOVAR	STK01
                                    1- 1331     	BANKSEL	r0x101A
     00DA rrrr                      3-  109 m1      .banksel ram_address
     00DB 01rr                      1- 1332     	MOVR	r0x101A,W
     00DC 00rr                      1- 1333     	MOVAR	STK00
     00DD 2180                      1- 1334     	MOVIA	0x80
                                    1- 1335     	MCALL	__gptrget1
     00DE 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1336     	BANKSEL	_displayDigit
     00DF rrrr                      3-  109 m1      .banksel ram_address
     00E0 00rr                      1- 1337     	MOVAR	_displayDigit
                                    1- 1338     	MGOTO	_00004_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 1339     _02516_DS_:
                                    1- 1340     	.line	1243, "main.c"; 	if (0 == displayData)
                                    1- 1341     	BANKSEL	_displayData
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 01rr                      1- 1342     	MOVR	_displayData,W
     00E4 0903                      1- 1343     	BTRSS	STATUS,2
                                    1- 1344     	MGOTO	_00004_DS_
     00E5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1345     	.line	1245, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1346     	BANKSEL	_displayDigit
     00E6 rrrr                      3-  109 m1      .banksel ram_address
     00E7 02rr                      1- 1347     	CLRR	_displayDigit
     00E8                           1- 1348     _00004_DS_:
                                    1- 1349     	.line	1249, "main.c"; 	if (0 == underVoltageDispTimer)
                                    1- 1350     	BANKSEL	_underVoltageDispTimer
     00E8 rrrr                      3-  109 m1      .banksel ram_address
     00E9 01rr                      1- 1351     	MOVR	_underVoltageDispTimer,W
     00EA 0903                      1- 1352     	BTRSS	STATUS,2
                                    1- 1353     	MGOTO	_02549_DS_
     00EB 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1354     	.line	1251, "main.c"; 	if (displayData)
                                    1- 1355     	BANKSEL	_displayData
     00EC rrrr                      3-  109 m1      .banksel ram_address
     00ED 01rr                      1- 1356     	MOVR	_displayData,W
     00EE 0D03                      1- 1357     	BTRSC	STATUS,2
                                    1- 1358     	MGOTO	_02549_DS_
     00EF 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1359     	.line	1253, "main.c"; 	displayData--;
     00F0 01rr                      1- 1360     	MOVR	_displayData,W
                                    1- 1361     	BANKSEL	r0x101A
     00F1 rrrr                      3-  109 m1      .banksel ram_address
     00F2 00rr                      1- 1362     	MOVAR	r0x101A
     00F3 06rr                      1- 1363     	DECR	r0x101A,W
                                    1- 1364     	BANKSEL	_displayData
     00F4 rrrr                      3-  109 m1      .banksel ram_address
     00F5 00rr                      1- 1365     	MOVAR	_displayData
                                    1- 1366     	.line	1254, "main.c"; 	underVoltageDispTimer = (CONST_TIMER_DISP_UV - 1);
     00F6 210A                      1- 1367     	MOVIA	0x0a
                                    1- 1368     	BANKSEL	_underVoltageDispTimer
     00F7 rrrr                      3-  109 m1      .banksel ram_address
     00F8 00rr                      1- 1369     	MOVAR	_underVoltageDispTimer
                                    1- 1370     	MGOTO	_02549_DS_
     00F9 3rrr                      3-   62 m1      LGOTO rom_address
     00FA                           1- 1371     _02541_DS_:
                                    1- 1372     	.line	1258, "main.c"; 	else if (displayTimer)
                                    1- 1373     	BANKSEL	_displayTimer
     00FA rrrr                      3-  109 m1      .banksel ram_address
     00FB 01rr                      1- 1374     	MOVR	_displayTimer,W
     00FC 0D03                      1- 1375     	BTRSC	STATUS,2
                                    1- 1376     	MGOTO	_02538_DS_
     00FD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1377     	.line	1260, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1378     	BANKSEL	_displayHundred
     00FE rrrr                      3-  109 m1      .banksel ram_address
     00FF 02rr                      1- 1379     	CLRR	_displayHundred
                                    1- 1380     	.line	1262, "main.c"; 	displayTimer--;
                                    1- 1381     	BANKSEL	_displayTimer
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 01rr                      1- 1382     	MOVR	_displayTimer,W
                                    1- 1383     	BANKSEL	r0x101A
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 00rr                      1- 1384     	MOVAR	r0x101A
     0104 06rr                      1- 1385     	DECR	r0x101A,W
                                    1- 1386     	BANKSEL	_displayTimer
     0105 rrrr                      3-  109 m1      .banksel ram_address
     0106 00rr                      1- 1387     	MOVAR	_displayTimer
                                    1- 1388     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1389     	.line	1264, "main.c"; 	if (displayData < 100)
     0107 2164                      1- 1390     	MOVIA	0x64
                                    1- 1391     	BANKSEL	_displayData
     0108 rrrr                      3-  109 m1      .banksel ram_address
     0109 04rr                      1- 1392     	SUBAR	_displayData,W
     010A 0C03                      1- 1393     	BTRSC	STATUS,0
                                    1- 1394     	MGOTO	_02535_DS_
     010B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1395     	.line	1266, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1396     	BANKSEL	_displayHundred
     010C rrrr                      3-  109 m1      .banksel ram_address
     010D 02rr                      1- 1397     	CLRR	_displayHundred
                                    1- 1398     	.line	1267, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1399     	BANKSEL	_vFlag_0
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 0Arr                      1- 1400     	BTRSS	_vFlag_0,4
                                    1- 1401     	MGOTO	_00005_DS_
     0110 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1402     	.line	1269, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1403     	BANKSEL	_displayHundred
     0111 rrrr                      3-  109 m1      .banksel ram_address
     0112 19rr                      1- 1404     	BSR	_displayHundred,3
     0113                           1- 1405     _00005_DS_:
                                    1- 1406     	.line	1272, "main.c"; 	if (bFlag_blink)
                                    1- 1407     	BANKSEL	_vFlag_0
     0113 rrrr                      3-  109 m1      .banksel ram_address
     0114 0Brr                      1- 1408     	BTRSS	_vFlag_0,7
                                    1- 1409     	MGOTO	_02530_DS_
     0115 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1410     	.line	1274, "main.c"; 	i = displayData / 10;
     0116 210A                      1- 1411     	MOVIA	0x0a
     0117 00rr                      1- 1412     	MOVAR	STK00
                                    1- 1413     	BANKSEL	_displayData
     0118 rrrr                      3-  109 m1      .banksel ram_address
     0119 01rr                      1- 1414     	MOVR	_displayData,W
                                    1- 1415     	MCALL	__divuchar
     011A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1416     	BANKSEL	r0x101A
     011B rrrr                      3-  109 m1      .banksel ram_address
     011C 00rr                      1- 1417     	MOVAR	r0x101A
                                    1- 1418     	.line	1275, "main.c"; 	j = displayData % 10;
     011D 210A                      1- 1419     	MOVIA	0x0a
     011E 00rr                      1- 1420     	MOVAR	STK00
                                    1- 1421     	BANKSEL	_displayData
     011F rrrr                      3-  109 m1      .banksel ram_address
     0120 01rr                      1- 1422     	MOVR	_displayData,W
                                    1- 1423     	MCALL	__moduchar
     0121 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1424     	BANKSEL	r0x101B
     0122 rrrr                      3-  109 m1      .banksel ram_address
     0123 00rr                      1- 1425     	MOVAR	r0x101B
                                    1- 1426     	.line	1277, "main.c"; 	if (i)
                                    1- 1427     	BANKSEL	r0x101A
     0124 rrrr                      3-  109 m1      .banksel ram_address
     0125 01rr                      1- 1428     	MOVR	r0x101A,W
     0126 0D03                      1- 1429     	BTRSC	STATUS,2
                                    1- 1430     	MGOTO	_02525_DS_
     0127 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1431     	.line	1279, "main.c"; 	displayDecade = DispTable[i];
     0128 21rr                      1- 1432     	MOVIA	(_DispTable + 0)
     0129 03rr                      1- 1433     	ADDAR	r0x101A,F
     012A 21rr                      1- 1434     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     012B 2600                      1- 1435     	ADCIA	0x00
                                    1- 1436     	BANKSEL	r0x101C
     012C rrrr                      3-  109 m1      .banksel ram_address
     012D 00rr                      1- 1437     	MOVAR	r0x101C
                                    1- 1438     	BANKSEL	r0x101A
     012E rrrr                      3-  109 m1      .banksel ram_address
     012F 01rr                      1- 1439     	MOVR	r0x101A,W
     0130 00rr                      1- 1440     	MOVAR	STK01
                                    1- 1441     	BANKSEL	r0x101C
     0131 rrrr                      3-  109 m1      .banksel ram_address
     0132 01rr                      1- 1442     	MOVR	r0x101C,W
     0133 00rr                      1- 1443     	MOVAR	STK00
     0134 2180                      1- 1444     	MOVIA	0x80
                                    1- 1445     	MCALL	__gptrget1
     0135 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1446     	BANKSEL	_displayDecade
     0136 rrrr                      3-  109 m1      .banksel ram_address
     0137 00rr                      1- 1447     	MOVAR	_displayDecade
                                    1- 1448     	MGOTO	_02526_DS_
     0138 3rrr                      3-   62 m1      LGOTO rom_address
     0139                           1- 1449     _02525_DS_:
                                    1- 1450     	.line	1283, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1451     	BANKSEL	_displayDecade
     0139 rrrr                      3-  109 m1      .banksel ram_address
     013A 02rr                      1- 1452     	CLRR	_displayDecade
     013B                           1- 1453     _02526_DS_:
                                    1- 1454     	.line	1286, "main.c"; 	displayDigit = DispTable[j];
     013B 21rr                      1- 1455     	MOVIA	(_DispTable + 0)
                                    1- 1456     	BANKSEL	r0x101B
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 03rr                      1- 1457     	ADDAR	r0x101B,F
     013E 21rr                      1- 1458     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     013F 2600                      1- 1459     	ADCIA	0x00
                                    1- 1460     	BANKSEL	r0x101A
     0140 rrrr                      3-  109 m1      .banksel ram_address
     0141 00rr                      1- 1461     	MOVAR	r0x101A
                                    1- 1462     	BANKSEL	r0x101B
     0142 rrrr                      3-  109 m1      .banksel ram_address
     0143 01rr                      1- 1463     	MOVR	r0x101B,W
     0144 00rr                      1- 1464     	MOVAR	STK01
                                    1- 1465     	BANKSEL	r0x101A
     0145 rrrr                      3-  109 m1      .banksel ram_address
     0146 01rr                      1- 1466     	MOVR	r0x101A,W
     0147 00rr                      1- 1467     	MOVAR	STK00
     0148 2180                      1- 1468     	MOVIA	0x80
                                    1- 1469     	MCALL	__gptrget1
     0149 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1470     	BANKSEL	_displayDigit
     014A rrrr                      3-  109 m1      .banksel ram_address
     014B 00rr                      1- 1471     	MOVAR	_displayDigit
                                    1- 1472     	MGOTO	_02549_DS_
     014C 3rrr                      3-   62 m1      LGOTO rom_address
     014D                           1- 1473     _02530_DS_:
                                    1- 1474     	.line	1291, "main.c"; 	if (0 == displayData)
                                    1- 1475     	BANKSEL	_displayData
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 01rr                      1- 1476     	MOVR	_displayData,W
     014F 0903                      1- 1477     	BTRSS	STATUS,2
                                    1- 1478     	MGOTO	_02549_DS_
     0150 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1479     	.line	1293, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1480     	BANKSEL	_displayDigit
     0151 rrrr                      3-  109 m1      .banksel ram_address
     0152 02rr                      1- 1481     	CLRR	_displayDigit
                                    1- 1482     	MGOTO	_02549_DS_
     0153 3rrr                      3-   62 m1      LGOTO rom_address
     0154                           1- 1483     _02535_DS_:
                                    1- 1484     	.line	1299, "main.c"; 	displayHundred = DispTable[1];
     0154 21rr                      1- 1485     	MOVIA	(_DispTable + 1)
     0155 00rr                      1- 1486     	MOVAR	STK01
     0156 21rr                      1- 1487     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0157 00rr                      1- 1488     	MOVAR	STK00
     0158 2180                      1- 1489     	MOVIA	0x80
                                    1- 1490     	MCALL	__gptrget1
     0159 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1491     	BANKSEL	_displayHundred
     015A rrrr                      3-  109 m1      .banksel ram_address
     015B 00rr                      1- 1492     	MOVAR	_displayHundred
                                    1- 1493     	.line	1300, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1494     	BANKSEL	_vFlag_0
     015C rrrr                      3-  109 m1      .banksel ram_address
     015D 0Arr                      1- 1495     	BTRSS	_vFlag_0,4
                                    1- 1496     	MGOTO	_00006_DS_
     015E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1497     	.line	1302, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1498     	BANKSEL	_displayHundred
     015F rrrr                      3-  109 m1      .banksel ram_address
     0160 19rr                      1- 1499     	BSR	_displayHundred,3
     0161                           1- 1500     _00006_DS_:
                                    1- 1501     	.line	1304, "main.c"; 	displayDecade = DispTable[0];
     0161 21rr                      1- 1502     	MOVIA	(_DispTable + 0)
     0162 00rr                      1- 1503     	MOVAR	STK01
     0163 21rr                      1- 1504     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0164 00rr                      1- 1505     	MOVAR	STK00
     0165 2180                      1- 1506     	MOVIA	0x80
                                    1- 1507     	MCALL	__gptrget1
     0166 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1508     	BANKSEL	r0x101A
     0167 rrrr                      3-  109 m1      .banksel ram_address
     0168 00rr                      1- 1509     	MOVAR	r0x101A
                                    1- 1510     	BANKSEL	_displayDecade
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 00rr                      1- 1511     	MOVAR	_displayDecade
                                    1- 1512     	.line	1305, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1513     	BANKSEL	r0x101A
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 01rr                      1- 1514     	MOVR	r0x101A,W
                                    1- 1515     	BANKSEL	_displayDigit
     016D rrrr                      3-  109 m1      .banksel ram_address
     016E 00rr                      1- 1516     	MOVAR	_displayDigit
                                    1- 1517     	MGOTO	_02549_DS_
     016F 3rrr                      3-   62 m1      LGOTO rom_address
     0170                           1- 1518     _02538_DS_:
                                    1- 1519     	.line	1310, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1520     	BANKSEL	_displayHundred
     0170 rrrr                      3-  109 m1      .banksel ram_address
     0171 02rr                      1- 1521     	CLRR	_displayHundred
                                    1- 1522     	.line	1311, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1523     	BANKSEL	_displayDecade
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 02rr                      1- 1524     	CLRR	_displayDecade
                                    1- 1525     	.line	1312, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1526     	BANKSEL	_displayDigit
     0174 rrrr                      3-  109 m1      .banksel ram_address
     0175 02rr                      1- 1527     	CLRR	_displayDigit
     0176                           1- 1528     _02549_DS_:
                                    1- 1529     	.line	1315, "main.c"; 	}
                                    1- 1530     	RETURN	
     0176 0010                      3-   39 m1      ret
                                    1- 1531     ; exit point of _app_display_all
                                    1- 1533     ;***
                                    1- 1534     ;  pBlock Stats: dbName = C
                                    1- 1535     ;***
                                    1- 1536     ;has an exit
                                    1- 1537     ;functions called:
                                    1- 1538     ;   _ip55xs_read4Bytes
                                    1- 1539     ;   _ip55xs_read4Bytes
                                    1- 1540     ;1 compiler assigned register :
                                    1- 1541     ;   STK00
                                    1- 1542     ;; Starting pCode block
                                    1- 1543     .segment "code"; module=main, function=_get_cap
     0000                           1- 1545     _get_cap:
                                    1- 1546     ; 2 exit points
                                    1- 1547     	.line	1135, "main.c"; 	ip55xs_read4Bytes(0x10C0);
     0000 21C0                      1- 1548     	MOVIA	0xc0
     0001 00rr                      1- 1549     	MOVAR	STK00
     0002 2110                      1- 1550     	MOVIA	0x10
                                    1- 1551     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1552     	.line	1136, "main.c"; 	displayData = IP_DATA[0];
                                    1- 1553     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1554     	MOVR	_IP_DATA,W
                                    1- 1555     	BANKSEL	_displayData
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1556     	MOVAR	_displayData
                                    1- 1557     	.line	1137, "main.c"; 	}
                                    1- 1558     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 1559     ; exit point of _get_cap
                                    1- 1561     ;***
                                    1- 1562     ;  pBlock Stats: dbName = C
                                    1- 1563     ;***
                                    1- 1564     ;has an exit
                                    1- 1565     ;functions called:
                                    1- 1566     ;   _ip55xs_read4Bytes
                                    1- 1567     ;   _disable_breathing_mode
                                    1- 1568     ;   _enable_breathing_mode
                                    1- 1569     ;   _ip55xs_read4Bytes
                                    1- 1570     ;   _disable_breathing_mode
                                    1- 1571     ;   _enable_breathing_mode
                                    1- 1572     ;2 compiler assigned registers:
                                    1- 1573     ;   STK00
                                    1- 1574     ;   r0x1028
                                    1- 1575     ;; Starting pCode block
                                    1- 1576     .segment "code"; module=main, function=_is_chg_or_dischg
                                    1- 1578     ;local variable name mapping:
     0000                           1- 1580     _is_chg_or_dischg:
                                    1- 1581     ; 2 exit points
                                    1- 1582     	.line	1062, "main.c"; 	ip55xs_read4Bytes(0X1090);
     0000 2190                      1- 1583     	MOVIA	0x90
     0001 00rr                      1- 1584     	MOVAR	STK00
     0002 2110                      1- 1585     	MOVIA	0x10
                                    1- 1586     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1587     	.line	1064, "main.c"; 	bFlag_qc_ok = 0;
                                    1- 1588     	BANKSEL	_vFlag_0
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 1Err                      1- 1589     	BCR	_vFlag_0,4
                                    1- 1590     	.line	1066, "main.c"; 	if (bFlag_charger_on) //! 在充电状态下
                                    1- 1591     	BANKSEL	_vFlag_1
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1592     	BTRSS	_vFlag_1,5
                                    1- 1593     	MGOTO	_02483_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1594     	.line	1068, "main.c"; 	delaySleepTimer = CONST_DSL_SHORT; //! 防止充电状态MCU关5356
     0009 2103                      1- 1595     	MOVIA	0x03
                                    1- 1596     	BANKSEL	_delaySleepTimer
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1597     	MOVAR	_delaySleepTimer
                                    1- 1598     	.line	1069, "main.c"; 	reg_ip53xs = (IP_DATA[2] & BIT3);  // bit19
                                    1- 1599     	BANKSEL	_IP_DATA
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1600     	MOVR	(_IP_DATA + 2),W
                                    1- 1601     	BANKSEL	r0x1028
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1602     	MOVAR	r0x1028
     0010 09rr                      1- 1603     	BTRSS	r0x1028,3
                                    1- 1604     	MGOTO	_02471_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1605     	.line	1072, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1606     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Frr                      1- 1607     	BCR	_vFlag_1,6
                                    1- 1608     	.line	1073, "main.c"; 	if (++counter > 5) // CNST_FILTER_COM
                                    1- 1609     	BANKSEL	_is_chg_or_dischg_counter_65536_125
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1610     	INCR	_is_chg_or_dischg_counter_65536_125,F
                                    1- 1611     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1612     ;;unsigned compare: left >= lit(0x6=6), size=1
     0016 2106                      1- 1613     	MOVIA	0x06
     0017 04rr                      1- 1614     	SUBAR	_is_chg_or_dischg_counter_65536_125,W
     0018 0803                      1- 1615     	BTRSS	STATUS,0
                                    1- 1616     	MGOTO	_02485_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1617     	.line	1075, "main.c"; 	counter = 0;
     001A 02rr                      1- 1618     	CLRR	_is_chg_or_dischg_counter_65536_125
                                    1- 1619     	.line	1076, "main.c"; 	bFlag_charger_on = 0; //! 放电
                                    1- 1620     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 1Err                      1- 1621     	BCR	_vFlag_1,5
                                    1- 1622     	.line	1077, "main.c"; 	disable_breathing_mode();
                                    1- 1623     	MCALL	_disable_breathing_mode
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1624     	MGOTO	_02485_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1625     _02471_DS_:
                                    1- 1626     	.line	1082, "main.c"; 	counter = 0;
                                    1- 1627     	BANKSEL	_is_chg_or_dischg_counter_65536_125
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1628     	CLRR	_is_chg_or_dischg_counter_65536_125
                                    1- 1629     	.line	1084, "main.c"; 	if (IP_DATA[1] & BIT7)
                                    1- 1630     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1631     	MOVR	(_IP_DATA + 1),W
                                    1- 1632     	BANKSEL	r0x1028
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1633     	MOVAR	r0x1028
     0025 0Brr                      1- 1634     	BTRSS	r0x1028,7
                                    1- 1635     	MGOTO	_00007_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1636     	.line	1086, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1637     	BANKSEL	_vFlag_0
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 1Arr                      1- 1638     	BSR	_vFlag_0,4
     0029                           1- 1639     _00007_DS_:
                                    1- 1640     	.line	1088, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1641     	BANKSEL	_vFlag_1
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 1Brr                      1- 1642     	BSR	_vFlag_1,6
                                    1- 1643     	MGOTO	_02485_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 1644     _02483_DS_:
                                    1- 1645     	.line	1096, "main.c"; 	reg_ip53xs = (IP_DATA[1] & BIT3); // bit11
                                    1- 1646     	BANKSEL	_IP_DATA
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1647     	MOVR	(_IP_DATA + 1),W
                                    1- 1648     	BANKSEL	r0x1028
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1649     	MOVAR	r0x1028
     0030 09rr                      1- 1650     	BTRSS	r0x1028,3
                                    1- 1651     	MGOTO	_02480_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1652     	.line	1099, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1653     	BANKSEL	_vFlag_1
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 1Brr                      1- 1654     	BSR	_vFlag_1,6
                                    1- 1655     	.line	1100, "main.c"; 	if (++counter > CNST_FILTER_COM) // 2次
                                    1- 1656     	BANKSEL	_is_chg_or_dischg_counter_65536_125
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 05rr                      1- 1657     	INCR	_is_chg_or_dischg_counter_65536_125,F
                                    1- 1658     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1659     ;;unsigned compare: left >= lit(0x3=3), size=1
     0036 2103                      1- 1660     	MOVIA	0x03
     0037 04rr                      1- 1661     	SUBAR	_is_chg_or_dischg_counter_65536_125,W
     0038 0803                      1- 1662     	BTRSS	STATUS,0
                                    1- 1663     	MGOTO	_02485_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1664     	.line	1102, "main.c"; 	counter = 0;
     003A 02rr                      1- 1665     	CLRR	_is_chg_or_dischg_counter_65536_125
                                    1- 1666     	.line	1103, "main.c"; 	bFlag_charger_on = 1; //! 充电
                                    1- 1667     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Arr                      1- 1668     	BSR	_vFlag_1,5
                                    1- 1669     	.line	1104, "main.c"; 	enable_breathing_mode();
                                    1- 1670     	MCALL	_enable_breathing_mode
     003D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1671     	.line	1105, "main.c"; 	forceDispTimer = 10;
     003E 210A                      1- 1672     	MOVIA	0x0a
                                    1- 1673     	BANKSEL	_forceDispTimer
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 1674     	MOVAR	_forceDispTimer
                                    1- 1675     	MGOTO	_02485_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
     0042                           1- 1676     _02480_DS_:
                                    1- 1677     	.line	1110, "main.c"; 	counter = 0;
                                    1- 1678     	BANKSEL	_is_chg_or_dischg_counter_65536_125
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 02rr                      1- 1679     	CLRR	_is_chg_or_dischg_counter_65536_125
                                    1- 1680     	.line	1111, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1681     	BANKSEL	_vFlag_1
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 1Frr                      1- 1682     	BCR	_vFlag_1,6
                                    1- 1683     	.line	1112, "main.c"; 	if (IP_DATA[3] & BIT3)
                                    1- 1684     	BANKSEL	_IP_DATA
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 1685     	MOVR	(_IP_DATA + 3),W
                                    1- 1686     	BANKSEL	r0x1028
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 00rr                      1- 1687     	MOVAR	r0x1028
     004A 09rr                      1- 1688     	BTRSS	r0x1028,3
                                    1- 1689     	MGOTO	_00008_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1690     	.line	1114, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1691     	BANKSEL	_vFlag_0
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 1Arr                      1- 1692     	BSR	_vFlag_0,4
     004E                           1- 1693     _00008_DS_:
                                    1- 1694     	.line	1117, "main.c"; 	if ((IP_DATA[2] & BIT3)) // bit19
                                    1- 1695     	BANKSEL	_IP_DATA
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1- 1696     	MOVR	(_IP_DATA + 2),W
                                    1- 1697     	BANKSEL	r0x1028
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 00rr                      1- 1698     	MOVAR	r0x1028
     0052 09rr                      1- 1699     	BTRSS	r0x1028,3
                                    1- 1700     	MGOTO	_02485_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1701     	.line	1119, "main.c"; 	displayTimer = CONST_TIMER_DISP_XSEC; //! 电量==0的时候 闪烁5秒后熄灭,反之一直显示
     0054 210A                      1- 1702     	MOVIA	0x0a
                                    1- 1703     	BANKSEL	_displayTimer
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 1704     	MOVAR	_displayTimer
     0057                           1- 1705     _02485_DS_:
                                    1- 1706     	.line	1131, "main.c"; 	}
                                    1- 1707     	RETURN	
     0057 0010                      3-   39 m1      ret
                                    1- 1708     ; exit point of _is_chg_or_dischg
                                    1- 1710     ;***
                                    1- 1711     ;  pBlock Stats: dbName = C
                                    1- 1712     ;***
                                    1- 1713     ;has an exit
                                    1- 1714     ;functions called:
                                    1- 1715     ;   _ip55xs_read4Bytes
                                    1- 1716     ;   _ip55xs_write4Bytes
                                    1- 1717     ;   _ip55xs_read4Bytes
                                    1- 1718     ;   _ip55xs_write4Bytes
                                    1- 1719     ;7 compiler assigned registers:
                                    1- 1720     ;   STK00
                                    1- 1721     ;   r0x102A
                                    1- 1722     ;   r0x102B
                                    1- 1723     ;   r0x102C
                                    1- 1724     ;   STK03
                                    1- 1725     ;   STK02
                                    1- 1726     ;   STK01
                                    1- 1727     ;; Starting pCode block
                                    1- 1728     .segment "code"; module=main, function=_get_p_ext_int_status
                                    1- 1730     ;local variable name mapping:
     0000                           1- 1732     _get_p_ext_int_status:
                                    1- 1733     ; 2 exit points
                                    1- 1734     	.line	990, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1- 1735     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1- 1736     	BTRSS	_vFlag_1,3
                                    1- 1737     	MGOTO	_02459_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1738     	.line	992, "main.c"; 	if (!P_I2C_INT)
     0003 0Drr                      1- 1739     	BTRSC	_PORTAbits,2
                                    1- 1740     	MGOTO	_02451_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1741     	.line	994, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1742     	BANKSEL	_get_p_ext_int_status_counter_65536_115
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 05rr                      1- 1743     	INCR	_get_p_ext_int_status_counter_65536_115,F
                                    1- 1744     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1745     ;;unsigned compare: left >= lit(0x20=32), size=1
     0007 2120                      1- 1746     	MOVIA	0x20
     0008 04rr                      1- 1747     	SUBAR	_get_p_ext_int_status_counter_65536_115,W
     0009 0803                      1- 1748     	BTRSS	STATUS,0
                                    1- 1749     	MGOTO	_02461_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1750     	.line	996, "main.c"; 	counter = 0;
     000B 02rr                      1- 1751     	CLRR	_get_p_ext_int_status_counter_65536_115
                                    1- 1752     	.line	997, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1753     	BANKSEL	_vFlag_1
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Drr                      1- 1754     	BCR	_vFlag_1,3
                                    1- 1755     	.line	997, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1756     	MGOTO	_02461_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
     000F                           1- 1757     _02451_DS_:
                                    1- 1758     	.line	1012, "main.c"; 	counter = 0;
                                    1- 1759     	BANKSEL	_get_p_ext_int_status_counter_65536_115
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 02rr                      1- 1760     	CLRR	_get_p_ext_int_status_counter_65536_115
                                    1- 1761     	MGOTO	_02461_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
     0012                           1- 1762     _02459_DS_:
                                    1- 1763     	.line	1017, "main.c"; 	if (P_I2C_INT)
     0012 09rr                      1- 1764     	BTRSS	_PORTAbits,2
                                    1- 1765     	MGOTO	_02456_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1766     	.line	1019, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1767     	BANKSEL	_get_p_ext_int_status_counter_65536_115
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1768     	INCR	_get_p_ext_int_status_counter_65536_115,F
                                    1- 1769     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1770     ;;unsigned compare: left >= lit(0x20=32), size=1
     0016 2120                      1- 1771     	MOVIA	0x20
     0017 04rr                      1- 1772     	SUBAR	_get_p_ext_int_status_counter_65536_115,W
     0018 0803                      1- 1773     	BTRSS	STATUS,0
                                    1- 1774     	MGOTO	_02461_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1775     	.line	1021, "main.c"; 	counter = 0;
     001A 02rr                      1- 1776     	CLRR	_get_p_ext_int_status_counter_65536_115
                                    1- 1777     	.line	1022, "main.c"; 	bFlag_p_ext_int_is_high = 1;
                                    1- 1778     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 19rr                      1- 1779     	BSR	_vFlag_1,3
                                    1- 1780     	.line	1024, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     001D 21C0                      1- 1781     	MOVIA	0xc0
     001E 00rr                      1- 1782     	MOVAR	STK00
     001F 2100                      1- 1783     	MOVIA	0x00
                                    1- 1784     	MCALL	_ip55xs_read4Bytes
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1785     	.line	1026, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1786     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1787     	MOVR	(_IP_DATA + 3),W
                                    1- 1788     	BANKSEL	r0x102A
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1789     	MOVAR	r0x102A
     0025 1Drr                      1- 1790     	BCR	r0x102A,2
     0026 01rr                      1- 1791     	MOVR	r0x102A,W
                                    1- 1792     	BANKSEL	_IP_DATA
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1- 1793     	MOVAR	(_IP_DATA + 3)
                                    1- 1794     	.line	1027, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     0029 01rr                      1- 1795     	MOVR	(_IP_DATA + 3),W
                                    1- 1796     	BANKSEL	r0x102A
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1797     	MOVAR	r0x102A
     002C 1Crr                      1- 1798     	BCR	r0x102A,0
     002D 01rr                      1- 1799     	MOVR	r0x102A,W
                                    1- 1800     	BANKSEL	_IP_DATA
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1801     	MOVAR	(_IP_DATA + 3)
                                    1- 1802     	.line	1028, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0030 21rr                      1- 1803     	MOVIA	(_IP_DATA + 0)
                                    1- 1804     	BANKSEL	r0x102A
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1805     	MOVAR	r0x102A
     0033 00rr                      1- 1806     	MOVAR	STK03
     0034 2100                      1- 1807     	MOVIA	0x00
     0035 00rr                      1- 1808     	MOVAR	STK02
     0036 00rr                      1- 1809     	MOVAR	STK01
     0037 21C0                      1- 1810     	MOVIA	0xc0
     0038 00rr                      1- 1811     	MOVAR	STK00
     0039 2100                      1- 1812     	MOVIA	0x00
                                    1- 1813     	MCALL	_ip55xs_write4Bytes
     003A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1814     	.line	1029, "main.c"; 	delaySleepTimer = CNST_TIMER_DLY_SLP;
     003B 2178                      1- 1815     	MOVIA	0x78
                                    1- 1816     	BANKSEL	_delaySleepTimer
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 00rr                      1- 1817     	MOVAR	_delaySleepTimer
                                    1- 1818     	MGOTO	_02461_DS_
     003E 3rrr                      3-   62 m1      LGOTO rom_address
     003F                           1- 1819     _02456_DS_:
                                    1- 1820     	.line	1035, "main.c"; 	counter = 0;
                                    1- 1821     	BANKSEL	_get_p_ext_int_status_counter_65536_115
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 02rr                      1- 1822     	CLRR	_get_p_ext_int_status_counter_65536_115
     0041                           1- 1823     _02461_DS_:
                                    1- 1824     	.line	1038, "main.c"; 	}
                                    1- 1825     	RETURN	
     0041 0010                      3-   39 m1      ret
                                    1- 1826     ; exit point of _get_p_ext_int_status
                                    1- 1828     ;***
                                    1- 1829     ;  pBlock Stats: dbName = C
                                    1- 1830     ;***
                                    1- 1831     ;has an exit
                                    1- 1832     ;functions called:
                                    1- 1833     ;   _ip55xs_read4Bytes
                                    1- 1834     ;   _ip55xs_write4Bytes
                                    1- 1835     ;   _ip55xs_read4Bytes
                                    1- 1836     ;   _ip55xs_write4Bytes
                                    1- 1837     ;7 compiler assigned registers:
                                    1- 1838     ;   STK00
                                    1- 1839     ;   r0x102E
                                    1- 1840     ;   r0x102F
                                    1- 1841     ;   r0x1030
                                    1- 1842     ;   STK03
                                    1- 1843     ;   STK02
                                    1- 1844     ;   STK01
                                    1- 1845     ;; Starting pCode block
                                    1- 1846     .segment "code"; module=main, function=_init_ip53xs
     0000                           1- 1848     _init_ip53xs:
                                    1- 1849     ; 2 exit points
                                    1- 1850     	.line	978, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     0000 21C0                      1- 1851     	MOVIA	0xc0
     0001 00rr                      1- 1852     	MOVAR	STK00
     0002 2100                      1- 1853     	MOVIA	0x00
                                    1- 1854     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1855     	.line	980, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1856     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1857     	MOVR	(_IP_DATA + 3),W
                                    1- 1858     	BANKSEL	r0x102E
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1859     	MOVAR	r0x102E
     0008 1Drr                      1- 1860     	BCR	r0x102E,2
     0009 01rr                      1- 1861     	MOVR	r0x102E,W
                                    1- 1862     	BANKSEL	_IP_DATA
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1863     	MOVAR	(_IP_DATA + 3)
                                    1- 1864     	.line	981, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     000C 01rr                      1- 1865     	MOVR	(_IP_DATA + 3),W
                                    1- 1866     	BANKSEL	r0x102E
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1867     	MOVAR	r0x102E
     000F 1Crr                      1- 1868     	BCR	r0x102E,0
     0010 01rr                      1- 1869     	MOVR	r0x102E,W
                                    1- 1870     	BANKSEL	_IP_DATA
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1871     	MOVAR	(_IP_DATA + 3)
                                    1- 1872     	.line	982, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0013 21rr                      1- 1873     	MOVIA	(_IP_DATA + 0)
                                    1- 1874     	BANKSEL	r0x102E
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1875     	MOVAR	r0x102E
     0016 00rr                      1- 1876     	MOVAR	STK03
     0017 2100                      1- 1877     	MOVIA	0x00
     0018 00rr                      1- 1878     	MOVAR	STK02
     0019 00rr                      1- 1879     	MOVAR	STK01
     001A 21C0                      1- 1880     	MOVIA	0xc0
     001B 00rr                      1- 1881     	MOVAR	STK00
     001C 2100                      1- 1882     	MOVIA	0x00
                                    1- 1883     	MCALL	_ip55xs_write4Bytes
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1884     	.line	983, "main.c"; 	}
                                    1- 1885     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 1886     ; exit point of _init_ip53xs
                                    1- 1888     ;***
                                    1- 1889     ;  pBlock Stats: dbName = C
                                    1- 1890     ;***
                                    1- 1891     ;has an exit
                                    1- 1892     ;functions called:
                                    1- 1893     ;   _ip53xs_writeByte
                                    1- 1894     ;   _ip53xs_writeByte
                                    1- 1895     ;   _ip53xs_writeByte
                                    1- 1896     ;   _ip53xs_writeByte
                                    1- 1897     ;   _ip53xs_readByte
                                    1- 1898     ;   _ip53xs_readByte
                                    1- 1899     ;   _ip53xs_readByte
                                    1- 1900     ;   _ip53xs_readByte
                                    1- 1901     ;   _ip53xs_readByte
                                    1- 1902     ;   _ip53xs_writeByte
                                    1- 1903     ;   _ip53xs_writeByte
                                    1- 1904     ;   _ip53xs_writeByte
                                    1- 1905     ;   _ip53xs_writeByte
                                    1- 1906     ;   _ip53xs_writeByte
                                    1- 1907     ;   _ip53xs_writeByte
                                    1- 1908     ;   _ip53xs_writeByte
                                    1- 1909     ;   _ip53xs_writeByte
                                    1- 1910     ;   _ip53xs_readByte
                                    1- 1911     ;   _ip53xs_readByte
                                    1- 1912     ;   _ip53xs_readByte
                                    1- 1913     ;   _ip53xs_readByte
                                    1- 1914     ;   _ip53xs_readByte
                                    1- 1915     ;   _ip53xs_writeByte
                                    1- 1916     ;   _ip53xs_writeByte
                                    1- 1917     ;   _ip53xs_writeByte
                                    1- 1918     ;   _ip53xs_writeByte
                                    1- 1919     ;7 compiler assigned registers:
                                    1- 1920     ;   r0x1023
                                    1- 1921     ;   STK00
                                    1- 1922     ;   r0x1024
                                    1- 1923     ;   r0x1025
                                    1- 1924     ;   STK01
                                    1- 1925     ;   r0x1026
                                    1- 1926     ;   r0x1027
                                    1- 1927     ;; Starting pCode block
                                    1- 1928     .segment "code"; module=main, function=_ip55xs_read4Bytes
                                    1- 1930     ;local variable name mapping:
     0000                           1- 1934     _ip55xs_read4Bytes:
                                    1- 1935     ; 2 exit points
                                    1- 1936     	.line	931, "main.c"; 	BOOL ip55xs_read4Bytes(/*unsigned char deviceAddr,*/ unsigned int regAddr) //(unsigned char regAddr)
                                    1- 1937     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1938     	MOVAR	r0x1023
     0002 01rr                      1- 1939     	MOVR	STK00,W
                                    1- 1940     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1941     	MOVAR	r0x1024
                                    1- 1942     	.line	937, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 1943     	BANKSEL	r0x1025
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1944     	MOVAR	r0x1025
     0007 00rr                      1- 1945     	MOVAR	STK01
     0008 2110                      1- 1946     	MOVIA	0x10
     0009 00rr                      1- 1947     	MOVAR	STK00
     000A 21EA                      1- 1948     	MOVIA	0xea
                                    1- 1949     	MCALL	_ip53xs_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1950     	.line	938, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 1951     	BANKSEL	r0x1023
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1952     	MOVR	r0x1023,W
                                    1- 1953     	BANKSEL	r0x1026
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1954     	MOVAR	r0x1026
                                    1- 1955     	BANKSEL	r0x1024
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1956     	MOVAR	r0x1024
     0012 00rr                      1- 1957     	MOVAR	STK01
     0013 2111                      1- 1958     	MOVIA	0x11
     0014 00rr                      1- 1959     	MOVAR	STK00
     0015 21EA                      1- 1960     	MOVIA	0xea
                                    1- 1961     	MCALL	_ip53xs_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1962     	.line	939, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x11);
     0017 2111                      1- 1963     	MOVIA	0x11
     0018 00rr                      1- 1964     	MOVAR	STK01
     0019 2112                      1- 1965     	MOVIA	0x12
     001A 00rr                      1- 1966     	MOVAR	STK00
     001B 21EA                      1- 1967     	MOVIA	0xea
                                    1- 1968     	MCALL	_ip53xs_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1969     	.line	940, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x11);
     001D 2111                      1- 1970     	MOVIA	0x11
     001E 00rr                      1- 1971     	MOVAR	STK01
     001F 2113                      1- 1972     	MOVIA	0x13
     0020 00rr                      1- 1973     	MOVAR	STK00
     0021 21EA                      1- 1974     	MOVIA	0xea
                                    1- 1975     	MCALL	_ip53xs_writeByte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1976     	.line	944, "main.c"; 	do
     0023 2164                      1- 1977     	MOVIA	0x64
                                    1- 1978     	BANKSEL	r0x1023
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 1979     	MOVAR	r0x1023
     0026                           1- 1980     _02436_DS_:
                                    1- 1981     	.line	946, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0026 2100                      1- 1982     	MOVIA	0x00
     0027 00rr                      1- 1983     	MOVAR	STK00
     0028 21EA                      1- 1984     	MOVIA	0xea
                                    1- 1985     	MCALL	_ip53xs_readByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1986     	BANKSEL	r0x1026
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1987     	MOVAR	r0x1026
                                    1- 1988     	.line	947, "main.c"; 	if (0 == timer_out)
                                    1- 1989     	BANKSEL	r0x1023
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1990     	MOVR	r0x1023,W
     002E 0903                      1- 1991     	BTRSS	STATUS,2
                                    1- 1992     	MGOTO	_02434_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1993     	.line	949, "main.c"; 	return FALSE;
     0030 2100                      1- 1994     	MOVIA	0x00
                                    1- 1995     	MGOTO	_02439_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 1996     _02434_DS_:
                                    1- 1997     	.line	954, "main.c"; 	timer_out--;
                                    1- 1998     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 06rr                      1- 1999     	DECR	r0x1023,F
                                    1- 2000     	.line	956, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2001     	BANKSEL	r0x1026
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 01rr                      1- 2002     	MOVR	r0x1026,W
     0036 24AA                      1- 2003     	XORIA	0xaa
     0037 0903                      1- 2004     	BTRSS	STATUS,2
                                    1- 2005     	MGOTO	_02436_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2006     	.line	957, "main.c"; 	IP_DATA[0] = ip53xs_readByte(0xEA, 0x0C);
     0039 210C                      1- 2007     	MOVIA	0x0c
     003A 00rr                      1- 2008     	MOVAR	STK00
     003B 21EA                      1- 2009     	MOVIA	0xea
                                    1- 2010     	MCALL	_ip53xs_readByte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2011     	BANKSEL	r0x1023
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 2012     	MOVAR	r0x1023
                                    1- 2013     	BANKSEL	_IP_DATA
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 2014     	MOVAR	(_IP_DATA + 0)
                                    1- 2015     	.line	958, "main.c"; 	IP_DATA[1] = ip53xs_readByte(0xEA, 0x0D);
     0041 210D                      1- 2016     	MOVIA	0x0d
     0042 00rr                      1- 2017     	MOVAR	STK00
     0043 21EA                      1- 2018     	MOVIA	0xea
                                    1- 2019     	MCALL	_ip53xs_readByte
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2020     	BANKSEL	r0x1023
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 2021     	MOVAR	r0x1023
                                    1- 2022     	BANKSEL	_IP_DATA
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2023     	MOVAR	(_IP_DATA + 1)
                                    1- 2024     	.line	959, "main.c"; 	IP_DATA[2] = ip53xs_readByte(0xEA, 0x0E);
     0049 210E                      1- 2025     	MOVIA	0x0e
     004A 00rr                      1- 2026     	MOVAR	STK00
     004B 21EA                      1- 2027     	MOVIA	0xea
                                    1- 2028     	MCALL	_ip53xs_readByte
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2029     	BANKSEL	r0x1023
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 2030     	MOVAR	r0x1023
                                    1- 2031     	BANKSEL	_IP_DATA
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2032     	MOVAR	(_IP_DATA + 2)
                                    1- 2033     	.line	960, "main.c"; 	IP_DATA[3] = ip53xs_readByte(0xEA, 0x0F);
     0051 210F                      1- 2034     	MOVIA	0x0f
     0052 00rr                      1- 2035     	MOVAR	STK00
     0053 21EA                      1- 2036     	MOVIA	0xea
                                    1- 2037     	MCALL	_ip53xs_readByte
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2038     	BANKSEL	r0x1023
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 2039     	MOVAR	r0x1023
                                    1- 2040     	BANKSEL	_IP_DATA
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2041     	MOVAR	(_IP_DATA + 3)
                                    1- 2042     	.line	961, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2043     	BANKSEL	r0x1025
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1- 2044     	MOVR	r0x1025,W
     005B 00rr                      1- 2045     	MOVAR	STK01
     005C 2110                      1- 2046     	MOVIA	0x10
     005D 00rr                      1- 2047     	MOVAR	STK00
     005E 21EA                      1- 2048     	MOVIA	0xea
                                    1- 2049     	MCALL	_ip53xs_writeByte
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2050     	.line	962, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2051     	BANKSEL	r0x1024
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2052     	MOVR	r0x1024,W
     0062 00rr                      1- 2053     	MOVAR	STK01
     0063 2111                      1- 2054     	MOVIA	0x11
     0064 00rr                      1- 2055     	MOVAR	STK00
     0065 21EA                      1- 2056     	MOVIA	0xea
                                    1- 2057     	MCALL	_ip53xs_writeByte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2058     	.line	963, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x22);
     0067 2122                      1- 2059     	MOVIA	0x22
     0068 00rr                      1- 2060     	MOVAR	STK01
     0069 2112                      1- 2061     	MOVIA	0x12
     006A 00rr                      1- 2062     	MOVAR	STK00
     006B 21EA                      1- 2063     	MOVIA	0xea
                                    1- 2064     	MCALL	_ip53xs_writeByte
     006C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2065     	.line	964, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x22);
     006D 2122                      1- 2066     	MOVIA	0x22
     006E 00rr                      1- 2067     	MOVAR	STK01
     006F 2113                      1- 2068     	MOVIA	0x13
     0070 00rr                      1- 2069     	MOVAR	STK00
     0071 21EA                      1- 2070     	MOVIA	0xea
                                    1- 2071     	MCALL	_ip53xs_writeByte
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2072     	.line	965, "main.c"; 	return TRUE;
     0073 2101                      1- 2073     	MOVIA	0x01
     0074                           1- 2074     _02439_DS_:
                                    1- 2075     	.line	966, "main.c"; 	}
                                    1- 2076     	RETURN	
     0074 0010                      3-   39 m1      ret
                                    1- 2077     ; exit point of _ip55xs_read4Bytes
                                    1- 2079     ;***
                                    1- 2080     ;  pBlock Stats: dbName = C
                                    1- 2081     ;***
                                    1- 2082     ;has an exit
                                    1- 2083     ;functions called:
                                    1- 2084     ;   _ip53xs_writeByte
                                    1- 2085     ;   _ip53xs_writeByte
                                    1- 2086     ;   _ip53xs_writeByte
                                    1- 2087     ;   _ip53xs_writeByte
                                    1- 2088     ;   _ip53xs_readByte
                                    1- 2089     ;   __gptrget1
                                    1- 2090     ;   _ip53xs_writeByte
                                    1- 2091     ;   __gptrget1
                                    1- 2092     ;   _ip53xs_writeByte
                                    1- 2093     ;   _ip53xs_writeByte
                                    1- 2094     ;   _ip53xs_writeByte
                                    1- 2095     ;   _ip53xs_readByte
                                    1- 2096     ;   __gptrget1
                                    1- 2097     ;   _ip53xs_writeByte
                                    1- 2098     ;   __gptrget1
                                    1- 2099     ;   _ip53xs_writeByte
                                    1- 2100     ;   _ip53xs_writeByte
                                    1- 2101     ;   _ip53xs_writeByte
                                    1- 2102     ;   _ip53xs_readByte
                                    1- 2103     ;   _ip53xs_writeByte
                                    1- 2104     ;   _ip53xs_writeByte
                                    1- 2105     ;   _ip53xs_writeByte
                                    1- 2106     ;   _ip53xs_writeByte
                                    1- 2107     ;   _ip53xs_readByte
                                    1- 2108     ;   __gptrget1
                                    1- 2109     ;   _ip53xs_writeByte
                                    1- 2110     ;   __gptrget1
                                    1- 2111     ;   _ip53xs_writeByte
                                    1- 2112     ;   _ip53xs_writeByte
                                    1- 2113     ;   _ip53xs_writeByte
                                    1- 2114     ;   _ip53xs_readByte
                                    1- 2115     ;   __gptrget1
                                    1- 2116     ;   _ip53xs_writeByte
                                    1- 2117     ;   __gptrget1
                                    1- 2118     ;   _ip53xs_writeByte
                                    1- 2119     ;   _ip53xs_writeByte
                                    1- 2120     ;   _ip53xs_writeByte
                                    1- 2121     ;   _ip53xs_readByte
                                    1- 2122     ;11 compiler assigned registers:
                                    1- 2123     ;   r0x1023
                                    1- 2124     ;   STK00
                                    1- 2125     ;   r0x1024
                                    1- 2126     ;   STK01
                                    1- 2127     ;   r0x1025
                                    1- 2128     ;   STK02
                                    1- 2129     ;   r0x1026
                                    1- 2130     ;   STK03
                                    1- 2131     ;   r0x1027
                                    1- 2132     ;   r0x1028
                                    1- 2133     ;   r0x1029
                                    1- 2134     ;; Starting pCode block
                                    1- 2135     .segment "code"; module=main, function=_ip55xs_write4Bytes
                                    1- 2137     ;local variable name mapping:
     0000                           1- 2142     _ip55xs_write4Bytes:
                                    1- 2143     ; 2 exit points
                                    1- 2144     	.line	862, "main.c"; 	BOOL ip55xs_write4Bytes(unsigned int regAddr, unsigned char *pdata)
                                    1- 2145     	BANKSEL	r0x1023
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2146     	MOVAR	r0x1023
     0002 01rr                      1- 2147     	MOVR	STK00,W
                                    1- 2148     	BANKSEL	r0x1024
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2149     	MOVAR	r0x1024
     0005 01rr                      1- 2150     	MOVR	STK01,W
                                    1- 2151     	BANKSEL	r0x1025
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2152     	MOVAR	r0x1025
     0008 01rr                      1- 2153     	MOVR	STK02,W
                                    1- 2154     	BANKSEL	r0x1026
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 2155     	MOVAR	r0x1026
     000B 01rr                      1- 2156     	MOVR	STK03,W
                                    1- 2157     	BANKSEL	r0x1027
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 2158     	MOVAR	r0x1027
                                    1- 2159     	.line	867, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2160     	BANKSEL	r0x1024
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 2161     	MOVR	r0x1024,W
                                    1- 2162     ;;100	MOVAR	r0x1028
     0010 00rr                      1- 2163     	MOVAR	STK01
     0011 2110                      1- 2164     	MOVIA	0x10
     0012 00rr                      1- 2165     	MOVAR	STK00
     0013 21EA                      1- 2166     	MOVIA	0xea
                                    1- 2167     	MCALL	_ip53xs_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2168     	.line	868, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2169     	BANKSEL	r0x1023
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2170     	MOVR	r0x1023,W
                                    1- 2171     ;;99	MOVAR	r0x1028
                                    1- 2172     	BANKSEL	r0x1024
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 2173     	MOVAR	r0x1024
     0019 00rr                      1- 2174     	MOVAR	STK01
     001A 2111                      1- 2175     	MOVIA	0x11
     001B 00rr                      1- 2176     	MOVAR	STK00
     001C 21EA                      1- 2177     	MOVIA	0xea
                                    1- 2178     	MCALL	_ip53xs_writeByte
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2179     	.line	869, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x55);
     001E 2155                      1- 2180     	MOVIA	0x55
     001F 00rr                      1- 2181     	MOVAR	STK01
     0020 2112                      1- 2182     	MOVIA	0x12
     0021 00rr                      1- 2183     	MOVAR	STK00
     0022 21EA                      1- 2184     	MOVIA	0xea
                                    1- 2185     	MCALL	_ip53xs_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2186     	.line	870, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x55);
     0024 2155                      1- 2187     	MOVIA	0x55
     0025 00rr                      1- 2188     	MOVAR	STK01
     0026 2113                      1- 2189     	MOVIA	0x13
     0027 00rr                      1- 2190     	MOVAR	STK00
     0028 21EA                      1- 2191     	MOVIA	0xea
                                    1- 2192     	MCALL	_ip53xs_writeByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2193     	.line	872, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     002A 2100                      1- 2194     	MOVIA	0x00
     002B 00rr                      1- 2195     	MOVAR	STK00
     002C 21EA                      1- 2196     	MOVIA	0xea
                                    1- 2197     	MCALL	_ip53xs_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2198     	BANKSEL	r0x1024
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2199     	MOVAR	r0x1024
                                    1- 2200     	.line	874, "main.c"; 	do
     0030 2164                      1- 2201     	MOVIA	0x64
                                    1- 2202     	BANKSEL	r0x1023
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 2203     	MOVAR	r0x1023
     0033                           1- 2204     _02413_DS_:
                                    1- 2205     	.line	876, "main.c"; 	if (timer_out)
                                    1- 2206     	BANKSEL	r0x1023
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 2207     	MOVR	r0x1023,W
     0035 0D03                      1- 2208     	BTRSC	STATUS,2
                                    1- 2209     	MGOTO	_02411_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2210     	.line	878, "main.c"; 	timer_out--;
     0037 06rr                      1- 2211     	DECR	r0x1023,F
                                    1- 2212     	MGOTO	_02414_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1- 2213     _02411_DS_:
                                    1- 2214     	.line	882, "main.c"; 	return FALSE;
     0039 2100                      1- 2215     	MOVIA	0x00
                                    1- 2216     	MGOTO	_02428_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 2217     _02414_DS_:
                                    1- 2218     	.line	884, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2219     	BANKSEL	r0x1024
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 2220     	MOVR	r0x1024,W
     003D 24AA                      1- 2221     	XORIA	0xaa
     003E 0903                      1- 2222     	BTRSS	STATUS,2
                                    1- 2223     	MGOTO	_02413_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2224     	.line	885, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA0
                                    1- 2225     	BANKSEL	r0x1027
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 2226     	MOVR	r0x1027,W
     0042 00rr                      1- 2227     	MOVAR	STK01
                                    1- 2228     	BANKSEL	r0x1026
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 2229     	MOVR	r0x1026,W
     0045 00rr                      1- 2230     	MOVAR	STK00
                                    1- 2231     	BANKSEL	r0x1025
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 2232     	MOVR	r0x1025,W
                                    1- 2233     	MCALL	__gptrget1
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2234     	BANKSEL	r0x1024
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 2235     	MOVAR	r0x1024
     004B 00rr                      1- 2236     	MOVAR	STK01
     004C 2110                      1- 2237     	MOVIA	0x10
     004D 00rr                      1- 2238     	MOVAR	STK00
     004E 21EA                      1- 2239     	MOVIA	0xea
                                    1- 2240     	MCALL	_ip53xs_writeByte
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2241     	.line	886, "main.c"; 	pdata++;
                                    1- 2242     	BANKSEL	r0x1027
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 05rr                      1- 2243     	INCR	r0x1027,F
     0052 0903                      1- 2244     	BTRSS	STATUS,2
                                    1- 2245     	MGOTO	_00009_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2246     	BANKSEL	r0x1026
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 05rr                      1- 2247     	INCR	r0x1026,F
     0056                           1- 2248     _00009_DS_:
     0056 0903                      1- 2249     	BTRSS	STATUS,2
                                    1- 2250     	MGOTO	_00010_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2251     	BANKSEL	r0x1025
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 05rr                      1- 2252     	INCR	r0x1025,F
     005A                           1- 2253     _00010_DS_:
                                    1- 2254     	.line	887, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA1
                                    1- 2255     	BANKSEL	r0x1027
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1- 2256     	MOVR	r0x1027,W
     005C 00rr                      1- 2257     	MOVAR	STK01
                                    1- 2258     	BANKSEL	r0x1026
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1- 2259     	MOVR	r0x1026,W
     005F 00rr                      1- 2260     	MOVAR	STK00
                                    1- 2261     	BANKSEL	r0x1025
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2262     	MOVR	r0x1025,W
                                    1- 2263     	MCALL	__gptrget1
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2264     	BANKSEL	r0x1024
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 00rr                      1- 2265     	MOVAR	r0x1024
     0065 00rr                      1- 2266     	MOVAR	STK01
     0066 2111                      1- 2267     	MOVIA	0x11
     0067 00rr                      1- 2268     	MOVAR	STK00
     0068 21EA                      1- 2269     	MOVIA	0xea
                                    1- 2270     	MCALL	_ip53xs_writeByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2271     	.line	889, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x66);
     006A 2166                      1- 2272     	MOVIA	0x66
     006B 00rr                      1- 2273     	MOVAR	STK01
     006C 2112                      1- 2274     	MOVIA	0x12
     006D 00rr                      1- 2275     	MOVAR	STK00
     006E 21EA                      1- 2276     	MOVIA	0xea
                                    1- 2277     	MCALL	_ip53xs_writeByte
     006F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2278     	.line	891, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x66);
     0070 2166                      1- 2279     	MOVIA	0x66
     0071 00rr                      1- 2280     	MOVAR	STK01
     0072 2113                      1- 2281     	MOVIA	0x13
     0073 00rr                      1- 2282     	MOVAR	STK00
     0074 21EA                      1- 2283     	MOVIA	0xea
                                    1- 2284     	MCALL	_ip53xs_writeByte
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2285     	.line	893, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0076 2100                      1- 2286     	MOVIA	0x00
     0077 00rr                      1- 2287     	MOVAR	STK00
     0078 21EA                      1- 2288     	MOVIA	0xea
                                    1- 2289     	MCALL	_ip53xs_readByte
     0079 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2290     	BANKSEL	r0x1024
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 00rr                      1- 2291     	MOVAR	r0x1024
                                    1- 2292     	.line	895, "main.c"; 	do
     007C 2164                      1- 2293     	MOVIA	0x64
                                    1- 2294     	BANKSEL	r0x1023
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 2295     	MOVAR	r0x1023
     007F                           1- 2296     _02419_DS_:
                                    1- 2297     	.line	897, "main.c"; 	if (timer_out)
                                    1- 2298     	BANKSEL	r0x1023
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1- 2299     	MOVR	r0x1023,W
     0081 0D03                      1- 2300     	BTRSC	STATUS,2
                                    1- 2301     	MGOTO	_02417_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2302     	.line	899, "main.c"; 	timer_out--;
     0083 06rr                      1- 2303     	DECR	r0x1023,F
                                    1- 2304     	MGOTO	_02420_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2305     _02417_DS_:
                                    1- 2306     	.line	903, "main.c"; 	return FALSE;
     0085 2100                      1- 2307     	MOVIA	0x00
                                    1- 2308     	MGOTO	_02428_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 2309     _02420_DS_:
                                    1- 2310     	.line	905, "main.c"; 	} while (0x55 != reg_ip55xs);
                                    1- 2311     	BANKSEL	r0x1024
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 2312     	MOVR	r0x1024,W
     0089 2455                      1- 2313     	XORIA	0x55
     008A 0903                      1- 2314     	BTRSS	STATUS,2
                                    1- 2315     	MGOTO	_02419_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2316     	.line	907, "main.c"; 	pdata++;
                                    1- 2317     	BANKSEL	r0x1027
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 05rr                      1- 2318     	INCR	r0x1027,F
     008E 0903                      1- 2319     	BTRSS	STATUS,2
                                    1- 2320     	MGOTO	_00011_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2321     	BANKSEL	r0x1026
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 2322     	INCR	r0x1026,F
     0092                           1- 2323     _00011_DS_:
     0092 0903                      1- 2324     	BTRSS	STATUS,2
                                    1- 2325     	MGOTO	_00012_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2326     	BANKSEL	r0x1025
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 2327     	INCR	r0x1025,F
     0096                           1- 2328     _00012_DS_:
                                    1- 2329     	.line	908, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA2
                                    1- 2330     	BANKSEL	r0x1027
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 2331     	MOVR	r0x1027,W
     0098 00rr                      1- 2332     	MOVAR	STK01
                                    1- 2333     	BANKSEL	r0x1026
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 2334     	MOVR	r0x1026,W
     009B 00rr                      1- 2335     	MOVAR	STK00
                                    1- 2336     	BANKSEL	r0x1025
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 01rr                      1- 2337     	MOVR	r0x1025,W
                                    1- 2338     	MCALL	__gptrget1
     009E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2339     	BANKSEL	r0x1024
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 2340     	MOVAR	r0x1024
     00A1 00rr                      1- 2341     	MOVAR	STK01
     00A2 2110                      1- 2342     	MOVIA	0x10
     00A3 00rr                      1- 2343     	MOVAR	STK00
     00A4 21EA                      1- 2344     	MOVIA	0xea
                                    1- 2345     	MCALL	_ip53xs_writeByte
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2346     	.line	909, "main.c"; 	pdata++;
                                    1- 2347     	BANKSEL	r0x1027
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 05rr                      1- 2348     	INCR	r0x1027,F
     00A8 0903                      1- 2349     	BTRSS	STATUS,2
                                    1- 2350     	MGOTO	_00013_DS_
     00A9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2351     	BANKSEL	r0x1026
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 05rr                      1- 2352     	INCR	r0x1026,F
     00AC                           1- 2353     _00013_DS_:
     00AC 0903                      1- 2354     	BTRSS	STATUS,2
                                    1- 2355     	MGOTO	_00014_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2356     	BANKSEL	r0x1025
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 05rr                      1- 2357     	INCR	r0x1025,F
     00B0                           1- 2358     _00014_DS_:
                                    1- 2359     	.line	910, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA3
                                    1- 2360     	BANKSEL	r0x1027
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 01rr                      1- 2361     	MOVR	r0x1027,W
     00B2 00rr                      1- 2362     	MOVAR	STK01
                                    1- 2363     	BANKSEL	r0x1026
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 01rr                      1- 2364     	MOVR	r0x1026,W
     00B5 00rr                      1- 2365     	MOVAR	STK00
                                    1- 2366     	BANKSEL	r0x1025
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 2367     	MOVR	r0x1025,W
                                    1- 2368     	MCALL	__gptrget1
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2369     	BANKSEL	r0x1024
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 2370     	MOVAR	r0x1024
     00BB 00rr                      1- 2371     	MOVAR	STK01
     00BC 2111                      1- 2372     	MOVIA	0x11
     00BD 00rr                      1- 2373     	MOVAR	STK00
     00BE 21EA                      1- 2374     	MOVIA	0xea
                                    1- 2375     	MCALL	_ip53xs_writeByte
     00BF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2376     	.line	911, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x77);
     00C0 2177                      1- 2377     	MOVIA	0x77
     00C1 00rr                      1- 2378     	MOVAR	STK01
     00C2 2112                      1- 2379     	MOVIA	0x12
     00C3 00rr                      1- 2380     	MOVAR	STK00
     00C4 21EA                      1- 2381     	MOVIA	0xea
                                    1- 2382     	MCALL	_ip53xs_writeByte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2383     	.line	913, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x77);
     00C6 2177                      1- 2384     	MOVIA	0x77
     00C7 00rr                      1- 2385     	MOVAR	STK01
     00C8 2113                      1- 2386     	MOVIA	0x13
     00C9 00rr                      1- 2387     	MOVAR	STK00
     00CA 21EA                      1- 2388     	MOVIA	0xea
                                    1- 2389     	MCALL	_ip53xs_writeByte
     00CB 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2390     	.line	915, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     00CC 2100                      1- 2391     	MOVIA	0x00
     00CD 00rr                      1- 2392     	MOVAR	STK00
     00CE 21EA                      1- 2393     	MOVIA	0xea
                                    1- 2394     	MCALL	_ip53xs_readByte
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2395     	BANKSEL	r0x1024
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 00rr                      1- 2396     	MOVAR	r0x1024
                                    1- 2397     	.line	917, "main.c"; 	do
     00D2 2164                      1- 2398     	MOVIA	0x64
                                    1- 2399     	BANKSEL	r0x1023
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1- 2400     	MOVAR	r0x1023
     00D5                           1- 2401     _02425_DS_:
                                    1- 2402     	.line	919, "main.c"; 	if (timer_out)
                                    1- 2403     	BANKSEL	r0x1023
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 01rr                      1- 2404     	MOVR	r0x1023,W
     00D7 0D03                      1- 2405     	BTRSC	STATUS,2
                                    1- 2406     	MGOTO	_02423_DS_
     00D8 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2407     	.line	921, "main.c"; 	timer_out--;
     00D9 06rr                      1- 2408     	DECR	r0x1023,F
                                    1- 2409     	MGOTO	_02426_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
     00DB                           1- 2410     _02423_DS_:
                                    1- 2411     	.line	925, "main.c"; 	return FALSE;
     00DB 2100                      1- 2412     	MOVIA	0x00
                                    1- 2413     	MGOTO	_02428_DS_
     00DC 3rrr                      3-   62 m1      LGOTO rom_address
     00DD                           1- 2414     _02426_DS_:
                                    1- 2415     	.line	927, "main.c"; 	} while (0xFF != reg_ip55xs);
                                    1- 2416     	BANKSEL	r0x1024
     00DD rrrr                      3-  109 m1      .banksel ram_address
     00DE 01rr                      1- 2417     	MOVR	r0x1024,W
     00DF 24FF                      1- 2418     	XORIA	0xff
     00E0 0903                      1- 2419     	BTRSS	STATUS,2
                                    1- 2420     	MGOTO	_02425_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2421     	.line	928, "main.c"; 	return TRUE;
     00E2 2101                      1- 2422     	MOVIA	0x01
     00E3                           1- 2423     _02428_DS_:
                                    1- 2424     	.line	929, "main.c"; 	}
                                    1- 2425     	RETURN	
     00E3 0010                      3-   39 m1      ret
                                    1- 2426     ; exit point of _ip55xs_write4Bytes
                                    1- 2428     ;***
                                    1- 2429     ;  pBlock Stats: dbName = C
                                    1- 2430     ;***
                                    1- 2431     ;has an exit
                                    1- 2432     ;functions called:
                                    1- 2433     ;   _i2c_start
                                    1- 2434     ;   _i2c_writeByte
                                    1- 2435     ;   _i2c_stop
                                    1- 2436     ;   _i2c_writeByte
                                    1- 2437     ;   _i2c_stop
                                    1- 2438     ;   _i2c_start
                                    1- 2439     ;   _i2c_writeByte
                                    1- 2440     ;   _i2c_stop
                                    1- 2441     ;   _i2c_readByte
                                    1- 2442     ;   _i2c_send_nack
                                    1- 2443     ;   _i2c_stop
                                    1- 2444     ;   _i2c_start
                                    1- 2445     ;   _i2c_writeByte
                                    1- 2446     ;   _i2c_stop
                                    1- 2447     ;   _i2c_writeByte
                                    1- 2448     ;   _i2c_stop
                                    1- 2449     ;   _i2c_start
                                    1- 2450     ;   _i2c_writeByte
                                    1- 2451     ;   _i2c_stop
                                    1- 2452     ;   _i2c_readByte
                                    1- 2453     ;   _i2c_send_nack
                                    1- 2454     ;   _i2c_stop
                                    1- 2455     ;5 compiler assigned registers:
                                    1- 2456     ;   r0x101F
                                    1- 2457     ;   STK00
                                    1- 2458     ;   r0x1020
                                    1- 2459     ;   r0x1021
                                    1- 2460     ;   r0x1022
                                    1- 2461     ;; Starting pCode block
                                    1- 2462     .segment "code"; module=main, function=_ip53xs_readByte
                                    1- 2464     ;local variable name mapping:
     0000                           1- 2468     _ip53xs_readByte:
                                    1- 2469     ; 2 exit points
                                    1- 2470     	.line	827, "main.c"; 	unsigned char ip53xs_readByte(unsigned char deviceAddr, unsigned char regAddr) //(unsigned char regAddr)
                                    1- 2471     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2472     	MOVAR	r0x101F
     0002 01rr                      1- 2473     	MOVR	STK00,W
                                    1- 2474     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2475     	MOVAR	r0x1020
                                    1- 2476     	.line	829, "main.c"; 	unsigned char readByte = 0;
                                    1- 2477     	BANKSEL	r0x1021
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 2478     	CLRR	r0x1021
                                    1- 2479     	.line	830, "main.c"; 	if (P_I2C_INT)
     0007 09rr                      1- 2480     	BTRSS	_PORTAbits,2
                                    1- 2481     	MGOTO	_02404_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2482     	.line	832, "main.c"; 	i2c_start();
                                    1- 2483     	MCALL	_i2c_start
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2484     	.line	834, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2485     	BANKSEL	r0x101F
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1- 2486     	MOVR	r0x101F,W
                                    1- 2487     	MCALL	_i2c_writeByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2488     	BANKSEL	r0x1022
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2489     	MOVAR	r0x1022
     000F 01rr                      1- 2490     	MOVR	r0x1022,W
     0010 0D03                      1- 2491     	BTRSC	STATUS,2
                                    1- 2492     	MGOTO	_02398_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2493     	.line	836, "main.c"; 	i2c_stop();
                                    1- 2494     	MCALL	_i2c_stop
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2495     	.line	837, "main.c"; 	return FALSE;
     0013 2100                      1- 2496     	MOVIA	0x00
                                    1- 2497     	MGOTO	_02405_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
     0015                           1- 2498     _02398_DS_:
                                    1- 2499     	.line	840, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2500     	BANKSEL	r0x1020
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2501     	MOVR	r0x1020,W
                                    1- 2502     	MCALL	_i2c_writeByte
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2503     	BANKSEL	r0x1020
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2504     	MOVAR	r0x1020
     001A 01rr                      1- 2505     	MOVR	r0x1020,W
     001B 0D03                      1- 2506     	BTRSC	STATUS,2
                                    1- 2507     	MGOTO	_02400_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2508     	.line	842, "main.c"; 	i2c_stop();
                                    1- 2509     	MCALL	_i2c_stop
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2510     	.line	843, "main.c"; 	return FALSE;
     001E 2100                      1- 2511     	MOVIA	0x00
                                    1- 2512     	MGOTO	_02405_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2513     _02400_DS_:
                                    1- 2514     	.line	846, "main.c"; 	i2c_start();
                                    1- 2515     	MCALL	_i2c_start
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2516     	.line	848, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 2517     	BANKSEL	r0x101F
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 18rr                      1- 2518     	BSR	r0x101F,0
     0023 01rr                      1- 2519     	MOVR	r0x101F,W
                                    1- 2520     	MCALL	_i2c_writeByte
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2521     	BANKSEL	r0x101F
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 2522     	MOVAR	r0x101F
     0027 01rr                      1- 2523     	MOVR	r0x101F,W
     0028 0D03                      1- 2524     	BTRSC	STATUS,2
                                    1- 2525     	MGOTO	_02402_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2526     	.line	850, "main.c"; 	i2c_stop();
                                    1- 2527     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2528     	.line	851, "main.c"; 	return FALSE;
     002B 2100                      1- 2529     	MOVIA	0x00
                                    1- 2530     	MGOTO	_02405_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 2531     _02402_DS_:
                                    1- 2532     	.line	854, "main.c"; 	readByte = i2c_readByte();
                                    1- 2533     	MCALL	_i2c_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2534     	BANKSEL	r0x1021
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2535     	MOVAR	r0x1021
                                    1- 2536     	.line	855, "main.c"; 	i2c_send_nack();
                                    1- 2537     	MCALL	_i2c_send_nack
     0030 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2538     	.line	856, "main.c"; 	i2c_stop();
                                    1- 2539     	MCALL	_i2c_stop
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1- 2540     _02404_DS_:
                                    1- 2541     	.line	859, "main.c"; 	return readByte;
                                    1- 2542     	BANKSEL	r0x1021
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 2543     	MOVR	r0x1021,W
     0034                           1- 2544     _02405_DS_:
                                    1- 2545     	.line	860, "main.c"; 	}
                                    1- 2546     	RETURN	
     0034 0010                      3-   39 m1      ret
                                    1- 2547     ; exit point of _ip53xs_readByte
                                    1- 2549     ;***
                                    1- 2550     ;  pBlock Stats: dbName = C
                                    1- 2551     ;***
                                    1- 2552     ;has an exit
                                    1- 2553     ;functions called:
                                    1- 2554     ;   _i2c_start
                                    1- 2555     ;   _i2c_writeByte
                                    1- 2556     ;   _i2c_stop
                                    1- 2557     ;   _i2c_writeByte
                                    1- 2558     ;   _i2c_stop
                                    1- 2559     ;   _i2c_writeByte
                                    1- 2560     ;   _i2c_stop
                                    1- 2561     ;   _i2c_stop
                                    1- 2562     ;   _i2c_start
                                    1- 2563     ;   _i2c_writeByte
                                    1- 2564     ;   _i2c_stop
                                    1- 2565     ;   _i2c_writeByte
                                    1- 2566     ;   _i2c_stop
                                    1- 2567     ;   _i2c_writeByte
                                    1- 2568     ;   _i2c_stop
                                    1- 2569     ;   _i2c_stop
                                    1- 2570     ;5 compiler assigned registers:
                                    1- 2571     ;   r0x101F
                                    1- 2572     ;   STK00
                                    1- 2573     ;   r0x1020
                                    1- 2574     ;   STK01
                                    1- 2575     ;   r0x1021
                                    1- 2576     ;; Starting pCode block
                                    1- 2577     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 2579     ;local variable name mapping:
     0000                           1- 2583     _ip53xs_writeByte:
                                    1- 2584     ; 2 exit points
                                    1- 2585     	.line	797, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 2586     	BANKSEL	r0x101F
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2587     	MOVAR	r0x101F
     0002 01rr                      1- 2588     	MOVR	STK00,W
                                    1- 2589     	BANKSEL	r0x1020
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2590     	MOVAR	r0x1020
     0005 01rr                      1- 2591     	MOVR	STK01,W
                                    1- 2592     	BANKSEL	r0x1021
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2593     	MOVAR	r0x1021
                                    1- 2594     	.line	799, "main.c"; 	if (P_I2C_INT)
     0008 09rr                      1- 2595     	BTRSS	_PORTAbits,2
                                    1- 2596     	MGOTO	_02391_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2597     	.line	801, "main.c"; 	i2c_start();
                                    1- 2598     	MCALL	_i2c_start
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2599     	.line	803, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2600     	BANKSEL	r0x101F
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2601     	MOVR	r0x101F,W
                                    1- 2602     	MCALL	_i2c_writeByte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2603     	BANKSEL	r0x101F
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2604     	MOVAR	r0x101F
     0010 01rr                      1- 2605     	MOVR	r0x101F,W
     0011 0D03                      1- 2606     	BTRSC	STATUS,2
                                    1- 2607     	MGOTO	_02385_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2608     	.line	805, "main.c"; 	i2c_stop();
                                    1- 2609     	MCALL	_i2c_stop
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2610     	.line	806, "main.c"; 	return FALSE;
     0014 2100                      1- 2611     	MOVIA	0x00
                                    1- 2612     	MGOTO	_02392_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2613     _02385_DS_:
                                    1- 2614     	.line	809, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2615     	BANKSEL	r0x1020
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 2616     	MOVR	r0x1020,W
                                    1- 2617     	MCALL	_i2c_writeByte
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2618     	BANKSEL	r0x101F
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2619     	MOVAR	r0x101F
     001B 01rr                      1- 2620     	MOVR	r0x101F,W
     001C 0D03                      1- 2621     	BTRSC	STATUS,2
                                    1- 2622     	MGOTO	_02387_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2623     	.line	811, "main.c"; 	i2c_stop();
                                    1- 2624     	MCALL	_i2c_stop
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2625     	.line	812, "main.c"; 	return FALSE;
     001F 2100                      1- 2626     	MOVIA	0x00
                                    1- 2627     	MGOTO	_02392_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2628     _02387_DS_:
                                    1- 2629     	.line	815, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 2630     	BANKSEL	r0x1021
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 2631     	MOVR	r0x1021,W
                                    1- 2632     	MCALL	_i2c_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2633     	BANKSEL	r0x101F
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2634     	MOVAR	r0x101F
     0026 01rr                      1- 2635     	MOVR	r0x101F,W
     0027 0D03                      1- 2636     	BTRSC	STATUS,2
                                    1- 2637     	MGOTO	_02389_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2638     	.line	817, "main.c"; 	i2c_stop();
                                    1- 2639     	MCALL	_i2c_stop
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2640     	.line	818, "main.c"; 	return FALSE;
     002A 2100                      1- 2641     	MOVIA	0x00
                                    1- 2642     	MGOTO	_02392_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 2643     _02389_DS_:
                                    1- 2644     	.line	821, "main.c"; 	i2c_stop();
                                    1- 2645     	MCALL	_i2c_stop
     002C 2rrr                      3-   65 m1      LCALL rom_address
     002D                           1- 2646     _02391_DS_:
                                    1- 2647     	.line	824, "main.c"; 	return TRUE;
     002D 2101                      1- 2648     	MOVIA	0x01
     002E                           1- 2649     _02392_DS_:
                                    1- 2650     	.line	825, "main.c"; 	}
                                    1- 2651     	RETURN	
     002E 0010                      3-   39 m1      ret
                                    1- 2652     ; exit point of _ip53xs_writeByte
                                    1- 2654     ;***
                                    1- 2655     ;  pBlock Stats: dbName = C
                                    1- 2656     ;***
                                    1- 2657     ;has an exit
                                    1- 2658     ;functions called:
                                    1- 2659     ;   __dly_us
                                    1- 2660     ;   __dly_us
                                    1- 2661     ;   __dly_us
                                    1- 2662     ;   __dly_us
                                    1- 2663     ;3 compiler assigned registers:
                                    1- 2664     ;   r0x101B
                                    1- 2665     ;   r0x101C
                                    1- 2666     ;   r0x101D
                                    1- 2667     ;; Starting pCode block
                                    1- 2668     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2670     ;local variable name mapping:
     0000                           1- 2673     _i2c_readByte:
                                    1- 2674     ; 2 exit points
                                    1- 2675     	.line	771, "main.c"; 	unsigned char readByte = 0;
                                    1- 2676     	BANKSEL	r0x101B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2677     	CLRR	r0x101B
                                    1- 2678     	.line	773, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Err                      1- 2679     	BCR	_PORTAbits,4
                                    1- 2680     	.line	774, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2681     	IOSTR	_IOSTA
                                    1- 2682     	BANKSEL	r0x101C
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2683     	MOVAR	r0x101C
     0006 19rr                      1- 2684     	BSR	r0x101C,3
     0007 01rr                      1- 2685     	MOVR	r0x101C,W
     0008 000r                      1- 2686     	IOST	_IOSTA
                                    1- 2687     	.line	776, "main.c"; 	while (i--)
     0009 2108                      1- 2688     	MOVIA	0x08
     000A 00rr                      1- 2689     	MOVAR	r0x101C
     000B                           1- 2690     _02377_DS_:
                                    1- 2691     	BANKSEL	r0x101C
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2692     	MOVR	r0x101C,W
                                    1- 2693     	BANKSEL	r0x101D
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2694     	MOVAR	r0x101D
                                    1- 2695     	BANKSEL	r0x101C
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2696     	DECR	r0x101C,F
                                    1- 2697     	BANKSEL	r0x101D
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2698     	MOVR	r0x101D,W
     0013 0D03                      1- 2699     	BTRSC	STATUS,2
                                    1- 2700     	MGOTO	_02379_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2701     	.line	779, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 1Arr                      1- 2702     	BSR	_PORTAbits,4
                                    1- 2703     	.line	780, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2704     	MOVIA	0x00
                                    1- 2705     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2706     	.line	781, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2707     	BCR	STATUS,0
                                    1- 2708     	BANKSEL	r0x101B
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2709     	RLR	r0x101B,F
                                    1- 2710     	.line	783, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2711     	BTRSC	_PORTAbits,3
                                    1- 2712     	.line	785, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2713     	BSR	r0x101B,0
                                    1- 2714     	.line	788, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Err                      1- 2715     	BCR	_PORTAbits,4
                                    1- 2716     	.line	789, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2717     	MOVIA	0x00
                                    1- 2718     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2719     	MGOTO	_02377_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2720     _02379_DS_:
                                    1- 2721     	.line	793, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2722     	IOSTR	_IOSTA
                                    1- 2723     	BANKSEL	r0x101C
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2724     	MOVAR	r0x101C
     0024 1Drr                      1- 2725     	BCR	r0x101C,3
     0025 01rr                      1- 2726     	MOVR	r0x101C,W
     0026 000r                      1- 2727     	IOST	_IOSTA
                                    1- 2728     	.line	794, "main.c"; 	return readByte;  // 返回数据
                                    1- 2729     	BANKSEL	r0x101B
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2730     	MOVR	r0x101B,W
                                    1- 2731     	.line	795, "main.c"; 	}
                                    1- 2732     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2733     ; exit point of _i2c_readByte
                                    1- 2735     ;***
                                    1- 2736     ;  pBlock Stats: dbName = C
                                    1- 2737     ;***
                                    1- 2738     ;has an exit
                                    1- 2739     ;functions called:
                                    1- 2740     ;   __dly_us
                                    1- 2741     ;   __dly_us
                                    1- 2742     ;   _i2c_chk_ack
                                    1- 2743     ;   __dly_us
                                    1- 2744     ;   __dly_us
                                    1- 2745     ;   _i2c_chk_ack
                                    1- 2746     ;3 compiler assigned registers:
                                    1- 2747     ;   r0x101C
                                    1- 2748     ;   r0x101D
                                    1- 2749     ;   r0x101E
                                    1- 2750     ;; Starting pCode block
                                    1- 2751     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2753     ;local variable name mapping:
     0000                           1- 2756     _i2c_writeByte:
                                    1- 2757     ; 2 exit points
                                    1- 2758     	.line	743, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2759     	BANKSEL	r0x101C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2760     	MOVAR	r0x101C
                                    1- 2761     	.line	747, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2762     	MOVIA	0x08
                                    1- 2763     	BANKSEL	r0x101D
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2764     	MOVAR	r0x101D
     0005                           1- 2765     _02368_DS_:
                                    1- 2766     	BANKSEL	r0x101D
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2767     	MOVR	r0x101D,W
                                    1- 2768     	BANKSEL	r0x101E
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2769     	MOVAR	r0x101E
                                    1- 2770     	BANKSEL	r0x101D
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2771     	DECR	r0x101D,F
                                    1- 2772     	BANKSEL	r0x101E
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2773     	MOVR	r0x101E,W
     000D 0D03                      1- 2774     	BTRSC	STATUS,2
                                    1- 2775     	MGOTO	_02370_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2776     	.line	749, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Err                      1- 2777     	BCR	_PORTAbits,4
                                    1- 2778     	.line	750, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2779     	MOVIA	0x00
                                    1- 2780     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2781     	.line	751, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2782     	BANKSEL	r0x101C
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2783     	BTRSS	r0x101C,7
                                    1- 2784     	MGOTO	_02366_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2785     	.line	753, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2786     	BSR	_PORTAbits,3
                                    1- 2787     	MGOTO	_02367_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2788     _02366_DS_:
                                    1- 2789     	.line	757, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2790     	BCR	_PORTAbits,3
     0018                           1- 2791     _02367_DS_:
                                    1- 2792     	.line	759, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2793     	BCR	STATUS,0
                                    1- 2794     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2795     	RLR	r0x101C,F
                                    1- 2796     	.line	760, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 1Arr                      1- 2797     	BSR	_PORTAbits,4
                                    1- 2798     	.line	761, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2799     	MOVIA	0x00
                                    1- 2800     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2801     	.line	762, "main.c"; 	NOP();
     001E 0000                      1- 2802     	nop
                                    1- 2803     	MGOTO	_02368_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2804     _02370_DS_:
                                    1- 2805     	.line	765, "main.c"; 	return i2c_chk_ack();
                                    1- 2806     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2807     	BANKSEL	r0x101C
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2808     	MOVAR	r0x101C
                                    1- 2809     	.line	766, "main.c"; 	}
                                    1- 2810     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2811     ; exit point of _i2c_writeByte
                                    1- 2813     ;***
                                    1- 2814     ;  pBlock Stats: dbName = C
                                    1- 2815     ;***
                                    1- 2816     ;has an exit
                                    1- 2817     ;functions called:
                                    1- 2818     ;   __dly_us
                                    1- 2819     ;   __dly_us
                                    1- 2820     ;   __dly_us
                                    1- 2821     ;   __dly_us
                                    1- 2822     ;; Starting pCode block
                                    1- 2823     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2825     _i2c_send_nack:
                                    1- 2826     ; 2 exit points
                                    1- 2827     	.line	734, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2828     	BCR	_PORTAbits,4
                                    1- 2829     	.line	735, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2830     	BSR	_PORTAbits,3
                                    1- 2831     	.line	736, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2832     	MOVIA	0x0a
                                    1- 2833     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2834     	.line	737, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2835     	BSR	_PORTAbits,4
                                    1- 2836     	.line	738, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2837     	MOVIA	0x0a
                                    1- 2838     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2839     	.line	739, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2840     	BCR	_PORTAbits,4
                                    1- 2841     	.line	740, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2842     	BCR	_PORTAbits,3
                                    1- 2843     	.line	741, "main.c"; 	}
                                    1- 2844     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2845     ; exit point of _i2c_send_nack
                                    1- 2847     ;***
                                    1- 2848     ;  pBlock Stats: dbName = C
                                    1- 2849     ;***
                                    1- 2850     ;has an exit
                                    1- 2851     ;functions called:
                                    1- 2852     ;   __dly_us
                                    1- 2853     ;   __dly_us
                                    1- 2854     ;   __dly_us
                                    1- 2855     ;   __dly_us
                                    1- 2856     ;; Starting pCode block
                                    1- 2857     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2859     _i2c_send_ack:
                                    1- 2860     ; 2 exit points
                                    1- 2861     	.line	723, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2862     	BCR	_PORTAbits,4
                                    1- 2863     	.line	724, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2864     	BCR	_PORTAbits,3
                                    1- 2865     	.line	725, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2866     	MOVIA	0x0a
                                    1- 2867     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2868     	.line	726, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2869     	BSR	_PORTAbits,4
                                    1- 2870     	.line	727, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2871     	MOVIA	0x0a
                                    1- 2872     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2873     	.line	728, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2874     	BCR	_PORTAbits,4
                                    1- 2875     	.line	729, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2876     	BCR	_PORTAbits,3
                                    1- 2877     	.line	730, "main.c"; 	}
                                    1- 2878     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2879     ; exit point of _i2c_send_ack
                                    1- 2881     ;***
                                    1- 2882     ;  pBlock Stats: dbName = C
                                    1- 2883     ;***
                                    1- 2884     ;has an exit
                                    1- 2885     ;functions called:
                                    1- 2886     ;   __dly_us
                                    1- 2887     ;   __dly_us
                                    1- 2888     ;   __dly_us
                                    1- 2889     ;   __dly_us
                                    1- 2890     ;1 compiler assigned register :
                                    1- 2891     ;   r0x101B
                                    1- 2892     ;; Starting pCode block
                                    1- 2893     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2895     ;local variable name mapping:
     0000                           1- 2897     _i2c_chk_ack:
                                    1- 2898     ; 2 exit points
                                    1- 2899     	.line	700, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Err                      1- 2900     	BCR	_PORTAbits,4
                                    1- 2901     	.line	701, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2902     	IOSTR	_IOSTA
                                    1- 2903     	BANKSEL	r0x101B
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2904     	MOVAR	r0x101B
     0004 19rr                      1- 2905     	BSR	r0x101B,3
     0005 01rr                      1- 2906     	MOVR	r0x101B,W
     0006 000r                      1- 2907     	IOST	_IOSTA
                                    1- 2908     	.line	703, "main.c"; 	_dly_us(0);
     0007 2100                      1- 2909     	MOVIA	0x00
                                    1- 2910     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2911     	.line	704, "main.c"; 	P_I2C_SCL_SET;
     0009 1Arr                      1- 2912     	BSR	_PORTAbits,4
                                    1- 2913     	.line	705, "main.c"; 	_dly_us(0);
     000A 2100                      1- 2914     	MOVIA	0x00
                                    1- 2915     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2916     	.line	706, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 2917     	MOVIA	0xfa
                                    1- 2918     	BANKSEL	r0x101B
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2919     	MOVAR	r0x101B
     000F                           1- 2920     _02349_DS_:
     000F 09rr                      1- 2921     	BTRSS	_PORTAbits,3
                                    1- 2922     	MGOTO	_02351_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2923     	.line	708, "main.c"; 	--getAckTime;
                                    1- 2924     	BANKSEL	r0x101B
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 2925     	DECRSZ	r0x101B,F
                                    1- 2926     	.line	710, "main.c"; 	if (0 == getAckTime)
                                    1- 2927     	MGOTO	_02349_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2928     	.line	712, "main.c"; 	return 1;
     0014 2101                      1- 2929     	MOVIA	0x01
                                    1- 2930     	MGOTO	_02352_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2931     _02351_DS_:
                                    1- 2932     	.line	716, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Err                      1- 2933     	BCR	_PORTAbits,4
                                    1- 2934     	.line	717, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 2935     	IOSTR	_IOSTA
                                    1- 2936     	BANKSEL	r0x101B
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2937     	MOVAR	r0x101B
     001A 1Drr                      1- 2938     	BCR	r0x101B,3
     001B 01rr                      1- 2939     	MOVR	r0x101B,W
     001C 000r                      1- 2940     	IOST	_IOSTA
                                    1- 2941     	.line	718, "main.c"; 	return 0;
     001D 2100                      1- 2942     	MOVIA	0x00
     001E                           1- 2943     _02352_DS_:
                                    1- 2944     	.line	719, "main.c"; 	}
                                    1- 2945     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 2946     ; exit point of _i2c_chk_ack
                                    1- 2948     ;***
                                    1- 2949     ;  pBlock Stats: dbName = C
                                    1- 2950     ;***
                                    1- 2951     ;has an exit
                                    1- 2952     ;functions called:
                                    1- 2953     ;   __dly_us
                                    1- 2954     ;   __dly_us
                                    1- 2955     ;   __dly_us
                                    1- 2956     ;   __dly_us
                                    1- 2957     ;; Starting pCode block
                                    1- 2958     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 2960     _i2c_stop:
                                    1- 2961     ; 2 exit points
                                    1- 2962     	.line	688, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2963     	BCR	_PORTAbits,4
                                    1- 2964     	.line	689, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2965     	BCR	_PORTAbits,3
                                    1- 2966     	.line	690, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2967     	MOVIA	0x0a
                                    1- 2968     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2969     	.line	691, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2970     	BSR	_PORTAbits,4
                                    1- 2971     	.line	692, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2972     	MOVIA	0x0a
                                    1- 2973     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2974     	.line	693, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 2975     	BSR	_PORTAbits,3
                                    1- 2976     	.line	694, "main.c"; 	}
                                    1- 2977     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 2978     ; exit point of _i2c_stop
                                    1- 2980     ;***
                                    1- 2981     ;  pBlock Stats: dbName = C
                                    1- 2982     ;***
                                    1- 2983     ;has an exit
                                    1- 2984     ;functions called:
                                    1- 2985     ;   __dly_us
                                    1- 2986     ;   __dly_us
                                    1- 2987     ;   __dly_us
                                    1- 2988     ;   __dly_us
                                    1- 2989     ;1 compiler assigned register :
                                    1- 2990     ;   r0x101B
                                    1- 2991     ;; Starting pCode block
                                    1- 2992     .segment "code"; module=main, function=_i2c_start
     0000                           1- 2994     _i2c_start:
                                    1- 2995     ; 2 exit points
                                    1- 2996     	.line	675, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 2997     	BSR	_PORTAbits,3
                                    1- 2998     	.line	676, "main.c"; 	P_I2C_SCL_SET;
     0001 1Arr                      1- 2999     	BSR	_PORTAbits,4
                                    1- 3000     	.line	677, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 3001     	IOSTR	_IOSTA
                                    1- 3002     	BANKSEL	r0x101B
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 3003     	MOVAR	r0x101B
     0005 1Drr                      1- 3004     	BCR	r0x101B,3
     0006 01rr                      1- 3005     	MOVR	r0x101B,W
     0007 000r                      1- 3006     	IOST	_IOSTA
                                    1- 3007     	.line	678, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 3008     	IOSTR	_IOSTA
     0009 00rr                      1- 3009     	MOVAR	r0x101B
     000A 1Err                      1- 3010     	BCR	r0x101B,4
     000B 01rr                      1- 3011     	MOVR	r0x101B,W
     000C 000r                      1- 3012     	IOST	_IOSTA
                                    1- 3013     	.line	679, "main.c"; 	_dly_us(10);
     000D 210A                      1- 3014     	MOVIA	0x0a
                                    1- 3015     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3016     	.line	680, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 3017     	BCR	_PORTAbits,3
                                    1- 3018     	.line	681, "main.c"; 	_dly_us(10);
     0010 210A                      1- 3019     	MOVIA	0x0a
                                    1- 3020     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3021     	.line	682, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Err                      1- 3022     	BCR	_PORTAbits,4
                                    1- 3023     	.line	683, "main.c"; 	}
                                    1- 3024     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 3025     ; exit point of _i2c_start
                                    1- 3027     ;***
                                    1- 3028     ;  pBlock Stats: dbName = C
                                    1- 3029     ;***
                                    1- 3030     ;has an exit
                                    1- 3031     ;1 compiler assigned register :
                                    1- 3032     ;   r0x101A
                                    1- 3033     ;; Starting pCode block
                                    1- 3034     .segment "code"; module=main, function=_gpioKeyScan
     0000                           1- 3036     _gpioKeyScan:
                                    1- 3037     ; 2 exit points
                                    1- 3038     	.line	551, "main.c"; 	P_KEY_INPUT;
     0000 001r                      1- 3039     	IOSTR	_IOSTB
                                    1- 3040     	BANKSEL	r0x101A
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3041     	MOVAR	r0x101A
     0003 18rr                      1- 3042     	BSR	r0x101A,0
     0004 01rr                      1- 3043     	MOVR	r0x101A,W
     0005 000r                      1- 3044     	IOST	_IOSTB
                                    1- 3045     	.line	552, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 3046     	BANKSEL	_gpioKeyWaitTimer
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1- 3047     	MOVR	_gpioKeyWaitTimer,W
     0008 0D03                      1- 3048     	BTRSC	STATUS,2
                                    1- 3049     	MGOTO	_02258_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3050     	.line	554, "main.c"; 	gpioKeyWaitTimer--;
     000A 01rr                      1- 3051     	MOVR	_gpioKeyWaitTimer,W
                                    1- 3052     	BANKSEL	r0x101A
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1- 3053     	MOVAR	r0x101A
     000D 06rr                      1- 3054     	DECR	r0x101A,W
                                    1- 3055     	BANKSEL	_gpioKeyWaitTimer
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 3056     	MOVAR	_gpioKeyWaitTimer
     0010                           1- 3057     _02258_DS_:
                                    1- 3058     	.line	557, "main.c"; 	indexKey = 0;
                                    1- 3059     	BANKSEL	_vFlag_1
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 1Drr                      1- 3060     	BCR	_vFlag_1,2
                                    1- 3061     	.line	559, "main.c"; 	if (P_KEY)
     0012 08rr                      1- 3062     	BTRSS	_PORTBbits,0
                                    1- 3063     	MGOTO	_02260_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3064     	.line	561, "main.c"; 	indexKey = 1;
     0014 19rr                      1- 3065     	BSR	_vFlag_1,2
                                    1- 3066     	.line	562, "main.c"; 	P_KEY_IPS_SET;
     0015 18rr                      1- 3067     	BSR	_PORTBbits,1
                                    1- 3068     	.line	563, "main.c"; 	P_KEY_IPS_INPUT;
     0016 001r                      1- 3069     	IOSTR	_IOSTB
                                    1- 3070     	BANKSEL	r0x101A
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 3071     	MOVAR	r0x101A
     0019 18rr                      1- 3072     	BSR	r0x101A,1
     001A 01rr                      1- 3073     	MOVR	r0x101A,W
     001B 000r                      1- 3074     	IOST	_IOSTB
     001C                           1- 3075     _02260_DS_:
                                    1- 3076     	.line	566, "main.c"; 	switch (gpioKeyState)
                                    1- 3077     	BANKSEL	_gpioKeyState
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1- 3078     	MOVR	_gpioKeyState,W
     001E 0D03                      1- 3079     	BTRSC	STATUS,2
                                    1- 3080     	MGOTO	_02261_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020 01rr                      1- 3081     	MOVR	_gpioKeyState,W
     0021 2401                      1- 3082     	XORIA	0x01
     0022 0D03                      1- 3083     	BTRSC	STATUS,2
                                    1- 3084     	MGOTO	_02264_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
     0024 01rr                      1- 3085     	MOVR	_gpioKeyState,W
     0025 2402                      1- 3086     	XORIA	0x02
     0026 0D03                      1- 3087     	BTRSC	STATUS,2
                                    1- 3088     	MGOTO	_02270_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
     0028 01rr                      1- 3089     	MOVR	_gpioKeyState,W
     0029 2403                      1- 3090     	XORIA	0x03
     002A 0D03                      1- 3091     	BTRSC	STATUS,2
                                    1- 3092     	MGOTO	_02276_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3093     	MGOTO	_02279_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 3094     _02261_DS_:
                                    1- 3095     	.line	569, "main.c"; 	if (indexKey)
                                    1- 3096     	BANKSEL	_vFlag_1
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 09rr                      1- 3097     	BTRSS	_vFlag_1,2
                                    1- 3098     	MGOTO	_02263_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3099     	.line	572, "main.c"; 	return MSG_NONE;
     0030 2100                      1- 3100     	MOVIA	0x00
                                    1- 3101     	MGOTO	_02281_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 3102     _02263_DS_:
                                    1- 3103     	.line	577, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME; // gSysTick_current;
     0032 2103                      1- 3104     	MOVIA	0x03
                                    1- 3105     	BANKSEL	_gpioKeyWaitTimer
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 3106     	MOVAR	_gpioKeyWaitTimer
                                    1- 3107     	.line	579, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0035 2101                      1- 3108     	MOVIA	0x01
                                    1- 3109     	BANKSEL	_gpioKeyState
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 00rr                      1- 3110     	MOVAR	_gpioKeyState
     0038                           1- 3111     _02264_DS_:
                                    1- 3112     	.line	582, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3113     	BANKSEL	_vFlag_1
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 09rr                      1- 3114     	BTRSS	_vFlag_1,2
                                    1- 3115     	MGOTO	_02268_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3116     	.line	585, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3117     	BANKSEL	_gpioKeyState
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 02rr                      1- 3118     	CLRR	_gpioKeyState
                                    1- 3119     	MGOTO	_02280_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
     003E                           1- 3120     _02268_DS_:
                                    1- 3121     	.line	588, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_JTTER_TIME)
                                    1- 3122     	BANKSEL	_gpioKeyWaitTimer
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1- 3123     	MOVR	_gpioKeyWaitTimer,W
     0040 0903                      1- 3124     	BTRSS	STATUS,2
                                    1- 3125     	MGOTO	_02280_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3126     	.line	594, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME; // gSysTick_current;
     0042 2196                      1- 3127     	MOVIA	0x96
     0043 00rr                      1- 3128     	MOVAR	_gpioKeyWaitTimer
                                    1- 3129     	.line	595, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     0044 2102                      1- 3130     	MOVIA	0x02
                                    1- 3131     	BANKSEL	_gpioKeyState
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 3132     	MOVAR	_gpioKeyState
                                    1- 3133     	.line	596, "main.c"; 	P_KEY_IPS_CLR;
     0047 1Crr                      1- 3134     	BCR	_PORTBbits,1
                                    1- 3135     	.line	597, "main.c"; 	P_KEY_IPS_OUTPUT;
     0048 001r                      1- 3136     	IOSTR	_IOSTB
                                    1- 3137     	BANKSEL	r0x101A
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 3138     	MOVAR	r0x101A
     004B 1Crr                      1- 3139     	BCR	r0x101A,1
     004C 01rr                      1- 3140     	MOVR	r0x101A,W
     004D 000r                      1- 3141     	IOST	_IOSTB
                                    1- 3142     	.line	601, "main.c"; 	break;
                                    1- 3143     	MGOTO	_02280_DS_
     004E 3rrr                      3-   62 m1      LGOTO rom_address
     004F                           1- 3144     _02270_DS_:
                                    1- 3145     	.line	604, "main.c"; 	if (indexKey)               // if(PreKeyIndex != indexKey)
                                    1- 3146     	BANKSEL	_vFlag_1
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 09rr                      1- 3147     	BTRSS	_vFlag_1,2
                                    1- 3148     	MGOTO	_02274_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3149     	.line	608, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3150     	BANKSEL	_gpioKeyState
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 02rr                      1- 3151     	CLRR	_gpioKeyState
                                    1- 3152     	.line	610, "main.c"; 	return MSG_MODE; // GpioKeyEvent[PreKeyIndex][1]; //SPR
     0054 2121                      1- 3153     	MOVIA	0x21
                                    1- 3154     	MGOTO	_02281_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
     0056                           1- 3155     _02274_DS_:
                                    1- 3156     	.line	613, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_CP_TIME)
                                    1- 3157     	BANKSEL	_gpioKeyWaitTimer
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 01rr                      1- 3158     	MOVR	_gpioKeyWaitTimer,W
     0058 0903                      1- 3159     	BTRSS	STATUS,2
                                    1- 3160     	MGOTO	_02280_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3161     	.line	621, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     005A 2103                      1- 3162     	MOVIA	0x03
                                    1- 3163     	BANKSEL	_gpioKeyState
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1- 3164     	MOVAR	_gpioKeyState
                                    1- 3165     	.line	636, "main.c"; 	return MSG_POWER_ON; // GpioKeyEvent[PreKeyIndex][2];  //CPS
     005D 2141                      1- 3166     	MOVIA	0x41
                                    1- 3167     	MGOTO	_02281_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
     005F                           1- 3168     _02276_DS_:
                                    1- 3169     	.line	642, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3170     	BANKSEL	_vFlag_1
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 09rr                      1- 3171     	BTRSS	_vFlag_1,2
                                    1- 3172     	MGOTO	_02280_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3173     	.line	647, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3174     	BANKSEL	_gpioKeyState
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 02rr                      1- 3175     	CLRR	_gpioKeyState
                                    1- 3176     	.line	661, "main.c"; 	break;
                                    1- 3177     	MGOTO	_02280_DS_
     0064 3rrr                      3-   62 m1      LGOTO rom_address
     0065                           1- 3178     _02279_DS_:
                                    1- 3179     	.line	664, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3180     	BANKSEL	_gpioKeyState
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 02rr                      1- 3181     	CLRR	_gpioKeyState
     0067                           1- 3182     _02280_DS_:
                                    1- 3183     	.line	668, "main.c"; 	return MSG_NONE;
     0067 2100                      1- 3184     	MOVIA	0x00
     0068                           1- 3185     _02281_DS_:
                                    1- 3186     	.line	669, "main.c"; 	}
                                    1- 3187     	RETURN	
     0068 0010                      3-   39 m1      ret
                                    1- 3188     ; exit point of _gpioKeyScan
                                    1- 3190     ;***
                                    1- 3191     ;  pBlock Stats: dbName = C
                                    1- 3192     ;***
                                    1- 3193     ;1 compiler assigned register :
                                    1- 3194     ;   r0x1031
                                    1- 3195     ;; Starting pCode block
                                    1- 3196     .segment "code"; module=main, function=_io_led_scan
                                    1- 3198     ;local variable name mapping:
     0000                           1- 3200     _io_led_scan:
                                    1- 3201     ; 0 exit points
                                    1- 3202     	.line	307, "main.c"; 	P_LED_SEG1_INPUT;
     0000 001r                      1- 3203     	IOSTR	_IOSTB
                                    1- 3204     	BANKSEL	r0x1031
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3205     	MOVAR	r0x1031
     0003 1Arr                      1- 3206     	BSR	r0x1031,5
     0004 01rr                      1- 3207     	MOVR	r0x1031,W
     0005 000r                      1- 3208     	IOST	_IOSTB
                                    1- 3209     	.line	308, "main.c"; 	P_LED_SEG2_INPUT;
     0006 001r                      1- 3210     	IOSTR	_IOSTA
     0007 00rr                      1- 3211     	MOVAR	r0x1031
     0008 18rr                      1- 3212     	BSR	r0x1031,0
     0009 01rr                      1- 3213     	MOVR	r0x1031,W
     000A 000r                      1- 3214     	IOST	_IOSTA
                                    1- 3215     	.line	309, "main.c"; 	P_LED_SEG3_INPUT;
     000B 001r                      1- 3216     	IOSTR	_IOSTA
     000C 00rr                      1- 3217     	MOVAR	r0x1031
     000D 18rr                      1- 3218     	BSR	r0x1031,1
     000E 01rr                      1- 3219     	MOVR	r0x1031,W
     000F 000r                      1- 3220     	IOST	_IOSTA
                                    1- 3221     	.line	310, "main.c"; 	P_LED_SEG4_INPUT;
     0010 001r                      1- 3222     	IOSTR	_IOSTA
     0011 00rr                      1- 3223     	MOVAR	r0x1031
     0012 1Brr                      1- 3224     	BSR	r0x1031,7
     0013 01rr                      1- 3225     	MOVR	r0x1031,W
     0014 000r                      1- 3226     	IOST	_IOSTA
                                    1- 3227     	.line	311, "main.c"; 	P_LED_SEG5_INPUT;
     0015 001r                      1- 3228     	IOSTR	_IOSTA
     0016 00rr                      1- 3229     	MOVAR	r0x1031
     0017 1Brr                      1- 3230     	BSR	r0x1031,6
     0018 01rr                      1- 3231     	MOVR	r0x1031,W
     0019 000r                      1- 3232     	IOST	_IOSTA
                                    1- 3233     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3234     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3235     	.line	313, "main.c"; 	switch (indexScan)
     001A 2112                      1- 3236     	MOVIA	0x12
                                    1- 3237     	BANKSEL	_io_led_scan_indexScan_65536_30
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 04rr                      1- 3238     	SUBAR	_io_led_scan_indexScan_65536_30,W
     001D 0C03                      1- 3239     	BTRSC	STATUS,0
                                    1- 3240     	MGOTO	_02167_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F 21rr                      1- 3241     	MOVIA	((_02252_DS_ >> 8) & 0xff)
     0020 008A                      1- 3242     	MOVAR	PCHBUF
     0021 01rr                      1- 3243     	MOVR	_io_led_scan_indexScan_65536_30,W
     0022 25rr                      1- 3244     	ADDIA	_02252_DS_
     0023 0C03                      1- 3245     	BTRSC	STATUS,0
     0024 058A                      1- 3246     	INCR	PCHBUF,F
     0025 0082                      1- 3247     	MOVAR	PCL
     0026                           1- 3248     _02252_DS_:
                                    1- 3249     	MGOTO	_02112_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3250     	MGOTO	_02115_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3251     	MGOTO	_02118_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3252     	MGOTO	_02121_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3253     	MGOTO	_02124_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3254     	MGOTO	_02127_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3255     	MGOTO	_02130_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3256     	MGOTO	_02133_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3257     	MGOTO	_02136_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3258     	MGOTO	_02139_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3259     	MGOTO	_02142_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3260     	MGOTO	_02145_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3261     	MGOTO	_02148_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3262     	MGOTO	_02151_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3263     	MGOTO	_02154_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3264     	MGOTO	_02157_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3265     	MGOTO	_02160_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3266     	MGOTO	_02163_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 3267     _02112_DS_:
                                    1- 3268     	.line	316, "main.c"; 	if (displayDecade & SEG_A) // 2A
                                    1- 3269     	BANKSEL	_displayDecade
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1- 3270     	BTRSS	_displayDecade,0
                                    1- 3271     	MGOTO	_02167_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3272     	.line	318, "main.c"; 	P_LED_SEG2_SET;
     003B 18rr                      1- 3273     	BSR	_PORTAbits,0
                                    1- 3274     	.line	319, "main.c"; 	P_LED_SEG2_OUTPUT;
     003C 001r                      1- 3275     	IOSTR	_IOSTA
                                    1- 3276     	BANKSEL	r0x1031
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3277     	MOVAR	r0x1031
     003F 1Crr                      1- 3278     	BCR	r0x1031,0
     0040 01rr                      1- 3279     	MOVR	r0x1031,W
     0041 000r                      1- 3280     	IOST	_IOSTA
                                    1- 3281     	.line	320, "main.c"; 	P_LED_SEG3_CLR;
     0042 1Crr                      1- 3282     	BCR	_PORTAbits,1
                                    1- 3283     	.line	321, "main.c"; 	P_LED_SEG3_OUTPUT;
     0043 001r                      1- 3284     	IOSTR	_IOSTA
     0044 00rr                      1- 3285     	MOVAR	r0x1031
     0045 1Crr                      1- 3286     	BCR	r0x1031,1
     0046 01rr                      1- 3287     	MOVR	r0x1031,W
     0047 000r                      1- 3288     	IOST	_IOSTA
                                    1- 3289     	.line	323, "main.c"; 	break;
                                    1- 3290     	MGOTO	_02167_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 3291     _02115_DS_:
                                    1- 3292     	.line	326, "main.c"; 	if (displayDecade & SEG_B) // 2B
                                    1- 3293     	BANKSEL	_displayDecade
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 08rr                      1- 3294     	BTRSS	_displayDecade,1
                                    1- 3295     	MGOTO	_02167_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3296     	.line	328, "main.c"; 	P_LED_SEG3_SET;
     004C 18rr                      1- 3297     	BSR	_PORTAbits,1
                                    1- 3298     	.line	329, "main.c"; 	P_LED_SEG3_OUTPUT;
     004D 001r                      1- 3299     	IOSTR	_IOSTA
                                    1- 3300     	BANKSEL	r0x1031
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 3301     	MOVAR	r0x1031
     0050 1Crr                      1- 3302     	BCR	r0x1031,1
     0051 01rr                      1- 3303     	MOVR	r0x1031,W
     0052 000r                      1- 3304     	IOST	_IOSTA
                                    1- 3305     	.line	330, "main.c"; 	P_LED_SEG2_CLR;
     0053 1Crr                      1- 3306     	BCR	_PORTAbits,0
                                    1- 3307     	.line	331, "main.c"; 	P_LED_SEG2_OUTPUT;
     0054 001r                      1- 3308     	IOSTR	_IOSTA
     0055 00rr                      1- 3309     	MOVAR	r0x1031
     0056 1Crr                      1- 3310     	BCR	r0x1031,0
     0057 01rr                      1- 3311     	MOVR	r0x1031,W
     0058 000r                      1- 3312     	IOST	_IOSTA
                                    1- 3313     	.line	333, "main.c"; 	break;
                                    1- 3314     	MGOTO	_02167_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 3315     _02118_DS_:
                                    1- 3316     	.line	336, "main.c"; 	if (displayDecade & SEG_C) // 2C
                                    1- 3317     	BANKSEL	_displayDecade
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 09rr                      1- 3318     	BTRSS	_displayDecade,2
                                    1- 3319     	MGOTO	_02167_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3320     	.line	338, "main.c"; 	P_LED_SEG4_SET;
     005D 1Brr                      1- 3321     	BSR	_PORTAbits,7
                                    1- 3322     	.line	339, "main.c"; 	P_LED_SEG4_OUTPUT;
     005E 001r                      1- 3323     	IOSTR	_IOSTA
                                    1- 3324     	BANKSEL	r0x1031
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3325     	MOVAR	r0x1031
     0061 1Frr                      1- 3326     	BCR	r0x1031,7
     0062 01rr                      1- 3327     	MOVR	r0x1031,W
     0063 000r                      1- 3328     	IOST	_IOSTA
                                    1- 3329     	.line	340, "main.c"; 	P_LED_SEG3_CLR;
     0064 1Crr                      1- 3330     	BCR	_PORTAbits,1
                                    1- 3331     	.line	341, "main.c"; 	P_LED_SEG3_OUTPUT;
     0065 001r                      1- 3332     	IOSTR	_IOSTA
     0066 00rr                      1- 3333     	MOVAR	r0x1031
     0067 1Crr                      1- 3334     	BCR	r0x1031,1
     0068 01rr                      1- 3335     	MOVR	r0x1031,W
     0069 000r                      1- 3336     	IOST	_IOSTA
                                    1- 3337     	.line	343, "main.c"; 	break;
                                    1- 3338     	MGOTO	_02167_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 3339     _02121_DS_:
                                    1- 3340     	.line	346, "main.c"; 	if (displayDecade & SEG_D) // 2D
                                    1- 3341     	BANKSEL	_displayDecade
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 09rr                      1- 3342     	BTRSS	_displayDecade,3
                                    1- 3343     	MGOTO	_02167_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3344     	.line	348, "main.c"; 	P_LED_SEG4_SET;
     006E 1Brr                      1- 3345     	BSR	_PORTAbits,7
                                    1- 3346     	.line	349, "main.c"; 	P_LED_SEG4_OUTPUT;
     006F 001r                      1- 3347     	IOSTR	_IOSTA
                                    1- 3348     	BANKSEL	r0x1031
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 00rr                      1- 3349     	MOVAR	r0x1031
     0072 1Frr                      1- 3350     	BCR	r0x1031,7
     0073 01rr                      1- 3351     	MOVR	r0x1031,W
     0074 000r                      1- 3352     	IOST	_IOSTA
                                    1- 3353     	.line	350, "main.c"; 	P_LED_SEG2_CLR;
     0075 1Crr                      1- 3354     	BCR	_PORTAbits,0
                                    1- 3355     	.line	351, "main.c"; 	P_LED_SEG2_OUTPUT;
     0076 001r                      1- 3356     	IOSTR	_IOSTA
     0077 00rr                      1- 3357     	MOVAR	r0x1031
     0078 1Crr                      1- 3358     	BCR	r0x1031,0
     0079 01rr                      1- 3359     	MOVR	r0x1031,W
     007A 000r                      1- 3360     	IOST	_IOSTA
                                    1- 3361     	.line	353, "main.c"; 	break;
                                    1- 3362     	MGOTO	_02167_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C                           1- 3363     _02124_DS_:
                                    1- 3364     	.line	356, "main.c"; 	if (displayDecade & SEG_E) // 2E
                                    1- 3365     	BANKSEL	_displayDecade
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 0Arr                      1- 3366     	BTRSS	_displayDecade,4
                                    1- 3367     	MGOTO	_02167_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3368     	.line	358, "main.c"; 	P_LED_SEG5_SET;
     007F 1Brr                      1- 3369     	BSR	_PORTAbits,6
                                    1- 3370     	.line	359, "main.c"; 	P_LED_SEG5_OUTPUT;
     0080 001r                      1- 3371     	IOSTR	_IOSTA
                                    1- 3372     	BANKSEL	r0x1031
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 3373     	MOVAR	r0x1031
     0083 1Frr                      1- 3374     	BCR	r0x1031,6
     0084 01rr                      1- 3375     	MOVR	r0x1031,W
     0085 000r                      1- 3376     	IOST	_IOSTA
                                    1- 3377     	.line	360, "main.c"; 	P_LED_SEG2_CLR;
     0086 1Crr                      1- 3378     	BCR	_PORTAbits,0
                                    1- 3379     	.line	361, "main.c"; 	P_LED_SEG2_OUTPUT;
     0087 001r                      1- 3380     	IOSTR	_IOSTA
     0088 00rr                      1- 3381     	MOVAR	r0x1031
     0089 1Crr                      1- 3382     	BCR	r0x1031,0
     008A 01rr                      1- 3383     	MOVR	r0x1031,W
     008B 000r                      1- 3384     	IOST	_IOSTA
                                    1- 3385     	.line	363, "main.c"; 	break;
                                    1- 3386     	MGOTO	_02167_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1- 3387     _02127_DS_:
                                    1- 3388     	.line	366, "main.c"; 	if (displayDecade & SEG_F) // 2F
                                    1- 3389     	BANKSEL	_displayDecade
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 0Arr                      1- 3390     	BTRSS	_displayDecade,5
                                    1- 3391     	MGOTO	_02167_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3392     	.line	368, "main.c"; 	P_LED_SEG5_SET;
     0090 1Brr                      1- 3393     	BSR	_PORTAbits,6
                                    1- 3394     	.line	369, "main.c"; 	P_LED_SEG5_OUTPUT;
     0091 001r                      1- 3395     	IOSTR	_IOSTA
                                    1- 3396     	BANKSEL	r0x1031
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 3397     	MOVAR	r0x1031
     0094 1Frr                      1- 3398     	BCR	r0x1031,6
     0095 01rr                      1- 3399     	MOVR	r0x1031,W
     0096 000r                      1- 3400     	IOST	_IOSTA
                                    1- 3401     	.line	370, "main.c"; 	P_LED_SEG3_CLR;
     0097 1Crr                      1- 3402     	BCR	_PORTAbits,1
                                    1- 3403     	.line	371, "main.c"; 	P_LED_SEG3_OUTPUT;
     0098 001r                      1- 3404     	IOSTR	_IOSTA
     0099 00rr                      1- 3405     	MOVAR	r0x1031
     009A 1Crr                      1- 3406     	BCR	r0x1031,1
     009B 01rr                      1- 3407     	MOVR	r0x1031,W
     009C 000r                      1- 3408     	IOST	_IOSTA
                                    1- 3409     	.line	373, "main.c"; 	break;
                                    1- 3410     	MGOTO	_02167_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
     009E                           1- 3411     _02130_DS_:
                                    1- 3412     	.line	376, "main.c"; 	if (displayDecade & SEG_G) // 2G
                                    1- 3413     	BANKSEL	_displayDecade
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 0Brr                      1- 3414     	BTRSS	_displayDecade,6
                                    1- 3415     	MGOTO	_02167_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3416     	.line	378, "main.c"; 	P_LED_SEG5_SET;
     00A1 1Brr                      1- 3417     	BSR	_PORTAbits,6
                                    1- 3418     	.line	379, "main.c"; 	P_LED_SEG5_OUTPUT;
     00A2 001r                      1- 3419     	IOSTR	_IOSTA
                                    1- 3420     	BANKSEL	r0x1031
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 00rr                      1- 3421     	MOVAR	r0x1031
     00A5 1Frr                      1- 3422     	BCR	r0x1031,6
     00A6 01rr                      1- 3423     	MOVR	r0x1031,W
     00A7 000r                      1- 3424     	IOST	_IOSTA
                                    1- 3425     	.line	380, "main.c"; 	P_LED_SEG4_CLR;
     00A8 1Frr                      1- 3426     	BCR	_PORTAbits,7
                                    1- 3427     	.line	381, "main.c"; 	P_LED_SEG4_OUTPUT;
     00A9 001r                      1- 3428     	IOSTR	_IOSTA
     00AA 00rr                      1- 3429     	MOVAR	r0x1031
     00AB 1Frr                      1- 3430     	BCR	r0x1031,7
     00AC 01rr                      1- 3431     	MOVR	r0x1031,W
     00AD 000r                      1- 3432     	IOST	_IOSTA
                                    1- 3433     	.line	383, "main.c"; 	break;
                                    1- 3434     	MGOTO	_02167_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 3435     _02133_DS_:
                                    1- 3436     	.line	386, "main.c"; 	if (displayDigit & SEG_A) // 3A
                                    1- 3437     	BANKSEL	_displayDigit
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 08rr                      1- 3438     	BTRSS	_displayDigit,0
                                    1- 3439     	MGOTO	_02167_DS_
     00B1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3440     	.line	388, "main.c"; 	P_LED_SEG1_SET;
     00B2 1Arr                      1- 3441     	BSR	_PORTBbits,5
                                    1- 3442     	.line	389, "main.c"; 	P_LED_SEG1_OUTPUT;
     00B3 001r                      1- 3443     	IOSTR	_IOSTB
                                    1- 3444     	BANKSEL	r0x1031
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3445     	MOVAR	r0x1031
     00B6 1Err                      1- 3446     	BCR	r0x1031,5
     00B7 01rr                      1- 3447     	MOVR	r0x1031,W
     00B8 000r                      1- 3448     	IOST	_IOSTB
                                    1- 3449     	.line	390, "main.c"; 	P_LED_SEG2_CLR;
     00B9 1Crr                      1- 3450     	BCR	_PORTAbits,0
                                    1- 3451     	.line	391, "main.c"; 	P_LED_SEG2_OUTPUT;
     00BA 001r                      1- 3452     	IOSTR	_IOSTA
     00BB 00rr                      1- 3453     	MOVAR	r0x1031
     00BC 1Crr                      1- 3454     	BCR	r0x1031,0
     00BD 01rr                      1- 3455     	MOVR	r0x1031,W
     00BE 000r                      1- 3456     	IOST	_IOSTA
                                    1- 3457     	.line	393, "main.c"; 	break;
                                    1- 3458     	MGOTO	_02167_DS_
     00BF 3rrr                      3-   62 m1      LGOTO rom_address
     00C0                           1- 3459     _02136_DS_:
                                    1- 3460     	.line	396, "main.c"; 	if (displayDigit & SEG_B) // 3B
                                    1- 3461     	BANKSEL	_displayDigit
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 08rr                      1- 3462     	BTRSS	_displayDigit,1
                                    1- 3463     	MGOTO	_02167_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3464     	.line	398, "main.c"; 	P_LED_SEG2_SET;
     00C3 18rr                      1- 3465     	BSR	_PORTAbits,0
                                    1- 3466     	.line	399, "main.c"; 	P_LED_SEG2_OUTPUT;
     00C4 001r                      1- 3467     	IOSTR	_IOSTA
                                    1- 3468     	BANKSEL	r0x1031
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 3469     	MOVAR	r0x1031
     00C7 1Crr                      1- 3470     	BCR	r0x1031,0
     00C8 01rr                      1- 3471     	MOVR	r0x1031,W
     00C9 000r                      1- 3472     	IOST	_IOSTA
                                    1- 3473     	.line	400, "main.c"; 	P_LED_SEG1_CLR;
     00CA 1Err                      1- 3474     	BCR	_PORTBbits,5
                                    1- 3475     	.line	401, "main.c"; 	P_LED_SEG1_OUTPUT;
     00CB 001r                      1- 3476     	IOSTR	_IOSTB
     00CC 00rr                      1- 3477     	MOVAR	r0x1031
     00CD 1Err                      1- 3478     	BCR	r0x1031,5
     00CE 01rr                      1- 3479     	MOVR	r0x1031,W
     00CF 000r                      1- 3480     	IOST	_IOSTB
                                    1- 3481     	.line	403, "main.c"; 	break;
                                    1- 3482     	MGOTO	_02167_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 3483     _02139_DS_:
                                    1- 3484     	.line	406, "main.c"; 	if (displayDigit & SEG_C) // 3C
                                    1- 3485     	BANKSEL	_displayDigit
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 09rr                      1- 3486     	BTRSS	_displayDigit,2
                                    1- 3487     	MGOTO	_02167_DS_
     00D3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3488     	.line	408, "main.c"; 	P_LED_SEG1_SET;
     00D4 1Arr                      1- 3489     	BSR	_PORTBbits,5
                                    1- 3490     	.line	409, "main.c"; 	P_LED_SEG1_OUTPUT;
     00D5 001r                      1- 3491     	IOSTR	_IOSTB
                                    1- 3492     	BANKSEL	r0x1031
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 00rr                      1- 3493     	MOVAR	r0x1031
     00D8 1Err                      1- 3494     	BCR	r0x1031,5
     00D9 01rr                      1- 3495     	MOVR	r0x1031,W
     00DA 000r                      1- 3496     	IOST	_IOSTB
                                    1- 3497     	.line	410, "main.c"; 	P_LED_SEG3_CLR;
     00DB 1Crr                      1- 3498     	BCR	_PORTAbits,1
                                    1- 3499     	.line	411, "main.c"; 	P_LED_SEG3_OUTPUT;
     00DC 001r                      1- 3500     	IOSTR	_IOSTA
     00DD 00rr                      1- 3501     	MOVAR	r0x1031
     00DE 1Crr                      1- 3502     	BCR	r0x1031,1
     00DF 01rr                      1- 3503     	MOVR	r0x1031,W
     00E0 000r                      1- 3504     	IOST	_IOSTA
                                    1- 3505     	.line	413, "main.c"; 	break;
                                    1- 3506     	MGOTO	_02167_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 3507     _02142_DS_:
                                    1- 3508     	.line	416, "main.c"; 	if (displayDigit & SEG_D) // 3D
                                    1- 3509     	BANKSEL	_displayDigit
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 09rr                      1- 3510     	BTRSS	_displayDigit,3
                                    1- 3511     	MGOTO	_02167_DS_
     00E4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3512     	.line	418, "main.c"; 	P_LED_SEG3_SET;
     00E5 18rr                      1- 3513     	BSR	_PORTAbits,1
                                    1- 3514     	.line	419, "main.c"; 	P_LED_SEG3_OUTPUT;
     00E6 001r                      1- 3515     	IOSTR	_IOSTA
                                    1- 3516     	BANKSEL	r0x1031
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 3517     	MOVAR	r0x1031
     00E9 1Crr                      1- 3518     	BCR	r0x1031,1
     00EA 01rr                      1- 3519     	MOVR	r0x1031,W
     00EB 000r                      1- 3520     	IOST	_IOSTA
                                    1- 3521     	.line	420, "main.c"; 	P_LED_SEG1_CLR;
     00EC 1Err                      1- 3522     	BCR	_PORTBbits,5
                                    1- 3523     	.line	421, "main.c"; 	P_LED_SEG1_OUTPUT;
     00ED 001r                      1- 3524     	IOSTR	_IOSTB
     00EE 00rr                      1- 3525     	MOVAR	r0x1031
     00EF 1Err                      1- 3526     	BCR	r0x1031,5
     00F0 01rr                      1- 3527     	MOVR	r0x1031,W
     00F1 000r                      1- 3528     	IOST	_IOSTB
                                    1- 3529     	.line	423, "main.c"; 	break;
                                    1- 3530     	MGOTO	_02167_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
     00F3                           1- 3531     _02145_DS_:
                                    1- 3532     	.line	426, "main.c"; 	if (displayDigit & SEG_E) // 3E
                                    1- 3533     	BANKSEL	_displayDigit
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 0Arr                      1- 3534     	BTRSS	_displayDigit,4
                                    1- 3535     	MGOTO	_02167_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3536     	.line	428, "main.c"; 	P_LED_SEG1_SET;
     00F6 1Arr                      1- 3537     	BSR	_PORTBbits,5
                                    1- 3538     	.line	429, "main.c"; 	P_LED_SEG1_OUTPUT;
     00F7 001r                      1- 3539     	IOSTR	_IOSTB
                                    1- 3540     	BANKSEL	r0x1031
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3541     	MOVAR	r0x1031
     00FA 1Err                      1- 3542     	BCR	r0x1031,5
     00FB 01rr                      1- 3543     	MOVR	r0x1031,W
     00FC 000r                      1- 3544     	IOST	_IOSTB
                                    1- 3545     	.line	430, "main.c"; 	P_LED_SEG4_CLR;
     00FD 1Frr                      1- 3546     	BCR	_PORTAbits,7
                                    1- 3547     	.line	431, "main.c"; 	P_LED_SEG4_OUTPUT;
     00FE 001r                      1- 3548     	IOSTR	_IOSTA
     00FF 00rr                      1- 3549     	MOVAR	r0x1031
     0100 1Frr                      1- 3550     	BCR	r0x1031,7
     0101 01rr                      1- 3551     	MOVR	r0x1031,W
     0102 000r                      1- 3552     	IOST	_IOSTA
                                    1- 3553     	.line	433, "main.c"; 	break;
                                    1- 3554     	MGOTO	_02167_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 3555     _02148_DS_:
                                    1- 3556     	.line	436, "main.c"; 	if (displayDigit & SEG_F) // 3F
                                    1- 3557     	BANKSEL	_displayDigit
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 0Arr                      1- 3558     	BTRSS	_displayDigit,5
                                    1- 3559     	MGOTO	_02167_DS_
     0106 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3560     	.line	438, "main.c"; 	P_LED_SEG4_SET;
     0107 1Brr                      1- 3561     	BSR	_PORTAbits,7
                                    1- 3562     	.line	439, "main.c"; 	P_LED_SEG4_OUTPUT;
     0108 001r                      1- 3563     	IOSTR	_IOSTA
                                    1- 3564     	BANKSEL	r0x1031
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 00rr                      1- 3565     	MOVAR	r0x1031
     010B 1Frr                      1- 3566     	BCR	r0x1031,7
     010C 01rr                      1- 3567     	MOVR	r0x1031,W
     010D 000r                      1- 3568     	IOST	_IOSTA
                                    1- 3569     	.line	440, "main.c"; 	P_LED_SEG1_CLR;
     010E 1Err                      1- 3570     	BCR	_PORTBbits,5
                                    1- 3571     	.line	441, "main.c"; 	P_LED_SEG1_OUTPUT;
     010F 001r                      1- 3572     	IOSTR	_IOSTB
     0110 00rr                      1- 3573     	MOVAR	r0x1031
     0111 1Err                      1- 3574     	BCR	r0x1031,5
     0112 01rr                      1- 3575     	MOVR	r0x1031,W
     0113 000r                      1- 3576     	IOST	_IOSTB
                                    1- 3577     	.line	443, "main.c"; 	break;
                                    1- 3578     	MGOTO	_02167_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
     0115                           1- 3579     _02151_DS_:
                                    1- 3580     	.line	446, "main.c"; 	if (displayDigit & SEG_G) // 3G OK
                                    1- 3581     	BANKSEL	_displayDigit
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 3582     	BTRSS	_displayDigit,6
                                    1- 3583     	MGOTO	_02167_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3584     	.line	448, "main.c"; 	P_LED_SEG5_SET;
     0118 1Brr                      1- 3585     	BSR	_PORTAbits,6
                                    1- 3586     	.line	449, "main.c"; 	P_LED_SEG5_OUTPUT;
     0119 001r                      1- 3587     	IOSTR	_IOSTA
                                    1- 3588     	BANKSEL	r0x1031
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 00rr                      1- 3589     	MOVAR	r0x1031
     011C 1Frr                      1- 3590     	BCR	r0x1031,6
     011D 01rr                      1- 3591     	MOVR	r0x1031,W
     011E 000r                      1- 3592     	IOST	_IOSTA
                                    1- 3593     	.line	450, "main.c"; 	P_LED_SEG1_CLR;
     011F 1Err                      1- 3594     	BCR	_PORTBbits,5
                                    1- 3595     	.line	451, "main.c"; 	P_LED_SEG1_OUTPUT;
     0120 001r                      1- 3596     	IOSTR	_IOSTB
     0121 00rr                      1- 3597     	MOVAR	r0x1031
     0122 1Err                      1- 3598     	BCR	r0x1031,5
     0123 01rr                      1- 3599     	MOVR	r0x1031,W
     0124 000r                      1- 3600     	IOST	_IOSTB
                                    1- 3601     	.line	453, "main.c"; 	break;
                                    1- 3602     	MGOTO	_02167_DS_
     0125 3rrr                      3-   62 m1      LGOTO rom_address
     0126                           1- 3603     _02154_DS_:
                                    1- 3604     	.line	456, "main.c"; 	if (displayHundred & SEG_B) // 1B OK
                                    1- 3605     	BANKSEL	_displayHundred
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 08rr                      1- 3606     	BTRSS	_displayHundred,1
                                    1- 3607     	MGOTO	_02167_DS_
     0128 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3608     	.line	458, "main.c"; 	P_LED_SEG3_SET;
     0129 18rr                      1- 3609     	BSR	_PORTAbits,1
                                    1- 3610     	.line	459, "main.c"; 	P_LED_SEG3_OUTPUT;
     012A 001r                      1- 3611     	IOSTR	_IOSTA
                                    1- 3612     	BANKSEL	r0x1031
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 3613     	MOVAR	r0x1031
     012D 1Crr                      1- 3614     	BCR	r0x1031,1
     012E 01rr                      1- 3615     	MOVR	r0x1031,W
     012F 000r                      1- 3616     	IOST	_IOSTA
                                    1- 3617     	.line	460, "main.c"; 	P_LED_SEG4_CLR;
     0130 1Frr                      1- 3618     	BCR	_PORTAbits,7
                                    1- 3619     	.line	461, "main.c"; 	P_LED_SEG4_OUTPUT;
     0131 001r                      1- 3620     	IOSTR	_IOSTA
     0132 00rr                      1- 3621     	MOVAR	r0x1031
     0133 1Frr                      1- 3622     	BCR	r0x1031,7
     0134 01rr                      1- 3623     	MOVR	r0x1031,W
     0135 000r                      1- 3624     	IOST	_IOSTA
                                    1- 3625     	.line	463, "main.c"; 	break;
                                    1- 3626     	MGOTO	_02167_DS_
     0136 3rrr                      3-   62 m1      LGOTO rom_address
     0137                           1- 3627     _02157_DS_:
                                    1- 3628     	.line	466, "main.c"; 	if (displayHundred & SEG_C) // 1C OK
                                    1- 3629     	BANKSEL	_displayHundred
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 09rr                      1- 3630     	BTRSS	_displayHundred,2
                                    1- 3631     	MGOTO	_02167_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3632     	.line	468, "main.c"; 	P_LED_SEG2_SET;
     013A 18rr                      1- 3633     	BSR	_PORTAbits,0
                                    1- 3634     	.line	469, "main.c"; 	P_LED_SEG2_OUTPUT;
     013B 001r                      1- 3635     	IOSTR	_IOSTA
                                    1- 3636     	BANKSEL	r0x1031
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 00rr                      1- 3637     	MOVAR	r0x1031
     013E 1Crr                      1- 3638     	BCR	r0x1031,0
     013F 01rr                      1- 3639     	MOVR	r0x1031,W
     0140 000r                      1- 3640     	IOST	_IOSTA
                                    1- 3641     	.line	470, "main.c"; 	P_LED_SEG4_CLR;
     0141 1Frr                      1- 3642     	BCR	_PORTAbits,7
                                    1- 3643     	.line	471, "main.c"; 	P_LED_SEG4_OUTPUT;
     0142 001r                      1- 3644     	IOSTR	_IOSTA
     0143 00rr                      1- 3645     	MOVAR	r0x1031
     0144 1Frr                      1- 3646     	BCR	r0x1031,7
     0145 01rr                      1- 3647     	MOVR	r0x1031,W
     0146 000r                      1- 3648     	IOST	_IOSTA
                                    1- 3649     	.line	474, "main.c"; 	break;
                                    1- 3650     	MGOTO	_02167_DS_
     0147 3rrr                      3-   62 m1      LGOTO rom_address
     0148                           1- 3651     _02160_DS_:
                                    1- 3652     	.line	489, "main.c"; 	if (displayHundred & SEG_D) // 1D quick
                                    1- 3653     	BANKSEL	_displayHundred
     0148 rrrr                      3-  109 m1      .banksel ram_address
     0149 09rr                      1- 3654     	BTRSS	_displayHundred,3
                                    1- 3655     	MGOTO	_02167_DS_
     014A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3656     	.line	491, "main.c"; 	P_LED_SEG3_SET;
     014B 18rr                      1- 3657     	BSR	_PORTAbits,1
                                    1- 3658     	.line	492, "main.c"; 	P_LED_SEG3_OUTPUT;
     014C 001r                      1- 3659     	IOSTR	_IOSTA
                                    1- 3660     	BANKSEL	r0x1031
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 00rr                      1- 3661     	MOVAR	r0x1031
     014F 1Crr                      1- 3662     	BCR	r0x1031,1
     0150 01rr                      1- 3663     	MOVR	r0x1031,W
     0151 000r                      1- 3664     	IOST	_IOSTA
                                    1- 3665     	.line	493, "main.c"; 	P_LED_SEG5_CLR;
     0152 1Frr                      1- 3666     	BCR	_PORTAbits,6
                                    1- 3667     	.line	494, "main.c"; 	P_LED_SEG5_OUTPUT;
     0153 001r                      1- 3668     	IOSTR	_IOSTA
     0154 00rr                      1- 3669     	MOVAR	r0x1031
     0155 1Frr                      1- 3670     	BCR	r0x1031,6
     0156 01rr                      1- 3671     	MOVR	r0x1031,W
     0157 000r                      1- 3672     	IOST	_IOSTA
                                    1- 3673     	.line	496, "main.c"; 	break;
                                    1- 3674     	MGOTO	_02167_DS_
     0158 3rrr                      3-   62 m1      LGOTO rom_address
     0159                           1- 3675     _02163_DS_:
                                    1- 3676     	.line	499, "main.c"; 	if (displayHundred & SEG_E) // 1E wireless
                                    1- 3677     	BANKSEL	_displayHundred
     0159 rrrr                      3-  109 m1      .banksel ram_address
     015A 0Arr                      1- 3678     	BTRSS	_displayHundred,4
                                    1- 3679     	MGOTO	_02167_DS_
     015B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3680     	.line	501, "main.c"; 	P_LED_SEG2_SET;
     015C 18rr                      1- 3681     	BSR	_PORTAbits,0
                                    1- 3682     	.line	502, "main.c"; 	P_LED_SEG2_OUTPUT;
     015D 001r                      1- 3683     	IOSTR	_IOSTA
                                    1- 3684     	BANKSEL	r0x1031
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 00rr                      1- 3685     	MOVAR	r0x1031
     0160 1Crr                      1- 3686     	BCR	r0x1031,0
     0161 01rr                      1- 3687     	MOVR	r0x1031,W
     0162 000r                      1- 3688     	IOST	_IOSTA
                                    1- 3689     	.line	503, "main.c"; 	P_LED_SEG5_CLR;
     0163 1Frr                      1- 3690     	BCR	_PORTAbits,6
                                    1- 3691     	.line	504, "main.c"; 	P_LED_SEG5_OUTPUT;
     0164 001r                      1- 3692     	IOSTR	_IOSTA
     0165 00rr                      1- 3693     	MOVAR	r0x1031
     0166 1Frr                      1- 3694     	BCR	r0x1031,6
     0167 01rr                      1- 3695     	MOVR	r0x1031,W
     0168 000r                      1- 3696     	IOST	_IOSTA
     0169                           1- 3697     _02167_DS_:
                                    1- 3698     	.line	511, "main.c"; 	indexScan++; //! 1ms 调用一次
                                    1- 3699     	BANKSEL	_io_led_scan_indexScan_65536_30
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 05rr                      1- 3700     	INCR	_io_led_scan_indexScan_65536_30,F
                                    1- 3701     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3702     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3703     	.line	542, "main.c"; 	if (indexScan > 17) //
     016B 2112                      1- 3704     	MOVIA	0x12
     016C 04rr                      1- 3705     	SUBAR	_io_led_scan_indexScan_65536_30,W
     016D 0C03                      1- 3706     	BTRSC	STATUS,0
                                    1- 3707     	.line	544, "main.c"; 	indexScan = 0;
     016E 02rr                      1- 3708     	CLRR	_io_led_scan_indexScan_65536_30
                                    1- 3709     	.line	546, "main.c"; 	}
                                    1- 3710     	RETURN	
     016F 0010                      3-   39 m1      ret
                                    1- 3712     ;***
                                    1- 3713     ;  pBlock Stats: dbName = C
                                    1- 3714     ;***
                                    1- 3715     ;has an exit
                                    1- 3716     ;1 compiler assigned register :
                                    1- 3717     ;   r0x101A
                                    1- 3718     ;; Starting pCode block
                                    1- 3719     .segment "code"; module=main, function=__dly_us
     0000                           1- 3721     __dly_us:
                                    1- 3722     ; 2 exit points
                                    1- 3723     	.line	295, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3724     	BANKSEL	r0x101A
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3725     	MOVAR	r0x101A
     0002                           1- 3726     _02104_DS_:
                                    1- 3727     	.line	297, "main.c"; 	while (cnt)
                                    1- 3728     	BANKSEL	r0x101A
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3729     	MOVR	r0x101A,W
     0004 0D03                      1- 3730     	BTRSC	STATUS,2
                                    1- 3731     	MGOTO	_02107_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3732     	.line	299, "main.c"; 	cnt--;
     0006 06rr                      1- 3733     	DECR	r0x101A,F
                                    1- 3734     	MGOTO	_02104_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3735     _02107_DS_:
                                    1- 3736     	.line	301, "main.c"; 	}
                                    1- 3737     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3738     ; exit point of __dly_us
                                    1- 3740     ;***
                                    1- 3741     ;  pBlock Stats: dbName = C
                                    1- 3742     ;***
                                    1- 3743     ;has an exit
                                    1- 3744     ;; Starting pCode block
                                    1- 3745     .segment "code"; module=main, function=_disable_breathing_mode
     0000                           1- 3747     _disable_breathing_mode:
                                    1- 3748     ; 2 exit points
                                    1- 3749     	.line	287, "main.c"; 	bFlag_is_breathing_mode = 0;
                                    1- 3750     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 1Crr                      1- 3751     	BCR	_vFlag_1,0
                                    1- 3752     	.line	288, "main.c"; 	indicator_light_mode = 0;
                                    1- 3753     	BANKSEL	_indicator_light_mode
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 3754     	CLRR	_indicator_light_mode
                                    1- 3755     	.line	289, "main.c"; 	P_LED_R_CLR;
     0004 1Err                      1- 3756     	BCR	_PORTBbits,4
                                    1- 3757     	.line	290, "main.c"; 	P_LED_G_CLR;
     0005 1Drr                      1- 3758     	BCR	_PORTBbits,3
                                    1- 3759     	.line	291, "main.c"; 	P_LED_B_CLR;
     0006 1Drr                      1- 3760     	BCR	_PORTBbits,2
                                    1- 3761     	.line	292, "main.c"; 	}
                                    1- 3762     	RETURN	
     0007 0010                      3-   39 m1      ret
                                    1- 3763     ; exit point of _disable_breathing_mode
                                    1- 3765     ;***
                                    1- 3766     ;  pBlock Stats: dbName = C
                                    1- 3767     ;***
                                    1- 3768     ;has an exit
                                    1- 3769     ;; Starting pCode block
                                    1- 3770     .segment "code"; module=main, function=_enable_breathing_mode
     0000                           1- 3772     _enable_breathing_mode:
                                    1- 3773     ; 2 exit points
                                    1- 3774     	.line	280, "main.c"; 	bFlag_is_breathing_mode = 1;
                                    1- 3775     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 18rr                      1- 3776     	BSR	_vFlag_1,0
                                    1- 3777     	.line	281, "main.c"; 	bFlag_inc_or_dec = 0;
     0002 1Crr                      1- 3778     	BCR	_vFlag_1,1
                                    1- 3779     	.line	282, "main.c"; 	indicator_light_mode = 0;
                                    1- 3780     	BANKSEL	_indicator_light_mode
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 3781     	CLRR	_indicator_light_mode
                                    1- 3782     	.line	283, "main.c"; 	}
                                    1- 3783     	RETURN	
     0005 0010                      3-   39 m1      ret
                                    1- 3784     ; exit point of _enable_breathing_mode
                                    1- 3787     ;	code size estimation:
                                    1- 3788     ;	 1565+  388 =  1953 instructions ( 4682 byte)
                                    1- 3790     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
