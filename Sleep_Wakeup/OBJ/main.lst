
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_PWM5RH
                                    1-   27     	extern	_PWM5DUTY
                                    1-   28     	extern	_P5CR1
                                    1-   29     	extern	_PWM4DUTY
                                    1-   30     	extern	_P4CR1
                                    1-   31     	extern	_PS3CV
                                    1-   32     	extern	_PWM3DUTY
                                    1-   33     	extern	_T3CR2
                                    1-   34     	extern	_T3CR1
                                    1-   35     	extern	_TMR3
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_PWM2DUTY
                                    1-   38     	extern	_P2CR1
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_STATUS
                                    1-   52     	extern	_PCL
                                    1-   53     	extern	_TMR0
                                    1-   54     	extern	_INTE2bits
                                    1-   55     	extern	_RFCbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_INTEbits
                                    1-   60     	extern	_BPHCONbits
                                    1-   61     	extern	_ABPLCONbits
                                    1-   62     	extern	_BWUCONbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_PORTBbits
                                    1-   65     	extern	_PORTAbits
                                    1-   66     	extern	__gptrget1
                                    1-   67     	extern	__nyc_ny8_startup
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     ; global declarations
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     	extern	_main
                                    1-   72     	extern	_enterSleepMode
                                    1-   73     	extern	_app_display_all
                                    1-   74     	extern	_get_cap
                                    1-   75     	extern	_is_chg_or_dischg
                                    1-   76     	extern	_get_p_ext_int_status
                                    1-   77     	extern	_init_ip53xs
                                    1-   78     	extern	_ip55xs_read4Bytes
                                    1-   79     	extern	_ip55xs_write4Bytes
                                    1-   80     	extern	_ip53xs_readByte
                                    1-   81     	extern	_ip53xs_writeByte
                                    1-   82     	extern	_i2c_readByte
                                    1-   83     	extern	_i2c_writeByte
                                    1-   84     	extern	_i2c_send_nack
                                    1-   85     	extern	_i2c_send_ack
                                    1-   86     	extern	_i2c_chk_ack
                                    1-   87     	extern	_i2c_stop
                                    1-   88     	extern	_i2c_start
                                    1-   89     	extern	_gpioKeyScan
                                    1-   90     	extern	__dly_us
                                    1-   91     	extern	_disable_breathing_mode
                                    1-   92     	extern	_enable_breathing_mode
                                    1-   93     	extern	_isr
                                    1-   94     	extern	_RESPIRATION_LAMP_TABLE
                                    1-   95     	extern	_DispTable
                                    1-   96     	extern	_INTE2
                                    1-   97     	extern	_RFC
                                    1-   98     	extern	_INTEDG
                                    1-   99     	extern	_AWUCON
                                    1-  100     	extern	_INTF
                                    1-  101     	extern	_INTE
                                    1-  102     	extern	_BPHCON
                                    1-  103     	extern	_ABPLCON
                                    1-  104     	extern	_BWUCON
                                    1-  105     	extern	_PCON
                                    1-  106     	extern	_PORTB
                                    1-  107     	extern	_PORTA
                                    1-  108     	extern	_gSysTick
                                    1-  109     	extern	_timer_slice_10ms
                                    1-  110     	extern	_displayDigit
                                    1-  111     	extern	_displayDecade
                                    1-  112     	extern	_displayHundred
                                    1-  113     	extern	_displayData
                                    1-  114     	extern	_forceDispTimer
                                    1-  115     	extern	_IP_DATA
                                    1-  116     	extern	_respiration_lamp_timer
                                    1-  117     	extern	_gpioKeyState
                                    1-  118     	extern	_gpioKeyWaitTimer
                                    1-  119     	extern	_delaySleepTime
                                    1-  120     	extern	_timer_slice_16ms
                                    1-  121     	extern	_bat_level_buf
                                    1-  122     	extern	_delaySleepTimer
                                    1-  123     	extern	_displayTimer
                                    1-  124     	extern	_underVoltageDispTimer
                                    1-  125     	extern	_indicator_light_mode
                                    1-  126     	extern	_always_light_timer_shadow
                                    1-  127     	extern	_always_light_timer
                                    1-  128     	extern	_moto_work_mode
                                    1-  129     	extern	_vFlag_1
                                    1-  130     	extern	_vFlag_0
                                    1-  131     	extern	_io_led_scan
                                    1-  133     	extern PSAVE
                                    1-  134     	extern SSAVE
                                    1-  135     	extern WSAVE
                                    1-  136     	extern STK12
                                    1-  137     	extern STK11
                                    1-  138     	extern STK10
                                    1-  139     	extern STK09
                                    1-  140     	extern STK08
                                    1-  141     	extern STK07
                                    1-  142     	extern STK06
                                    1-  143     	extern STK05
                                    1-  144     	extern STK04
                                    1-  145     	extern STK03
                                    1-  146     	extern STK02
                                    1-  147     	extern STK01
                                    1-  148     	extern STK00
                                    1-  150     .segment "share_bank"
     0000                           1-  151     PSAVE:
                                    1-  152     	.res 1
                                    1-  153     .segment "share_bank"
     0000                           1-  154     SSAVE:
                                    1-  155     	.res 1
                                    1-  156     .segment "share_bank"
     0000                           1-  157     WSAVE:
                                    1-  158     	.res 1
                                    1-  159     .segment "share_bank"
     0000                           1-  160     STK12:
                                    1-  161     	.res 1
                                    1-  162     .segment "share_bank"
     0000                           1-  163     STK11:
                                    1-  164     	.res 1
                                    1-  165     .segment "share_bank"
     0000                           1-  166     STK10:
                                    1-  167     	.res 1
                                    1-  168     .segment "share_bank"
     0000                           1-  169     STK09:
                                    1-  170     	.res 1
                                    1-  171     .segment "share_bank"
     0000                           1-  172     STK08:
                                    1-  173     	.res 1
                                    1-  174     .segment "share_bank"
     0000                           1-  175     STK07:
                                    1-  176     	.res 1
                                    1-  177     .segment "share_bank"
     0000                           1-  178     STK06:
                                    1-  179     	.res 1
                                    1-  180     .segment "share_bank"
     0000                           1-  181     STK05:
                                    1-  182     	.res 1
                                    1-  183     .segment "share_bank"
     0000                           1-  184     STK04:
                                    1-  185     	.res 1
                                    1-  186     .segment "share_bank"
     0000                           1-  187     STK03:
                                    1-  188     	.res 1
                                    1-  189     .segment "share_bank"
     0000                           1-  190     STK02:
                                    1-  191     	.res 1
                                    1-  192     .segment "share_bank"
     0000                           1-  193     STK01:
                                    1-  194     	.res 1
                                    1-  195     .segment "share_bank"
     0000                           1-  196     STK00:
                                    1-  197     	.res 1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; global definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     .segment "uninit"
     0000                           1-  203     _vFlag_0:
                                    1-  204     	.res 1
                                    1-  207     .segment "uninit"
     0000                           1-  208     _vFlag_1:
                                    1-  209     	.res 1
                                    1-  212     .segment "uninit"
     0000                           1-  213     _moto_work_mode:
                                    1-  214     	.res 1
                                    1-  217     .segment "uninit"
     0000                           1-  218     _always_light_timer:
                                    1-  219     	.res 1
                                    1-  222     .segment "uninit"
     0000                           1-  223     _always_light_timer_shadow:
                                    1-  224     	.res 1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _indicator_light_mode:
                                    1-  229     	.res 1
                                    1-  232     .segment "uninit"
     0000                           1-  233     _underVoltageDispTimer:
                                    1-  234     	.res 1
                                    1-  237     .segment "uninit"
     0000                           1-  238     _displayTimer:
                                    1-  239     	.res 1
                                    1-  242     .segment "uninit"
     0000                           1-  243     _delaySleepTimer:
                                    1-  244     	.res 1
                                    1-  247     .segment "uninit"
     0000                           1-  248     _bat_level_buf:
                                    1-  249     	.res 1
                                    1-  252     .segment "uninit"
     0000                           1-  253     _timer_slice_16ms:
                                    1-  254     	.res 1
                                    1-  257     .segment "uninit"
     0000                           1-  258     _delaySleepTime:
                                    1-  259     	.res 1
                                    1-  262     .segment "uninit"
     0000                           1-  263     _gpioKeyWaitTimer:
                                    1-  264     	.res 1
                                    1-  267     .segment "uninit"
     0000                           1-  268     _gpioKeyState:
                                    1-  269     	.res 1
                                    1-  272     .segment "uninit"
     0000                           1-  273     _respiration_lamp_timer:
                                    1-  274     	.res 1
                                    1-  277     .segment "uninit"
     0000                           1-  278     _IP_DATA:
                                    1-  279     	.res 4
                                    1-  282     .segment "uninit"
     0000                           1-  283     _forceDispTimer:
                                    1-  284     	.res 1
                                    1-  287     .segment "uninit"
     0000                           1-  288     _displayData:
                                    1-  289     	.res 1
                                    1-  292     .segment "uninit"
     0000                           1-  293     _displayHundred:
                                    1-  294     	.res 1
                                    1-  297     .segment "uninit"
     0000                           1-  298     _displayDecade:
                                    1-  299     	.res 1
                                    1-  302     .segment "uninit"
     0000                           1-  303     _displayDigit:
                                    1-  304     	.res 1
                                    1-  307     .segment "uninit"
     0000                           1-  308     _timer_slice_10ms:
                                    1-  309     	.res 1
                                    1-  312     .segment "uninit"
     0000                           1-  313     _gSysTick:
                                    1-  314     	.res 1
                                    1-  317     ;--------------------------------------------------------
                                    1-  318     ; absolute symbol definitions
                                    1-  319     ;--------------------------------------------------------
                                    1-  320     ;--------------------------------------------------------
                                    1-  321     ; compiler-defined variables
                                    1-  322     ;--------------------------------------------------------
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1033:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1034:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x101B:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1032:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x101C:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x101D:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x101E:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x101F:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x1020:
                                    1-  349     	.res	1
                                    1-  350     .segment "uninit"
     0000                           1-  351     r0x1021:
                                    1-  352     	.res	1
                                    1-  353     .segment "uninit"
     0000                           1-  354     r0x1022:
                                    1-  355     	.res	1
                                    1-  356     .segment "uninit"
     0000                           1-  357     r0x1023:
                                    1-  358     	.res	1
                                    1-  359     .segment "uninit"
     0000                           1-  360     r0x1025:
                                    1-  361     	.res	1
                                    1-  362     .segment "uninit"
     0000                           1-  363     r0x1024:
                                    1-  364     	.res	1
                                    1-  365     .segment "uninit"
     0000                           1-  366     r0x1028:
                                    1-  367     	.res	1
                                    1-  368     .segment "uninit"
     0000                           1-  369     r0x1027:
                                    1-  370     	.res	1
                                    1-  371     .segment "uninit"
     0000                           1-  372     r0x1026:
                                    1-  373     	.res	1
                                    1-  374     .segment "uninit"
     0000                           1-  375     r0x102F:
                                    1-  376     	.res	1
                                    1-  377     .segment "uninit"
     0000                           1-  378     r0x102B:
                                    1-  379     	.res	1
                                    1-  380     .segment "uninit"
     0000                           1-  381     r0x1029:
                                    1-  382     	.res	1
                                    1-  383     .segment "uninit"
     0000                           1-  384     r0x102E:
                                    1-  385     	.res	1
                                    1-  386     .segment "uninit"
     0000                           1-  387     _isr_timerCnt_65536_5:
                                    1-  388     	.res	1
                                    1-  390     .segment "uninit"
     0000                           1-  391     _isr_respiration_lamp_series_65536_5:
                                    1-  392     	.res	1
                                    1-  394     .segment "uninit"
     0000                           1-  395     _isr_led_lamp_65536_5:
                                    1-  396     	.res	1
                                    1-  398     .segment "uninit"
     0000                           1-  399     ___sdcc_saved_fsr:
                                    1-  400     	.res	1
                                    1-  402     .segment "uninit"
     0000                           1-  403     ___sdcc_saved_stk00:
                                    1-  404     	.res	1
                                    1-  406     .segment "uninit"
     0000                           1-  407     ___sdcc_saved_stk01:
                                    1-  408     	.res	1
                                    1-  410     .segment "uninit"
     0000                           1-  411     _get_p_ext_int_status_counter_65536_120:
                                    1-  412     	.res	1
                                    1-  414     .segment "uninit"
     0000                           1-  415     _is_chg_or_dischg_counter_65536_130:
                                    1-  416     	.res	1
                                    1-  418     ;--------------------------------------------------------
                                    1-  419     ; initialized data
                                    1-  420     ;--------------------------------------------------------
                                    1-  422     .segment "idata"
     0000                           1-  423     _io_led_scan_indexScan_65536_29:
     0000 0000                      1-  426     	dw	0x00	; 0
                                    1-  429     .segment "code"
     0000                           1-  430     _DispTable:
     0000 203F                      1-  431     	retia 0x3f	; 63
     0001 2006                      1-  432     	retia 0x06	; 6
     0002 205B                      1-  433     	retia 0x5b	; 91
     0003 204F                      1-  434     	retia 0x4f	; 79	'O'
     0004 2066                      1-  435     	retia 0x66	; 102	'f'
     0005 206D                      1-  436     	retia 0x6d	; 109	'm'
     0006 207D                      1-  437     	retia 0x7d	; 125
     0007 2007                      1-  438     	retia 0x07	; 7
     0008 207F                      1-  439     	retia 0x7f	; 127
     0009 206F                      1-  440     	retia 0x6f	; 111	'o'
     000A 2079                      1-  441     	retia 0x79	; 121	'y'
     000B 2050                      1-  442     	retia 0x50	; 80	'P'
     000C 2076                      1-  443     	retia 0x76	; 118	'v'
     000D 2000                      1-  444     	retia 0x00	; 0
                                    1-  446     .segment "code"
     0000                           1-  447     _RESPIRATION_LAMP_TABLE:
     0000 2001                      1-  448     	retia 0x01	; 1
     0001 2001                      1-  449     	retia 0x01	; 1
     0002 2001                      1-  450     	retia 0x01	; 1
     0003 2001                      1-  451     	retia 0x01	; 1
     0004 2001                      1-  452     	retia 0x01	; 1
     0005 2002                      1-  453     	retia 0x02	; 2
     0006 2002                      1-  454     	retia 0x02	; 2
     0007 2002                      1-  455     	retia 0x02	; 2
     0008 2002                      1-  456     	retia 0x02	; 2
     0009 2002                      1-  457     	retia 0x02	; 2
     000A 2002                      1-  458     	retia 0x02	; 2
     000B 2002                      1-  459     	retia 0x02	; 2
     000C 2002                      1-  460     	retia 0x02	; 2
     000D 2003                      1-  461     	retia 0x03	; 3
     000E 2003                      1-  462     	retia 0x03	; 3
     000F 2003                      1-  463     	retia 0x03	; 3
     0010 2003                      1-  464     	retia 0x03	; 3
     0011 2003                      1-  465     	retia 0x03	; 3
     0012 2004                      1-  466     	retia 0x04	; 4
     0013 2004                      1-  467     	retia 0x04	; 4
     0014 2004                      1-  468     	retia 0x04	; 4
     0015 2005                      1-  469     	retia 0x05	; 5
     0016 2005                      1-  470     	retia 0x05	; 5
     0017 2005                      1-  471     	retia 0x05	; 5
     0018 2006                      1-  472     	retia 0x06	; 6
     0019 2006                      1-  473     	retia 0x06	; 6
     001A 2006                      1-  474     	retia 0x06	; 6
     001B 2007                      1-  475     	retia 0x07	; 7
     001C 2007                      1-  476     	retia 0x07	; 7
     001D 2008                      1-  477     	retia 0x08	; 8
     001E 2009                      1-  478     	retia 0x09	; 9
     001F 2009                      1-  479     	retia 0x09	; 9
     0020 200A                      1-  480     	retia 0x0a	; 10
     0021 200B                      1-  481     	retia 0x0b	; 11
     0022 200B                      1-  482     	retia 0x0b	; 11
     0023 200C                      1-  483     	retia 0x0c	; 12
     0024 200D                      1-  484     	retia 0x0d	; 13
     0025 200E                      1-  485     	retia 0x0e	; 14
     0026 200F                      1-  486     	retia 0x0f	; 15
     0027 2010                      1-  487     	retia 0x10	; 16
     0028 2011                      1-  488     	retia 0x11	; 17
     0029 2012                      1-  489     	retia 0x12	; 18
     002A 2014                      1-  490     	retia 0x14	; 20
     002B 2015                      1-  491     	retia 0x15	; 21
     002C 2017                      1-  492     	retia 0x17	; 23
     002D 2018                      1-  493     	retia 0x18	; 24
     002E 201A                      1-  494     	retia 0x1a	; 26
     002F 201C                      1-  495     	retia 0x1c	; 28
     0030 201E                      1-  496     	retia 0x1e	; 30
     0031 2020                      1-  497     	retia 0x20	; 32
     0032 2022                      1-  498     	retia 0x22	; 34
     0033 2025                      1-  499     	retia 0x25	; 37
     0034 2027                      1-  500     	retia 0x27	; 39
     0035 202A                      1-  501     	retia 0x2a	; 42
     0036 202D                      1-  502     	retia 0x2d	; 45
     0037 2030                      1-  503     	retia 0x30	; 48	'0'
     0038 2034                      1-  504     	retia 0x34	; 52	'4'
     0039 2038                      1-  505     	retia 0x38	; 56	'8'
     003A 203C                      1-  506     	retia 0x3c	; 60
     003B 2040                      1-  507     	retia 0x40	; 64
     003C 2044                      1-  508     	retia 0x44	; 68	'D'
     003D 2049                      1-  509     	retia 0x49	; 73	'I'
     003E 204F                      1-  510     	retia 0x4f	; 79	'O'
     003F 2054                      1-  511     	retia 0x54	; 84	'T'
     0040 205A                      1-  512     	retia 0x5a	; 90	'Z'
     0041 2061                      1-  513     	retia 0x61	; 97	'a'
     0042 2068                      1-  514     	retia 0x68	; 104	'h'
     0043 206F                      1-  515     	retia 0x6f	; 111	'o'
     0044 2077                      1-  516     	retia 0x77	; 119	'w'
     0045 2080                      1-  517     	retia 0x80	; 128
     0046 2089                      1-  518     	retia 0x89	; 137
     0047 2093                      1-  519     	retia 0x93	; 147
     0048 209D                      1-  520     	retia 0x9d	; 157
     0049 20A8                      1-  521     	retia 0xa8	; 168
     004A 20B4                      1-  522     	retia 0xb4	; 180
     004B 20C1                      1-  523     	retia 0xc1	; 193
     004C 20CF                      1-  524     	retia 0xcf	; 207
     004D 20DE                      1-  525     	retia 0xde	; 222
     004E 20EE                      1-  526     	retia 0xee	; 238
     004F 20FF                      1-  527     	retia 0xff	; 255
     0050 20FF                      1-  528     	retia 0xff	; 255
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ; initialized absolute data
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ;--------------------------------------------------------
                                    1-  533     ; overlayable items in internal ram 
                                    1-  534     ;--------------------------------------------------------
                                    1-  535     ;	udata_ovr
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; reset vector 
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ORG	0x0000
     0000 3rrr                      1-  540     	LGOTO	__nyc_ny8_startup
                                    1-  541     ;--------------------------------------------------------
                                    1-  542     ; interrupt and initialization code
                                    1-  543     ;--------------------------------------------------------
                                    1-  544     ORG 0x0008
                                    1-  545     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  547     .segment "code"
     0000                           1-  548     __sdcc_interrupt:
                                    1-  549     ;***
                                    1-  550     ;  pBlock Stats: dbName = I
                                    1-  551     ;***
                                    1-  552     ;functions called:
                                    1-  553     ;   _io_led_scan
                                    1-  554     ;   __gptrget1
                                    1-  555     ;   _io_led_scan
                                    1-  556     ;   __gptrget1
                                    1-  557     ;4 compiler assigned registers:
                                    1-  558     ;   STK00
                                    1-  559     ;   STK01
                                    1-  560     ;   r0x1033
                                    1-  561     ;   r0x1034
                                    1-  562     ;; Starting pCode block
     0000                           1-  563     _isr:
                                    1-  564     ; 0 exit points
                                    1-  565     	.line	189, "main.c"; 	void isr(void) __interrupt(0) // 64us  8MHz 2T
     0000 00rr                      1-  566     	MOVAR	WSAVE
     0001 1503                      1-  567     	SWAPR	STATUS,W
     0002 0283                      1-  568     	CLRR	STATUS
     0003 00rr                      1-  569     	MOVAR	SSAVE
     0004 010A                      1-  570     	MOVR	PCHBUF,W
     0005 028A                      1-  571     	CLRR	PCHBUF
     0006 00rr                      1-  572     	MOVAR	PSAVE
     0007 0104                      1-  573     	MOVR	FSR,W
                                    1-  574     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  575     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  576     	MOVR	STK00,W
                                    1-  577     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  578     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  579     	MOVR	STK01,W
                                    1-  580     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  581     	MOVAR	___sdcc_saved_stk01
                                    1-  582     	.line	195, "main.c"; 	if (TM0IF)
     0010 08rr                      1-  583     	BTRSS	_INTFbits,0
                                    1-  584     	MGOTO	_02030_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  585     	.line	197, "main.c"; 	TM0IF = 0;
     0012 21FE                      1-  586     	MOVIA	0xfe
     0013 00rr                      1-  587     	MOVAR	(_INTFbits + 0)
                                    1-  588     	.line	202, "main.c"; 	timerCnt++;
                                    1-  589     	BANKSEL	_isr_timerCnt_65536_5
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1-  590     	INCR	_isr_timerCnt_65536_5,F
                                    1-  591     	.line	204, "main.c"; 	if (!(timerCnt & 0x0F))
     0016 01rr                      1-  592     	MOVR	_isr_timerCnt_65536_5,W
     0017 220F                      1-  593     	ANDIA	0x0f
     0018 0903                      1-  594     	BTRSS	STATUS,2
                                    1-  595     	MGOTO	_02006_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  596     	.line	206, "main.c"; 	P_TEST ^= 1;
                                    1-  597     	BANKSEL	r0x1033
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 02rr                      1-  598     	CLRR	r0x1033
     001C 0Err                      1-  599     	BTRSC	_PORTAbits,5
     001D 05rr                      1-  600     	INCR	r0x1033,F
     001E 2101                      1-  601     	MOVIA	0x01
     001F 12rr                      1-  602     	XORAR	r0x1033,F
     0020 13rr                      1-  603     	RRR	r0x1033,W
     0021 0803                      1-  604     	BTRSS	STATUS,0
     0022 1Err                      1-  605     	BCR	_PORTAbits,5
     0023 0C03                      1-  606     	BTRSC	STATUS,0
     0024 1Arr                      1-  607     	BSR	_PORTAbits,5
                                    1-  608     	.line	207, "main.c"; 	bFlag_gSysTick_Change = 1; // 1ms
                                    1-  609     	BANKSEL	_vFlag_0
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 18rr                      1-  610     	BSR	_vFlag_0,0
                                    1-  611     	.line	208, "main.c"; 	io_led_scan();
                                    1-  612     	MCALL	_io_led_scan
     0027 2rrr                      3-   65 m1      LCALL rom_address
     0028                           1-  613     _02006_DS_:
                                    1-  614     	.line	211, "main.c"; 	if (bFlag_is_breathing_mode) // 100us
                                    1-  615     	BANKSEL	_vFlag_1
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 08rr                      1-  616     	BTRSS	_vFlag_1,0
                                    1-  617     	MGOTO	_02030_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  618     	.line	213, "main.c"; 	respiration_lamp_timer++;
                                    1-  619     	BANKSEL	_respiration_lamp_timer
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 01rr                      1-  620     	MOVR	_respiration_lamp_timer,W
                                    1-  621     	BANKSEL	r0x1033
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 00rr                      1-  622     	MOVAR	r0x1033
     002F 05rr                      1-  623     	INCR	r0x1033,W
                                    1-  624     	BANKSEL	_respiration_lamp_timer
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 00rr                      1-  625     	MOVAR	_respiration_lamp_timer
                                    1-  626     	.line	215, "main.c"; 	if (!(respiration_lamp_timer))
     0032 01rr                      1-  627     	MOVR	_respiration_lamp_timer,W
     0033 0903                      1-  628     	BTRSS	STATUS,2
                                    1-  629     	MGOTO	_02017_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  630     	.line	217, "main.c"; 	if (bFlag_inc_or_dec)
                                    1-  631     	BANKSEL	_vFlag_1
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 08rr                      1-  632     	BTRSS	_vFlag_1,1
                                    1-  633     	MGOTO	_02014_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  634     	.line	219, "main.c"; 	if (!(--respiration_lamp_series))
                                    1-  635     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 17rr                      1-  636     	DECRSZ	_isr_respiration_lamp_series_65536_5,F
                                    1-  637     	MGOTO	_02015_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  638     	.line	221, "main.c"; 	bFlag_inc_or_dec = 0;
                                    1-  639     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Crr                      1-  640     	BCR	_vFlag_1,1
                                    1-  641     	.line	223, "main.c"; 	if (++indicator_light_mode > 2)
                                    1-  642     	BANKSEL	_indicator_light_mode
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 05rr                      1-  643     	INCR	_indicator_light_mode,W
                                    1-  644     	BANKSEL	r0x1033
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1-  645     	MOVAR	r0x1033
                                    1-  646     	BANKSEL	_indicator_light_mode
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 00rr                      1-  647     	MOVAR	_indicator_light_mode
                                    1-  648     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  649     ;;unsigned compare: left >= lit(0x3=3), size=1
     0043 2103                      1-  650     	MOVIA	0x03
                                    1-  651     	BANKSEL	r0x1033
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 04rr                      1-  652     	SUBAR	r0x1033,W
     0046 0803                      1-  653     	BTRSS	STATUS,0
                                    1-  654     	MGOTO	_02015_DS_
     0047 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  655     	.line	225, "main.c"; 	indicator_light_mode = 0;
                                    1-  656     	BANKSEL	_indicator_light_mode
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 02rr                      1-  657     	CLRR	_indicator_light_mode
                                    1-  658     	MGOTO	_02015_DS_
     004A 3rrr                      3-   62 m1      LGOTO rom_address
     004B                           1-  659     _02014_DS_:
                                    1-  660     	.line	231, "main.c"; 	if (++respiration_lamp_series >= CONST_RESPIRATION_LAMP_SERIES)
                                    1-  661     	BANKSEL	_isr_respiration_lamp_series_65536_5
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 05rr                      1-  662     	INCR	_isr_respiration_lamp_series_65536_5,F
                                    1-  663     ;;unsigned compare: left < lit(0x50=80), size=1
     004D 2150                      1-  664     	MOVIA	0x50
     004E 04rr                      1-  665     	SUBAR	_isr_respiration_lamp_series_65536_5,W
     004F 0803                      1-  666     	BTRSS	STATUS,0
                                    1-  667     	MGOTO	_02015_DS_
     0050 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  668     	.line	233, "main.c"; 	respiration_lamp_series = CONST_RESPIRATION_LAMP_SERIES;
     0051 2150                      1-  669     	MOVIA	0x50
     0052 00rr                      1-  670     	MOVAR	_isr_respiration_lamp_series_65536_5
                                    1-  671     	.line	234, "main.c"; 	bFlag_inc_or_dec = 1;
                                    1-  672     	BANKSEL	_vFlag_1
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 18rr                      1-  673     	BSR	_vFlag_1,1
     0055                           1-  674     _02015_DS_:
                                    1-  675     	.line	238, "main.c"; 	led_lamp = RESPIRATION_LAMP_TABLE[respiration_lamp_series];
                                    1-  676     	BANKSEL	_isr_respiration_lamp_series_65536_5
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 01rr                      1-  677     	MOVR	_isr_respiration_lamp_series_65536_5,W
     0057 25rr                      1-  678     	ADDIA	(_RESPIRATION_LAMP_TABLE + 0)
                                    1-  679     	BANKSEL	r0x1033
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 00rr                      1-  680     	MOVAR	r0x1033
     005A 21rr                      1-  681     	MOVIA	((_RESPIRATION_LAMP_TABLE + 0) >> 8) & 0xff
     005B 2600                      1-  682     	ADCIA	0x00
                                    1-  683     	BANKSEL	r0x1034
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 00rr                      1-  684     	MOVAR	r0x1034
                                    1-  685     	BANKSEL	r0x1033
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 01rr                      1-  686     	MOVR	r0x1033,W
     0060 00rr                      1-  687     	MOVAR	STK01
                                    1-  688     	BANKSEL	r0x1034
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 01rr                      1-  689     	MOVR	r0x1034,W
     0063 00rr                      1-  690     	MOVAR	STK00
     0064 2180                      1-  691     	MOVIA	0x80
                                    1-  692     	MCALL	__gptrget1
     0065 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  693     	BANKSEL	_isr_led_lamp_65536_5
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 00rr                      1-  694     	MOVAR	_isr_led_lamp_65536_5
     0068                           1-  695     _02017_DS_:
                                    1-  696     	.line	241, "main.c"; 	if (respiration_lamp_timer >= led_lamp)
                                    1-  697     	BANKSEL	_isr_led_lamp_65536_5
     0068 rrrr                      3-  109 m1      .banksel ram_address
     0069 01rr                      1-  698     	MOVR	_isr_led_lamp_65536_5,W
                                    1-  699     	BANKSEL	_respiration_lamp_timer
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 04rr                      1-  700     	SUBAR	_respiration_lamp_timer,W
     006C 0803                      1-  701     	BTRSS	STATUS,0
                                    1-  702     	MGOTO	_02025_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  703     	.line	243, "main.c"; 	P_LED_R_OFF;
     006E 1Err                      1-  704     	BCR	_PORTBbits,4
                                    1-  705     	.line	244, "main.c"; 	P_LED_G_OFF;
     006F 1Drr                      1-  706     	BCR	_PORTBbits,3
                                    1-  707     	.line	245, "main.c"; 	P_LED_B_OFF; // white led
     0070 1Drr                      1-  708     	BCR	_PORTBbits,2
                                    1-  709     	MGOTO	_02030_DS_
     0071 3rrr                      3-   62 m1      LGOTO rom_address
     0072                           1-  710     _02025_DS_:
                                    1-  711     	.line	249, "main.c"; 	if (0x01 == indicator_light_mode)
                                    1-  712     	BANKSEL	_indicator_light_mode
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 01rr                      1-  713     	MOVR	_indicator_light_mode,W
     0074 2401                      1-  714     	XORIA	0x01
     0075 0903                      1-  715     	BTRSS	STATUS,2
                                    1-  716     	MGOTO	_02022_DS_
     0076 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  717     	.line	251, "main.c"; 	P_LED_B_ON; // white
     0077 19rr                      1-  718     	BSR	_PORTBbits,2
                                    1-  719     	MGOTO	_02030_DS_
     0078 3rrr                      3-   62 m1      LGOTO rom_address
     0079                           1-  720     _02022_DS_:
                                    1-  721     	.line	253, "main.c"; 	else if (0x02 == indicator_light_mode)
                                    1-  722     	BANKSEL	_indicator_light_mode
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 01rr                      1-  723     	MOVR	_indicator_light_mode,W
     007B 2402                      1-  724     	XORIA	0x02
     007C 0903                      1-  725     	BTRSS	STATUS,2
                                    1-  726     	MGOTO	_02019_DS_
     007D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  727     	.line	255, "main.c"; 	P_LED_G_ON; // green
     007E 19rr                      1-  728     	BSR	_PORTBbits,3
                                    1-  729     	MGOTO	_02030_DS_
     007F 3rrr                      3-   62 m1      LGOTO rom_address
     0080                           1-  730     _02019_DS_:
                                    1-  731     	.line	259, "main.c"; 	P_LED_R_ON; // orange
     0080 1Arr                      1-  732     	BSR	_PORTBbits,4
     0081                           1-  733     _02030_DS_:
                                    1-  734     	.line	265, "main.c"; 	if (INTFbits.PABIF)
     0081 08rr                      1-  735     	BTRSS	_INTFbits,1
                                    1-  736     	MGOTO	_02033_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  737     	.line	267, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     0083 21FD                      1-  738     	MOVIA	0xfd
     0084 00rr                      1-  739     	MOVAR	(_INTFbits + 0)
     0085                           1-  740     _02033_DS_:
                                    1-  741     	.line	269, "main.c"; 	}
                                    1-  742     	BANKSEL	___sdcc_saved_stk01
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 01rr                      1-  743     	MOVR	___sdcc_saved_stk01,W
     0087 00rr                      1-  744     	MOVAR	STK01
                                    1-  745     	BANKSEL	___sdcc_saved_stk00
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 01rr                      1-  746     	MOVR	___sdcc_saved_stk00,W
     008A 00rr                      1-  747     	MOVAR	STK00
                                    1-  748     	BANKSEL	___sdcc_saved_fsr
     008B rrrr                      3-  109 m1      .banksel ram_address
     008C 01rr                      1-  749     	MOVR	___sdcc_saved_fsr,W
     008D 0084                      1-  750     	MOVAR	FSR
     008E 01rr                      1-  751     	MOVR	PSAVE,W
     008F 008A                      1-  752     	MOVAR	PCHBUF
     0090 0283                      1-  753     	CLRR	STATUS
     0091 15rr                      1-  754     	SWAPR	SSAVE,W
     0092 0083                      1-  755     	MOVAR	STATUS
     0093 15rr                      1-  756     	SWAPR	WSAVE,F
     0094 15rr                      1-  757     	SWAPR	WSAVE,W
     0095                           1-  758     END_OF_INTERRUPT:
     0095 0011                      1-  759     	RETIE	
                                    1-  761     ;--------------------------------------------------------
                                    1-  762     ; code
                                    1-  763     ;--------------------------------------------------------
                                    1-  764     ; code_main	code
                                    1-  765     ;***
                                    1-  766     ;  pBlock Stats: dbName = M
                                    1-  767     ;***
                                    1-  768     ;has an exit
                                    1-  769     ;functions called:
                                    1-  770     ;   _gpioKeyScan
                                    1-  771     ;   _get_p_ext_int_status
                                    1-  772     ;   _is_chg_or_dischg
                                    1-  773     ;   _get_cap
                                    1-  774     ;   _app_display_all
                                    1-  775     ;   _gpioKeyScan
                                    1-  776     ;   _get_p_ext_int_status
                                    1-  777     ;   _is_chg_or_dischg
                                    1-  778     ;   _get_cap
                                    1-  779     ;   _app_display_all
                                    1-  780     ;1 compiler assigned register :
                                    1-  781     ;   r0x102E
                                    1-  782     ;; Starting pCode block
                                    1-  783     .segment "code"; module=main, function=_main
     0000                           1-  785     _main:
                                    1-  786     ; 2 exit points
                                    1-  787     	.line	1346, "main.c"; 	DISI();
     0000 0013                      1-  788     	DISI
                                    1-  789     	.line	1348, "main.c"; 	BPHCON = (unsigned char)~C_PB0_PHB; // Enable PB1 Pull-High resistor
     0001 21FE                      1-  790     	MOVIA	0xfe
     0002 00rr                      1-  791     	MOVAR	_BPHCON
                                    1-  792     	.line	1349, "main.c"; 	BWUCON = C_PB0_Wakeup;              // Enable PB1 input change wakeup function
     0003 2101                      1-  793     	MOVIA	0x01
     0004 00rr                      1-  794     	MOVAR	_BWUCON
                                    1-  795     	.line	1351, "main.c"; 	IOSTA = 0xFF;
     0005 21FF                      1-  796     	MOVIA	0xff
     0006 000r                      1-  797     	IOST	_IOSTA
                                    1-  798     	.line	1352, "main.c"; 	IOSTB = 0xFF;
     0007 000r                      1-  799     	IOST	_IOSTB
                                    1-  800     	.line	1354, "main.c"; 	PORTA = 0x00; // PORTB data buffer=0x00
     0008 02rr                      1-  801     	CLRR	_PORTA
                                    1-  802     	.line	1355, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1-  803     	CLRR	_PORTB
                                    1-  804     	.line	1357, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     000A 2102                      1-  805     	MOVIA	0x02
     000B 00rr                      1-  806     	MOVAR	_INTE
                                    1-  807     	.line	1358, "main.c"; 	INTF = 0x00;         // Clear all interrupt flags
     000C 02rr                      1-  808     	CLRR	_INTF
                                    1-  809     	.line	1361, "main.c"; 	OSCCR = C_FLOSC_Sel; // OSCCR[0]=0 , FOSC is Low-frequency oscillation (FLOSC)
     000D 0200                      1-  810     	CLRA	
     000E 00rr                      1-  812     	SFUN	_OSCCR
     000F 0000                      1-  813     	NOP	
                                    1-  814     	.line	1364, "main.c"; 	OSCCR = C_FHOSC_Sel; // OSCCR[0]=1 , FOSC is high-frequency oscillation (FHOSC)
     0010 2101                      1-  815     	MOVIA	0x01
     0011 00rr                      1-  817     	SFUN	_OSCCR
     0012 0000                      1-  818     	NOP	
                                    1-  819     	.line	1379, "main.c"; 	PCON1 = 0x00; // Disable Timer0
     0013 0200                      1-  820     	CLRA	
     0014 000r                      1-  821     	IOST	_PCON1
                                    1-  822     	.line	1382, "main.c"; 	T0MD = 0x0F; // 8M,2T  Prescaler0 to wdt,
     0015 210F                      1-  823     	MOVIA	0x0f
     0016 0003                      1-  824     	T0MD	
                                    1-  825     	.line	1391, "main.c"; 	INTE = 0x01; // Timer0 overflow interrupt enable bit
     0017 2101                      1-  826     	MOVIA	0x01
     0018 00rr                      1-  827     	MOVAR	_INTE
                                    1-  828     	.line	1394, "main.c"; 	PCON = 0xC8; //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0019 21C8                      1-  829     	MOVIA	0xc8
     001A 00rr                      1-  830     	MOVAR	_PCON
                                    1-  831     	.line	1396, "main.c"; 	PCON1 = 0x01; //  C_TMR0_En;                          // Enable Timer0
     001B 2101                      1-  832     	MOVIA	0x01
     001C 000r                      1-  833     	IOST	_PCON1
                                    1-  834     	.line	1397, "main.c"; 	ENI();
     001D 0004                      1-  835     	ENI
                                    1-  836     	.line	1399, "main.c"; 	delaySleepTime = CONST_DELAY_SLEEP_TIME;
     001E 2114                      1-  837     	MOVIA	0x14
                                    1-  838     	BANKSEL	_delaySleepTime
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1-  839     	MOVAR	_delaySleepTime
                                    1-  840     	.line	1400, "main.c"; 	bFlag_power_on = 1;
                                    1-  841     	BANKSEL	_vFlag_1
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 1Arr                      1-  842     	BSR	_vFlag_1,4
                                    1-  843     	.line	1405, "main.c"; 	forceDispTimer = 20;
     0023 2114                      1-  844     	MOVIA	0x14
                                    1-  845     	BANKSEL	_forceDispTimer
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1-  846     	MOVAR	_forceDispTimer
                                    1-  847     	.line	1406, "main.c"; 	P_LED_R_OUTPUT;
     0026 001r                      1-  848     	IOSTR	_IOSTB
                                    1-  849     	BANKSEL	r0x102E
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1-  850     	MOVAR	r0x102E
     0029 1Err                      1-  851     	BCR	r0x102E,4
     002A 01rr                      1-  852     	MOVR	r0x102E,W
     002B 000r                      1-  853     	IOST	_IOSTB
                                    1-  854     	.line	1407, "main.c"; 	P_LED_R_OFF;
     002C 1Err                      1-  855     	BCR	_PORTBbits,4
                                    1-  856     	.line	1408, "main.c"; 	P_LED_G_OUTPUT;
     002D 001r                      1-  857     	IOSTR	_IOSTB
     002E 00rr                      1-  858     	MOVAR	r0x102E
     002F 1Drr                      1-  859     	BCR	r0x102E,3
     0030 01rr                      1-  860     	MOVR	r0x102E,W
     0031 000r                      1-  861     	IOST	_IOSTB
                                    1-  862     	.line	1409, "main.c"; 	P_LED_G_OFF;
     0032 1Drr                      1-  863     	BCR	_PORTBbits,3
                                    1-  864     	.line	1410, "main.c"; 	P_LED_B_OUTPUT;
     0033 001r                      1-  865     	IOSTR	_IOSTB
     0034 00rr                      1-  866     	MOVAR	r0x102E
     0035 1Drr                      1-  867     	BCR	r0x102E,2
     0036 01rr                      1-  868     	MOVR	r0x102E,W
     0037 000r                      1-  869     	IOST	_IOSTB
                                    1-  870     	.line	1411, "main.c"; 	P_LED_B_OFF;
     0038 1Drr                      1-  871     	BCR	_PORTBbits,2
                                    1-  872     	.line	1412, "main.c"; 	P_TEST_OUTPUT;
     0039 001r                      1-  873     	IOSTR	_IOSTA
     003A 00rr                      1-  874     	MOVAR	r0x102E
     003B 1Err                      1-  875     	BCR	r0x102E,5
     003C 01rr                      1-  876     	MOVR	r0x102E,W
     003D 000r                      1-  877     	IOST	_IOSTA
                                    1-  878     	.line	1418, "main.c"; 	displayTimer = CONST_TIMER_DISP;
     003E 2114                      1-  879     	MOVIA	0x14
                                    1-  880     	BANKSEL	_displayTimer
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1-  881     	MOVAR	_displayTimer
     0041                           1-  882     _02542_DS_:
                                    1-  883     	.line	1422, "main.c"; 	CLRWDT(); // Clear WatchDog
     0041 0002                      1-  884     	clrwdt
                                    1-  885     	.line	1423, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  886     	BANKSEL	_vFlag_0
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 08rr                      1-  887     	BTRSS	_vFlag_0,0
                                    1-  888     	MGOTO	_02542_DS_
     0044 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  889     	.line	1425, "main.c"; 	bFlag_gSysTick_Change = 0;
     0045 1Crr                      1-  890     	BCR	_vFlag_0,0
                                    1-  891     	.line	1426, "main.c"; 	gpioKeyScan();
                                    1-  892     	MCALL	_gpioKeyScan
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  893     	.line	1430, "main.c"; 	timer_slice_16ms++;
                                    1-  894     	BANKSEL	_timer_slice_16ms
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 01rr                      1-  895     	MOVR	_timer_slice_16ms,W
                                    1-  896     	BANKSEL	r0x102E
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1-  897     	MOVAR	r0x102E
     004B 05rr                      1-  898     	INCR	r0x102E,W
                                    1-  899     	BANKSEL	_timer_slice_16ms
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 00rr                      1-  900     	MOVAR	_timer_slice_16ms
                                    1-  901     	.line	1431, "main.c"; 	if (0 == (timer_slice_16ms & 0x0F))
     004E 220F                      1-  902     	ANDIA	0x0f
     004F 0903                      1-  903     	BTRSS	STATUS,2
                                    1-  904     	MGOTO	_02534_DS_
     0050 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  905     	.line	1433, "main.c"; 	get_p_ext_int_status();
                                    1-  906     	MCALL	_get_p_ext_int_status
     0051 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  907     	.line	1434, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  908     	BANKSEL	_vFlag_1
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 0Drr                      1-  909     	BTRSC	_vFlag_1,3
                                    1-  910     	.line	1436, "main.c"; 	is_chg_or_dischg();
                                    1-  911     	MCALL	_is_chg_or_dischg
     0054 2rrr                      3-   65 m1      LCALL rom_address
     0055                           1-  912     _02534_DS_:
                                    1-  913     	.line	1440, "main.c"; 	if (!timer_slice_16ms)
                                    1-  914     	BANKSEL	_timer_slice_16ms
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 01rr                      1-  915     	MOVR	_timer_slice_16ms,W
     0057 0903                      1-  916     	BTRSS	STATUS,2
                                    1-  917     	MGOTO	_02542_DS_
     0058 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  918     	.line	1442, "main.c"; 	bFlag_blink ^= 1;
     0059 2180                      1-  919     	MOVIA	0x80
                                    1-  920     	BANKSEL	_vFlag_0
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 12rr                      1-  921     	XORAR	_vFlag_0,F
                                    1-  922     	.line	1443, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1-  923     	BANKSEL	_vFlag_1
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 0Drr                      1-  924     	BTRSC	_vFlag_1,3
                                    1-  925     	.line	1445, "main.c"; 	get_cap();
                                    1-  926     	MCALL	_get_cap
     005E 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  927     	.line	1455, "main.c"; 	app_display_all();
                                    1-  928     	MCALL	_app_display_all
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  929     	MGOTO	_02542_DS_
     0060 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  930     	.line	1459, "main.c"; 	}
                                    1-  931     	RETURN	
     0061 0010                      3-   39 m1      ret
                                    1-  932     ; exit point of _main
                                    1-  934     ;***
                                    1-  935     ;  pBlock Stats: dbName = C
                                    1-  936     ;***
                                    1-  937     ;has an exit
                                    1-  938     ;; Starting pCode block
                                    1-  939     .segment "code"; module=main, function=_enterSleepMode
     0000                           1-  941     _enterSleepMode:
                                    1-  942     ; 2 exit points
                                    1-  943     	.line	1321, "main.c"; 	AWUCON = 0x00; // Disable PA input change wakeup function
     0000 02rr                      1-  944     	CLRR	_AWUCON
                                    1-  945     	.line	1323, "main.c"; 	UPDATE_REG(PORTB);  // Read PORTB Data buffer
     0001 01rr                      1-  946     	MOVR	_PORTB,F
                                    1-  947     	.line	1324, "main.c"; 	INTF = 0x00;        // Clear all interrupt flags
     0002 02rr                      1-  948     	CLRR	_INTF
                                    1-  949     	.line	1325, "main.c"; 	PCONbits.WDTEN = 0; // Disable WDT
     0003 1Frr                      1-  950     	BCR	_PCONbits,7
                                    1-  951     	.line	1327, "main.c"; 	SLEEP(); // 1. Execute instruction to enters Halt mode (from Normal mode)
     0004 0001                      1-  952     	sleep
                                    1-  953     	.line	1329, "main.c"; 	PCONbits.WDTEN = 1; // Enable WDT
     0005 1Brr                      1-  954     	BSR	_PCONbits,7
                                    1-  955     	.line	1330, "main.c"; 	PORTBbits.PB3 = 0;  // while wakeup from Halt mode then set PB3 outputs low
     0006 1Drr                      1-  956     	BCR	_PORTBbits,3
                                    1-  957     	.line	1331, "main.c"; 	INTFbits.PABIF = 0; // Clear PABIF(PortB input change interrupt flag bit)
     0007 21FD                      1-  958     	MOVIA	0xfd
     0008 00rr                      1-  959     	MOVAR	(_INTFbits + 0)
                                    1-  960     	.line	1334, "main.c"; 	UPDATE_REG(PORTB);                    // Read PORTB Data buffer
     0009 01rr                      1-  961     	MOVR	_PORTB,F
                                    1-  962     	.line	1335, "main.c"; 	INTF = 0x00;                          // Clear all interrupt flags
     000A 02rr                      1-  963     	CLRR	_INTF
                                    1-  964     	.line	1336, "main.c"; 	PCONbits.WDTEN = 0;                   // Disable WDT
     000B 1Frr                      1-  965     	BCR	_PCONbits,7
                                    1-  966     	.line	1337, "main.c"; 	OSCCR = C_Standby_Mode | C_FHOSC_Sel; // set OSCCR register to enters Standby mode (from Normal mode)
     000C 2109                      1-  967     	MOVIA	0x09
     000D 00rr                      1-  969     	SFUN	_OSCCR
     000E 0000                      1-  970     	NOP	
                                    1-  971     	.line	1338, "main.c"; 	PCONbits.WDTEN = 1;                   // Enable WDT
     000F 1Brr                      1-  972     	BSR	_PCONbits,7
                                    1-  973     	.line	1339, "main.c"; 	PORTBbits.PB3 = 1;                    // while wakeup from Standby mode then set PB3 outputs high
     0010 19rr                      1-  974     	BSR	_PORTBbits,3
                                    1-  975     	.line	1340, "main.c"; 	INTFbits.PABIF = 0;                   // Clear PABIF(PortB input change interrupt flag bit)
     0011 21FD                      1-  976     	MOVIA	0xfd
     0012 00rr                      1-  977     	MOVAR	(_INTFbits + 0)
                                    1-  978     	.line	1341, "main.c"; 	}
                                    1-  979     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1-  980     ; exit point of _enterSleepMode
                                    1-  982     ;***
                                    1-  983     ;  pBlock Stats: dbName = C
                                    1-  984     ;***
                                    1-  985     ;has an exit
                                    1-  986     ;functions called:
                                    1-  987     ;   __gptrget1
                                    1-  988     ;   __gptrget1
                                    1-  989     ;   __divuchar
                                    1-  990     ;   __moduchar
                                    1-  991     ;   __gptrget1
                                    1-  992     ;   __gptrget1
                                    1-  993     ;   __gptrget1
                                    1-  994     ;   __gptrget1
                                    1-  995     ;   __divuchar
                                    1-  996     ;   __moduchar
                                    1-  997     ;   __gptrget1
                                    1-  998     ;   __gptrget1
                                    1-  999     ;   __divuchar
                                    1- 1000     ;   __moduchar
                                    1- 1001     ;   __gptrget1
                                    1- 1002     ;   __gptrget1
                                    1- 1003     ;   __gptrget1
                                    1- 1004     ;   __gptrget1
                                    1- 1005     ;   __gptrget1
                                    1- 1006     ;   __gptrget1
                                    1- 1007     ;   __divuchar
                                    1- 1008     ;   __moduchar
                                    1- 1009     ;   __gptrget1
                                    1- 1010     ;   __gptrget1
                                    1- 1011     ;   __gptrget1
                                    1- 1012     ;   __gptrget1
                                    1- 1013     ;   __divuchar
                                    1- 1014     ;   __moduchar
                                    1- 1015     ;   __gptrget1
                                    1- 1016     ;   __gptrget1
                                    1- 1017     ;   __divuchar
                                    1- 1018     ;   __moduchar
                                    1- 1019     ;   __gptrget1
                                    1- 1020     ;   __gptrget1
                                    1- 1021     ;   __gptrget1
                                    1- 1022     ;   __gptrget1
                                    1- 1023     ;5 compiler assigned registers:
                                    1- 1024     ;   r0x101B
                                    1- 1025     ;   STK01
                                    1- 1026     ;   STK00
                                    1- 1027     ;   r0x101C
                                    1- 1028     ;   r0x101D
                                    1- 1029     ;; Starting pCode block
                                    1- 1030     .segment "code"; module=main, function=_app_display_all
                                    1- 1032     ;local variable name mapping:
     0000                           1- 1035     _app_display_all:
                                    1- 1036     ; 2 exit points
                                    1- 1037     	.line	1136, "main.c"; 	if (forceDispTimer)
                                    1- 1038     	BANKSEL	_forceDispTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1039     	MOVR	_forceDispTimer,W
     0002 0D03                      1- 1040     	BTRSC	STATUS,2
                                    1- 1041     	MGOTO	_02520_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1042     	.line	1138, "main.c"; 	forceDispTimer--;
     0004 01rr                      1- 1043     	MOVR	_forceDispTimer,W
                                    1- 1044     	BANKSEL	r0x101B
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1045     	MOVAR	r0x101B
     0007 06rr                      1- 1046     	DECR	r0x101B,W
                                    1- 1047     	BANKSEL	_forceDispTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1048     	MOVAR	_forceDispTimer
                                    1- 1049     	.line	1139, "main.c"; 	displayHundred = DispTable[1];
     000A 21rr                      1- 1050     	MOVIA	(_DispTable + 1)
     000B 00rr                      1- 1051     	MOVAR	STK01
     000C 21rr                      1- 1052     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     000D 00rr                      1- 1053     	MOVAR	STK00
     000E 2180                      1- 1054     	MOVIA	0x80
                                    1- 1055     	MCALL	__gptrget1
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1056     	BANKSEL	_displayHundred
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1057     	MOVAR	_displayHundred
                                    1- 1058     	.line	1141, "main.c"; 	displayHundred |= (SEG_E | SEG_D);
     0012 2118                      1- 1059     	MOVIA	0x18
     0013 11rr                      1- 1060     	IORAR	_displayHundred,F
                                    1- 1061     	.line	1142, "main.c"; 	displayDecade = DispTable[8];
     0014 21rr                      1- 1062     	MOVIA	(_DispTable + 8)
     0015 00rr                      1- 1063     	MOVAR	STK01
     0016 21rr                      1- 1064     	MOVIA	((_DispTable + 8) >> 8) & 0xff
     0017 00rr                      1- 1065     	MOVAR	STK00
     0018 2180                      1- 1066     	MOVIA	0x80
                                    1- 1067     	MCALL	__gptrget1
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1068     	BANKSEL	_displayDigit
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1069     	MOVAR	_displayDigit
                                    1- 1070     	BANKSEL	r0x101B
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1071     	MOVAR	r0x101B
                                    1- 1072     	BANKSEL	_displayDecade
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1073     	MOVAR	_displayDecade
                                    1- 1074     ;;102	MOVR	r0x101B,W
                                    1- 1075     	.line	1145, "main.c"; 	if (!forceDispTimer)
                                    1- 1076     	BANKSEL	_forceDispTimer
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1- 1077     	MOVR	_forceDispTimer,W
     0022 0903                      1- 1078     	BTRSS	STATUS,2
                                    1- 1079     	MGOTO	_02522_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1080     	.line	1147, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1081     	BANKSEL	_displayHundred
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1- 1082     	CLRR	_displayHundred
                                    1- 1083     	.line	1148, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1084     	BANKSEL	_displayDecade
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 02rr                      1- 1085     	CLRR	_displayDecade
                                    1- 1086     	.line	1149, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1087     	BANKSEL	_displayDigit
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 02rr                      1- 1088     	CLRR	_displayDigit
                                    1- 1089     	MGOTO	_02522_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
     002B                           1- 1090     _02520_DS_:
                                    1- 1091     	.line	1154, "main.c"; 	else if (bFlag_charger_on) // bFlag_charger_nbFlag_vin_plug_in
                                    1- 1092     	BANKSEL	_vFlag_1
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 0Arr                      1- 1093     	BTRSS	_vFlag_1,5
                                    1- 1094     	MGOTO	_02517_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1095     	.line	1156, "main.c"; 	underVoltageDispTimer = 0;
                                    1- 1096     	BANKSEL	_underVoltageDispTimer
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 02rr                      1- 1097     	CLRR	_underVoltageDispTimer
                                    1- 1098     	.line	1158, "main.c"; 	displayTimer = CONST_TIMER_DISP; // 拨出显示5秒
     0030 2114                      1- 1099     	MOVIA	0x14
                                    1- 1100     	BANKSEL	_displayTimer
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1101     	MOVAR	_displayTimer
                                    1- 1102     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1103     	.line	1160, "main.c"; 	if (displayData < 100) // 充电
     0033 2164                      1- 1104     	MOVIA	0x64
                                    1- 1105     	BANKSEL	_displayData
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 04rr                      1- 1106     	SUBAR	_displayData,W
     0036 0C03                      1- 1107     	BTRSC	STATUS,0
                                    1- 1108     	MGOTO	_02479_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1109     	.line	1162, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1110     	BANKSEL	_displayHundred
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 02rr                      1- 1111     	CLRR	_displayHundred
                                    1- 1112     	.line	1163, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1113     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 0Arr                      1- 1114     	BTRSS	_vFlag_0,4
                                    1- 1115     	MGOTO	_00001_DS_
     003C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1116     	.line	1165, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1117     	BANKSEL	_displayHundred
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 19rr                      1- 1118     	BSR	_displayHundred,3
     003F                           1- 1119     _00001_DS_:
                                    1- 1120     	.line	1168, "main.c"; 	if (bFlag_blink)
                                    1- 1121     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 0Brr                      1- 1122     	BTRSS	_vFlag_0,7
                                    1- 1123     	MGOTO	_02474_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1124     	.line	1170, "main.c"; 	i = displayData / 10;
     0042 210A                      1- 1125     	MOVIA	0x0a
     0043 00rr                      1- 1126     	MOVAR	STK00
                                    1- 1127     	BANKSEL	_displayData
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1128     	MOVR	_displayData,W
                                    1- 1129     	MCALL	__divuchar
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1130     	BANKSEL	r0x101B
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 1131     	MOVAR	r0x101B
                                    1- 1132     	.line	1171, "main.c"; 	j = displayData % 10;
     0049 210A                      1- 1133     	MOVIA	0x0a
     004A 00rr                      1- 1134     	MOVAR	STK00
                                    1- 1135     	BANKSEL	_displayData
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1136     	MOVR	_displayData,W
                                    1- 1137     	MCALL	__moduchar
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1138     	BANKSEL	r0x101C
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 1139     	MOVAR	r0x101C
                                    1- 1140     	.line	1172, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1141     	BANKSEL	_displayDecade
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 02rr                      1- 1142     	CLRR	_displayDecade
                                    1- 1143     	.line	1174, "main.c"; 	if (i) // 十位是0 不显示
                                    1- 1144     	BANKSEL	r0x101B
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1145     	MOVR	r0x101B,W
     0054 0D03                      1- 1146     	BTRSC	STATUS,2
                                    1- 1147     	MGOTO	_02472_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1148     	.line	1176, "main.c"; 	displayDecade = DispTable[i];
     0056 21rr                      1- 1149     	MOVIA	(_DispTable + 0)
     0057 03rr                      1- 1150     	ADDAR	r0x101B,F
     0058 21rr                      1- 1151     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0059 2600                      1- 1152     	ADCIA	0x00
                                    1- 1153     	BANKSEL	r0x101D
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1154     	MOVAR	r0x101D
                                    1- 1155     	BANKSEL	r0x101B
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1156     	MOVR	r0x101B,W
     005E 00rr                      1- 1157     	MOVAR	STK01
                                    1- 1158     	BANKSEL	r0x101D
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1159     	MOVR	r0x101D,W
     0061 00rr                      1- 1160     	MOVAR	STK00
     0062 2180                      1- 1161     	MOVIA	0x80
                                    1- 1162     	MCALL	__gptrget1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1163     	BANKSEL	_displayDecade
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1164     	MOVAR	_displayDecade
     0066                           1- 1165     _02472_DS_:
                                    1- 1166     	.line	1179, "main.c"; 	displayDigit = DispTable[j];
     0066 21rr                      1- 1167     	MOVIA	(_DispTable + 0)
                                    1- 1168     	BANKSEL	r0x101C
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 03rr                      1- 1169     	ADDAR	r0x101C,F
     0069 21rr                      1- 1170     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     006A 2600                      1- 1171     	ADCIA	0x00
                                    1- 1172     	BANKSEL	r0x101B
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1173     	MOVAR	r0x101B
                                    1- 1174     	BANKSEL	r0x101C
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1175     	MOVR	r0x101C,W
     006F 00rr                      1- 1176     	MOVAR	STK01
                                    1- 1177     	BANKSEL	r0x101B
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1178     	MOVR	r0x101B,W
     0072 00rr                      1- 1179     	MOVAR	STK00
     0073 2180                      1- 1180     	MOVIA	0x80
                                    1- 1181     	MCALL	__gptrget1
     0074 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1182     	BANKSEL	_displayDigit
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 00rr                      1- 1183     	MOVAR	_displayDigit
                                    1- 1184     	MGOTO	_02522_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 1185     _02474_DS_:
                                    1- 1186     	.line	1183, "main.c"; 	displayDigit = DISP_ALL_OFF; // 个位闪烁 充电
                                    1- 1187     	BANKSEL	_displayDigit
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 02rr                      1- 1188     	CLRR	_displayDigit
                                    1- 1189     	MGOTO	_02522_DS_
     007A 3rrr                      3-   62 m1      LGOTO rom_address
     007B                           1- 1190     _02479_DS_:
                                    1- 1191     	.line	1188, "main.c"; 	displayHundred = DispTable[1];
     007B 21rr                      1- 1192     	MOVIA	(_DispTable + 1)
     007C 00rr                      1- 1193     	MOVAR	STK01
     007D 21rr                      1- 1194     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     007E 00rr                      1- 1195     	MOVAR	STK00
     007F 2180                      1- 1196     	MOVIA	0x80
                                    1- 1197     	MCALL	__gptrget1
     0080 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1198     	BANKSEL	_displayHundred
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 1199     	MOVAR	_displayHundred
                                    1- 1200     	.line	1189, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1201     	BANKSEL	_vFlag_0
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 0Arr                      1- 1202     	BTRSS	_vFlag_0,4
                                    1- 1203     	MGOTO	_00002_DS_
     0085 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1204     	.line	1191, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1205     	BANKSEL	_displayHundred
     0086 rrrr                      3-  109 m1      .banksel ram_address
     0087 19rr                      1- 1206     	BSR	_displayHundred,3
     0088                           1- 1207     _00002_DS_:
                                    1- 1208     	.line	1193, "main.c"; 	displayDecade = DispTable[0];
     0088 21rr                      1- 1209     	MOVIA	(_DispTable + 0)
     0089 00rr                      1- 1210     	MOVAR	STK01
     008A 21rr                      1- 1211     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     008B 00rr                      1- 1212     	MOVAR	STK00
     008C 2180                      1- 1213     	MOVIA	0x80
                                    1- 1214     	MCALL	__gptrget1
     008D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1215     	BANKSEL	_displayDigit
     008E rrrr                      3-  109 m1      .banksel ram_address
     008F 00rr                      1- 1216     	MOVAR	_displayDigit
                                    1- 1217     	BANKSEL	r0x101B
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 1218     	MOVAR	r0x101B
                                    1- 1219     	BANKSEL	_displayDecade
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 1220     	MOVAR	_displayDecade
                                    1- 1221     ;;101	MOVR	r0x101B,W
                                    1- 1222     	.line	1194, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1223     	MGOTO	_02522_DS_
     0094 3rrr                      3-   62 m1      LGOTO rom_address
     0095                           1- 1224     _02517_DS_:
                                    1- 1225     	.line	1201, "main.c"; 	if (underVoltageDispTimer) // 欠压关机显示
                                    1- 1226     	BANKSEL	_underVoltageDispTimer
     0095 rrrr                      3-  109 m1      .banksel ram_address
     0096 01rr                      1- 1227     	MOVR	_underVoltageDispTimer,W
     0097 0D03                      1- 1228     	BTRSC	STATUS,2
                                    1- 1229     	MGOTO	_02514_DS_
     0098 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1230     	.line	1203, "main.c"; 	underVoltageDispTimer--;
     0099 01rr                      1- 1231     	MOVR	_underVoltageDispTimer,W
                                    1- 1232     	BANKSEL	r0x101B
     009A rrrr                      3-  109 m1      .banksel ram_address
     009B 00rr                      1- 1233     	MOVAR	r0x101B
     009C 06rr                      1- 1234     	DECR	r0x101B,W
                                    1- 1235     	BANKSEL	_underVoltageDispTimer
     009D rrrr                      3-  109 m1      .banksel ram_address
     009E 00rr                      1- 1236     	MOVAR	_underVoltageDispTimer
                                    1- 1237     	.line	1204, "main.c"; 	displayTimer = 0;
                                    1- 1238     	BANKSEL	_displayTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 02rr                      1- 1239     	CLRR	_displayTimer
                                    1- 1240     	.line	1205, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1241     	BANKSEL	_displayHundred
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1- 1242     	CLRR	_displayHundred
                                    1- 1243     	.line	1206, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1244     	BANKSEL	_vFlag_0
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 0Arr                      1- 1245     	BTRSS	_vFlag_0,4
                                    1- 1246     	MGOTO	_00003_DS_
     00A5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1247     	.line	1208, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1248     	BANKSEL	_displayHundred
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 19rr                      1- 1249     	BSR	_displayHundred,3
     00A8                           1- 1250     _00003_DS_:
                                    1- 1251     	.line	1217, "main.c"; 	if (underVoltageDispTimer % 2)
                                    1- 1252     	BANKSEL	_underVoltageDispTimer
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 08rr                      1- 1253     	BTRSS	_underVoltageDispTimer,0
                                    1- 1254     	MGOTO	_02489_DS_
     00AA 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1255     	.line	1219, "main.c"; 	i = displayData / 10;
     00AB 210A                      1- 1256     	MOVIA	0x0a
     00AC 00rr                      1- 1257     	MOVAR	STK00
                                    1- 1258     	BANKSEL	_displayData
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 01rr                      1- 1259     	MOVR	_displayData,W
                                    1- 1260     	MCALL	__divuchar
     00AF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1261     	BANKSEL	r0x101B
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 00rr                      1- 1262     	MOVAR	r0x101B
                                    1- 1263     	.line	1220, "main.c"; 	j = displayData % 10;
     00B2 210A                      1- 1264     	MOVIA	0x0a
     00B3 00rr                      1- 1265     	MOVAR	STK00
                                    1- 1266     	BANKSEL	_displayData
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 01rr                      1- 1267     	MOVR	_displayData,W
                                    1- 1268     	MCALL	__moduchar
     00B6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1269     	BANKSEL	r0x101C
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 00rr                      1- 1270     	MOVAR	r0x101C
                                    1- 1271     	.line	1222, "main.c"; 	if (i)
                                    1- 1272     	BANKSEL	r0x101B
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 01rr                      1- 1273     	MOVR	r0x101B,W
     00BB 0D03                      1- 1274     	BTRSC	STATUS,2
                                    1- 1275     	MGOTO	_02484_DS_
     00BC 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1276     	.line	1224, "main.c"; 	displayDecade = DispTable[i];
     00BD 21rr                      1- 1277     	MOVIA	(_DispTable + 0)
     00BE 03rr                      1- 1278     	ADDAR	r0x101B,F
     00BF 21rr                      1- 1279     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00C0 2600                      1- 1280     	ADCIA	0x00
                                    1- 1281     	BANKSEL	r0x101D
     00C1 rrrr                      3-  109 m1      .banksel ram_address
     00C2 00rr                      1- 1282     	MOVAR	r0x101D
                                    1- 1283     	BANKSEL	r0x101B
     00C3 rrrr                      3-  109 m1      .banksel ram_address
     00C4 01rr                      1- 1284     	MOVR	r0x101B,W
     00C5 00rr                      1- 1285     	MOVAR	STK01
                                    1- 1286     	BANKSEL	r0x101D
     00C6 rrrr                      3-  109 m1      .banksel ram_address
     00C7 01rr                      1- 1287     	MOVR	r0x101D,W
     00C8 00rr                      1- 1288     	MOVAR	STK00
     00C9 2180                      1- 1289     	MOVIA	0x80
                                    1- 1290     	MCALL	__gptrget1
     00CA 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1291     	BANKSEL	_displayDecade
     00CB rrrr                      3-  109 m1      .banksel ram_address
     00CC 00rr                      1- 1292     	MOVAR	_displayDecade
                                    1- 1293     	MGOTO	_02485_DS_
     00CD 3rrr                      3-   62 m1      LGOTO rom_address
     00CE                           1- 1294     _02484_DS_:
                                    1- 1295     	.line	1228, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1296     	BANKSEL	_displayDecade
     00CE rrrr                      3-  109 m1      .banksel ram_address
     00CF 02rr                      1- 1297     	CLRR	_displayDecade
     00D0                           1- 1298     _02485_DS_:
                                    1- 1299     	.line	1231, "main.c"; 	displayDigit = DispTable[j];
     00D0 21rr                      1- 1300     	MOVIA	(_DispTable + 0)
                                    1- 1301     	BANKSEL	r0x101C
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 03rr                      1- 1302     	ADDAR	r0x101C,F
     00D3 21rr                      1- 1303     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     00D4 2600                      1- 1304     	ADCIA	0x00
                                    1- 1305     	BANKSEL	r0x101B
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 00rr                      1- 1306     	MOVAR	r0x101B
                                    1- 1307     	BANKSEL	r0x101C
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 01rr                      1- 1308     	MOVR	r0x101C,W
     00D9 00rr                      1- 1309     	MOVAR	STK01
                                    1- 1310     	BANKSEL	r0x101B
     00DA rrrr                      3-  109 m1      .banksel ram_address
     00DB 01rr                      1- 1311     	MOVR	r0x101B,W
     00DC 00rr                      1- 1312     	MOVAR	STK00
     00DD 2180                      1- 1313     	MOVIA	0x80
                                    1- 1314     	MCALL	__gptrget1
     00DE 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1315     	BANKSEL	_displayDigit
     00DF rrrr                      3-  109 m1      .banksel ram_address
     00E0 00rr                      1- 1316     	MOVAR	_displayDigit
                                    1- 1317     	MGOTO	_00004_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 1318     _02489_DS_:
                                    1- 1319     	.line	1235, "main.c"; 	if (0 == displayData)
                                    1- 1320     	BANKSEL	_displayData
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 01rr                      1- 1321     	MOVR	_displayData,W
     00E4 0903                      1- 1322     	BTRSS	STATUS,2
                                    1- 1323     	MGOTO	_00004_DS_
     00E5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1324     	.line	1237, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1325     	BANKSEL	_displayDigit
     00E6 rrrr                      3-  109 m1      .banksel ram_address
     00E7 02rr                      1- 1326     	CLRR	_displayDigit
     00E8                           1- 1327     _00004_DS_:
                                    1- 1328     	.line	1241, "main.c"; 	if (0 == underVoltageDispTimer)
                                    1- 1329     	BANKSEL	_underVoltageDispTimer
     00E8 rrrr                      3-  109 m1      .banksel ram_address
     00E9 01rr                      1- 1330     	MOVR	_underVoltageDispTimer,W
     00EA 0903                      1- 1331     	BTRSS	STATUS,2
                                    1- 1332     	MGOTO	_02522_DS_
     00EB 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1333     	.line	1243, "main.c"; 	if (displayData)
                                    1- 1334     	BANKSEL	_displayData
     00EC rrrr                      3-  109 m1      .banksel ram_address
     00ED 01rr                      1- 1335     	MOVR	_displayData,W
     00EE 0D03                      1- 1336     	BTRSC	STATUS,2
                                    1- 1337     	MGOTO	_02522_DS_
     00EF 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1338     	.line	1245, "main.c"; 	displayData--;
     00F0 01rr                      1- 1339     	MOVR	_displayData,W
                                    1- 1340     	BANKSEL	r0x101B
     00F1 rrrr                      3-  109 m1      .banksel ram_address
     00F2 00rr                      1- 1341     	MOVAR	r0x101B
     00F3 06rr                      1- 1342     	DECR	r0x101B,W
                                    1- 1343     	BANKSEL	_displayData
     00F4 rrrr                      3-  109 m1      .banksel ram_address
     00F5 00rr                      1- 1344     	MOVAR	_displayData
                                    1- 1345     	.line	1246, "main.c"; 	underVoltageDispTimer = (CONST_TIMER_DISP_UV - 1);
     00F6 210A                      1- 1346     	MOVIA	0x0a
                                    1- 1347     	BANKSEL	_underVoltageDispTimer
     00F7 rrrr                      3-  109 m1      .banksel ram_address
     00F8 00rr                      1- 1348     	MOVAR	_underVoltageDispTimer
                                    1- 1349     	MGOTO	_02522_DS_
     00F9 3rrr                      3-   62 m1      LGOTO rom_address
     00FA                           1- 1350     _02514_DS_:
                                    1- 1351     	.line	1254, "main.c"; 	else if (displayTimer)
                                    1- 1352     	BANKSEL	_displayTimer
     00FA rrrr                      3-  109 m1      .banksel ram_address
     00FB 01rr                      1- 1353     	MOVR	_displayTimer,W
     00FC 0D03                      1- 1354     	BTRSC	STATUS,2
                                    1- 1355     	MGOTO	_02511_DS_
     00FD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1356     	.line	1256, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1357     	BANKSEL	_displayHundred
     00FE rrrr                      3-  109 m1      .banksel ram_address
     00FF 02rr                      1- 1358     	CLRR	_displayHundred
                                    1- 1359     	.line	1258, "main.c"; 	displayTimer--;
                                    1- 1360     	BANKSEL	_displayTimer
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 01rr                      1- 1361     	MOVR	_displayTimer,W
                                    1- 1362     	BANKSEL	r0x101B
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 00rr                      1- 1363     	MOVAR	r0x101B
     0104 06rr                      1- 1364     	DECR	r0x101B,W
                                    1- 1365     	BANKSEL	_displayTimer
     0105 rrrr                      3-  109 m1      .banksel ram_address
     0106 00rr                      1- 1366     	MOVAR	_displayTimer
                                    1- 1367     ;;unsigned compare: left < lit(0x64=100), size=1
                                    1- 1368     	.line	1260, "main.c"; 	if (displayData < 100)
     0107 2164                      1- 1369     	MOVIA	0x64
                                    1- 1370     	BANKSEL	_displayData
     0108 rrrr                      3-  109 m1      .banksel ram_address
     0109 04rr                      1- 1371     	SUBAR	_displayData,W
     010A 0C03                      1- 1372     	BTRSC	STATUS,0
                                    1- 1373     	MGOTO	_02508_DS_
     010B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1374     	.line	1262, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1375     	BANKSEL	_displayHundred
     010C rrrr                      3-  109 m1      .banksel ram_address
     010D 02rr                      1- 1376     	CLRR	_displayHundred
                                    1- 1377     	.line	1263, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1378     	BANKSEL	_vFlag_0
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 0Arr                      1- 1379     	BTRSS	_vFlag_0,4
                                    1- 1380     	MGOTO	_00005_DS_
     0110 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1381     	.line	1265, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1382     	BANKSEL	_displayHundred
     0111 rrrr                      3-  109 m1      .banksel ram_address
     0112 19rr                      1- 1383     	BSR	_displayHundred,3
     0113                           1- 1384     _00005_DS_:
                                    1- 1385     	.line	1268, "main.c"; 	if (bFlag_blink)
                                    1- 1386     	BANKSEL	_vFlag_0
     0113 rrrr                      3-  109 m1      .banksel ram_address
     0114 0Brr                      1- 1387     	BTRSS	_vFlag_0,7
                                    1- 1388     	MGOTO	_02503_DS_
     0115 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1389     	.line	1270, "main.c"; 	i = displayData / 10;
     0116 210A                      1- 1390     	MOVIA	0x0a
     0117 00rr                      1- 1391     	MOVAR	STK00
                                    1- 1392     	BANKSEL	_displayData
     0118 rrrr                      3-  109 m1      .banksel ram_address
     0119 01rr                      1- 1393     	MOVR	_displayData,W
                                    1- 1394     	MCALL	__divuchar
     011A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1395     	BANKSEL	r0x101B
     011B rrrr                      3-  109 m1      .banksel ram_address
     011C 00rr                      1- 1396     	MOVAR	r0x101B
                                    1- 1397     	.line	1271, "main.c"; 	j = displayData % 10;
     011D 210A                      1- 1398     	MOVIA	0x0a
     011E 00rr                      1- 1399     	MOVAR	STK00
                                    1- 1400     	BANKSEL	_displayData
     011F rrrr                      3-  109 m1      .banksel ram_address
     0120 01rr                      1- 1401     	MOVR	_displayData,W
                                    1- 1402     	MCALL	__moduchar
     0121 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1403     	BANKSEL	r0x101C
     0122 rrrr                      3-  109 m1      .banksel ram_address
     0123 00rr                      1- 1404     	MOVAR	r0x101C
                                    1- 1405     	.line	1273, "main.c"; 	if (i)
                                    1- 1406     	BANKSEL	r0x101B
     0124 rrrr                      3-  109 m1      .banksel ram_address
     0125 01rr                      1- 1407     	MOVR	r0x101B,W
     0126 0D03                      1- 1408     	BTRSC	STATUS,2
                                    1- 1409     	MGOTO	_02498_DS_
     0127 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1410     	.line	1275, "main.c"; 	displayDecade = DispTable[i];
     0128 21rr                      1- 1411     	MOVIA	(_DispTable + 0)
     0129 03rr                      1- 1412     	ADDAR	r0x101B,F
     012A 21rr                      1- 1413     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     012B 2600                      1- 1414     	ADCIA	0x00
                                    1- 1415     	BANKSEL	r0x101D
     012C rrrr                      3-  109 m1      .banksel ram_address
     012D 00rr                      1- 1416     	MOVAR	r0x101D
                                    1- 1417     	BANKSEL	r0x101B
     012E rrrr                      3-  109 m1      .banksel ram_address
     012F 01rr                      1- 1418     	MOVR	r0x101B,W
     0130 00rr                      1- 1419     	MOVAR	STK01
                                    1- 1420     	BANKSEL	r0x101D
     0131 rrrr                      3-  109 m1      .banksel ram_address
     0132 01rr                      1- 1421     	MOVR	r0x101D,W
     0133 00rr                      1- 1422     	MOVAR	STK00
     0134 2180                      1- 1423     	MOVIA	0x80
                                    1- 1424     	MCALL	__gptrget1
     0135 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1425     	BANKSEL	_displayDecade
     0136 rrrr                      3-  109 m1      .banksel ram_address
     0137 00rr                      1- 1426     	MOVAR	_displayDecade
                                    1- 1427     	MGOTO	_02499_DS_
     0138 3rrr                      3-   62 m1      LGOTO rom_address
     0139                           1- 1428     _02498_DS_:
                                    1- 1429     	.line	1279, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1430     	BANKSEL	_displayDecade
     0139 rrrr                      3-  109 m1      .banksel ram_address
     013A 02rr                      1- 1431     	CLRR	_displayDecade
     013B                           1- 1432     _02499_DS_:
                                    1- 1433     	.line	1282, "main.c"; 	displayDigit = DispTable[j];
     013B 21rr                      1- 1434     	MOVIA	(_DispTable + 0)
                                    1- 1435     	BANKSEL	r0x101C
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 03rr                      1- 1436     	ADDAR	r0x101C,F
     013E 21rr                      1- 1437     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     013F 2600                      1- 1438     	ADCIA	0x00
                                    1- 1439     	BANKSEL	r0x101B
     0140 rrrr                      3-  109 m1      .banksel ram_address
     0141 00rr                      1- 1440     	MOVAR	r0x101B
                                    1- 1441     	BANKSEL	r0x101C
     0142 rrrr                      3-  109 m1      .banksel ram_address
     0143 01rr                      1- 1442     	MOVR	r0x101C,W
     0144 00rr                      1- 1443     	MOVAR	STK01
                                    1- 1444     	BANKSEL	r0x101B
     0145 rrrr                      3-  109 m1      .banksel ram_address
     0146 01rr                      1- 1445     	MOVR	r0x101B,W
     0147 00rr                      1- 1446     	MOVAR	STK00
     0148 2180                      1- 1447     	MOVIA	0x80
                                    1- 1448     	MCALL	__gptrget1
     0149 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1449     	BANKSEL	_displayDigit
     014A rrrr                      3-  109 m1      .banksel ram_address
     014B 00rr                      1- 1450     	MOVAR	_displayDigit
                                    1- 1451     	MGOTO	_02522_DS_
     014C 3rrr                      3-   62 m1      LGOTO rom_address
     014D                           1- 1452     _02503_DS_:
                                    1- 1453     	.line	1287, "main.c"; 	if (0 == displayData) // if ((0 == displayData)||(0==bat_level_buf))
                                    1- 1454     	BANKSEL	_displayData
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 01rr                      1- 1455     	MOVR	_displayData,W
     014F 0903                      1- 1456     	BTRSS	STATUS,2
                                    1- 1457     	MGOTO	_02522_DS_
     0150 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1458     	.line	1289, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1459     	BANKSEL	_displayDigit
     0151 rrrr                      3-  109 m1      .banksel ram_address
     0152 02rr                      1- 1460     	CLRR	_displayDigit
                                    1- 1461     	MGOTO	_02522_DS_
     0153 3rrr                      3-   62 m1      LGOTO rom_address
     0154                           1- 1462     _02508_DS_:
                                    1- 1463     	.line	1300, "main.c"; 	displayHundred = DispTable[1];
     0154 21rr                      1- 1464     	MOVIA	(_DispTable + 1)
     0155 00rr                      1- 1465     	MOVAR	STK01
     0156 21rr                      1- 1466     	MOVIA	((_DispTable + 1) >> 8) & 0xff
     0157 00rr                      1- 1467     	MOVAR	STK00
     0158 2180                      1- 1468     	MOVIA	0x80
                                    1- 1469     	MCALL	__gptrget1
     0159 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1470     	BANKSEL	_displayHundred
     015A rrrr                      3-  109 m1      .banksel ram_address
     015B 00rr                      1- 1471     	MOVAR	_displayHundred
                                    1- 1472     	.line	1301, "main.c"; 	if (bFlag_qc_ok)
                                    1- 1473     	BANKSEL	_vFlag_0
     015C rrrr                      3-  109 m1      .banksel ram_address
     015D 0Arr                      1- 1474     	BTRSS	_vFlag_0,4
                                    1- 1475     	MGOTO	_00006_DS_
     015E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1476     	.line	1303, "main.c"; 	displayHundred |= SEG_D;
                                    1- 1477     	BANKSEL	_displayHundred
     015F rrrr                      3-  109 m1      .banksel ram_address
     0160 19rr                      1- 1478     	BSR	_displayHundred,3
     0161                           1- 1479     _00006_DS_:
                                    1- 1480     	.line	1305, "main.c"; 	displayDecade = DispTable[0];
     0161 21rr                      1- 1481     	MOVIA	(_DispTable + 0)
     0162 00rr                      1- 1482     	MOVAR	STK01
     0163 21rr                      1- 1483     	MOVIA	((_DispTable + 0) >> 8) & 0xff
     0164 00rr                      1- 1484     	MOVAR	STK00
     0165 2180                      1- 1485     	MOVIA	0x80
                                    1- 1486     	MCALL	__gptrget1
     0166 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1487     	BANKSEL	r0x101B
     0167 rrrr                      3-  109 m1      .banksel ram_address
     0168 00rr                      1- 1488     	MOVAR	r0x101B
                                    1- 1489     	BANKSEL	_displayDecade
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 00rr                      1- 1490     	MOVAR	_displayDecade
                                    1- 1491     	.line	1306, "main.c"; 	displayDigit = DispTable[0];
                                    1- 1492     	BANKSEL	r0x101B
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 01rr                      1- 1493     	MOVR	r0x101B,W
                                    1- 1494     	BANKSEL	_displayDigit
     016D rrrr                      3-  109 m1      .banksel ram_address
     016E 00rr                      1- 1495     	MOVAR	_displayDigit
                                    1- 1496     	MGOTO	_02522_DS_
     016F 3rrr                      3-   62 m1      LGOTO rom_address
     0170                           1- 1497     _02511_DS_:
                                    1- 1498     	.line	1311, "main.c"; 	displayHundred = DISP_ALL_OFF;
                                    1- 1499     	BANKSEL	_displayHundred
     0170 rrrr                      3-  109 m1      .banksel ram_address
     0171 02rr                      1- 1500     	CLRR	_displayHundred
                                    1- 1501     	.line	1312, "main.c"; 	displayDecade = DISP_ALL_OFF;
                                    1- 1502     	BANKSEL	_displayDecade
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 02rr                      1- 1503     	CLRR	_displayDecade
                                    1- 1504     	.line	1313, "main.c"; 	displayDigit = DISP_ALL_OFF;
                                    1- 1505     	BANKSEL	_displayDigit
     0174 rrrr                      3-  109 m1      .banksel ram_address
     0175 02rr                      1- 1506     	CLRR	_displayDigit
     0176                           1- 1507     _02522_DS_:
                                    1- 1508     	.line	1316, "main.c"; 	}
                                    1- 1509     	RETURN	
     0176 0010                      3-   39 m1      ret
                                    1- 1510     ; exit point of _app_display_all
                                    1- 1512     ;***
                                    1- 1513     ;  pBlock Stats: dbName = C
                                    1- 1514     ;***
                                    1- 1515     ;has an exit
                                    1- 1516     ;functions called:
                                    1- 1517     ;   _ip55xs_read4Bytes
                                    1- 1518     ;   _ip55xs_read4Bytes
                                    1- 1519     ;1 compiler assigned register :
                                    1- 1520     ;   STK00
                                    1- 1521     ;; Starting pCode block
                                    1- 1522     .segment "code"; module=main, function=_get_cap
     0000                           1- 1524     _get_cap:
                                    1- 1525     ; 2 exit points
                                    1- 1526     	.line	1127, "main.c"; 	ip55xs_read4Bytes(0x10C0);
     0000 21C0                      1- 1527     	MOVIA	0xc0
     0001 00rr                      1- 1528     	MOVAR	STK00
     0002 2110                      1- 1529     	MOVIA	0x10
                                    1- 1530     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1531     	.line	1128, "main.c"; 	displayData = IP_DATA[0];
                                    1- 1532     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1533     	MOVR	_IP_DATA,W
                                    1- 1534     	BANKSEL	_displayData
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1535     	MOVAR	_displayData
                                    1- 1536     	.line	1129, "main.c"; 	}
                                    1- 1537     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 1538     ; exit point of _get_cap
                                    1- 1540     ;***
                                    1- 1541     ;  pBlock Stats: dbName = C
                                    1- 1542     ;***
                                    1- 1543     ;has an exit
                                    1- 1544     ;functions called:
                                    1- 1545     ;   _ip55xs_read4Bytes
                                    1- 1546     ;   _disable_breathing_mode
                                    1- 1547     ;   _enable_breathing_mode
                                    1- 1548     ;   _ip55xs_read4Bytes
                                    1- 1549     ;   _disable_breathing_mode
                                    1- 1550     ;   _enable_breathing_mode
                                    1- 1551     ;2 compiler assigned registers:
                                    1- 1552     ;   STK00
                                    1- 1553     ;   r0x1029
                                    1- 1554     ;; Starting pCode block
                                    1- 1555     .segment "code"; module=main, function=_is_chg_or_dischg
                                    1- 1557     ;local variable name mapping:
     0000                           1- 1559     _is_chg_or_dischg:
                                    1- 1560     ; 2 exit points
                                    1- 1561     	.line	1054, "main.c"; 	ip55xs_read4Bytes(0X1090);
     0000 2190                      1- 1562     	MOVIA	0x90
     0001 00rr                      1- 1563     	MOVAR	STK00
     0002 2110                      1- 1564     	MOVIA	0x10
                                    1- 1565     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1566     	.line	1056, "main.c"; 	bFlag_qc_ok = 0;
                                    1- 1567     	BANKSEL	_vFlag_0
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 1Err                      1- 1568     	BCR	_vFlag_0,4
                                    1- 1569     	.line	1058, "main.c"; 	if (bFlag_charger_on) //! 在充电状态下
                                    1- 1570     	BANKSEL	_vFlag_1
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1571     	BTRSS	_vFlag_1,5
                                    1- 1572     	MGOTO	_02456_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1573     	.line	1060, "main.c"; 	delaySleepTimer = CONST_DSL_SHORT; //! 防止充电状态MCU关5356
     0009 2103                      1- 1574     	MOVIA	0x03
                                    1- 1575     	BANKSEL	_delaySleepTimer
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1576     	MOVAR	_delaySleepTimer
                                    1- 1577     	.line	1061, "main.c"; 	reg_ip53xs = (IP_DATA[2] & BIT3);  // bit19
                                    1- 1578     	BANKSEL	_IP_DATA
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1579     	MOVR	(_IP_DATA + 2),W
                                    1- 1580     	BANKSEL	r0x1029
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1581     	MOVAR	r0x1029
     0010 09rr                      1- 1582     	BTRSS	r0x1029,3
                                    1- 1583     	MGOTO	_02444_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1584     	.line	1064, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1585     	BANKSEL	_vFlag_1
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 1Frr                      1- 1586     	BCR	_vFlag_1,6
                                    1- 1587     	.line	1065, "main.c"; 	if (++counter > 5) // CNST_FILTER_COM
                                    1- 1588     	BANKSEL	_is_chg_or_dischg_counter_65536_130
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1589     	INCR	_is_chg_or_dischg_counter_65536_130,F
                                    1- 1590     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1591     ;;unsigned compare: left >= lit(0x6=6), size=1
     0016 2106                      1- 1592     	MOVIA	0x06
     0017 04rr                      1- 1593     	SUBAR	_is_chg_or_dischg_counter_65536_130,W
     0018 0803                      1- 1594     	BTRSS	STATUS,0
                                    1- 1595     	MGOTO	_02458_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1596     	.line	1067, "main.c"; 	counter = 0;
     001A 02rr                      1- 1597     	CLRR	_is_chg_or_dischg_counter_65536_130
                                    1- 1598     	.line	1068, "main.c"; 	bFlag_charger_on = 0; //! 放电
                                    1- 1599     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 1Err                      1- 1600     	BCR	_vFlag_1,5
                                    1- 1601     	.line	1069, "main.c"; 	disable_breathing_mode();
                                    1- 1602     	MCALL	_disable_breathing_mode
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1603     	MGOTO	_02458_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1604     _02444_DS_:
                                    1- 1605     	.line	1074, "main.c"; 	counter = 0;
                                    1- 1606     	BANKSEL	_is_chg_or_dischg_counter_65536_130
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1607     	CLRR	_is_chg_or_dischg_counter_65536_130
                                    1- 1608     	.line	1076, "main.c"; 	if (IP_DATA[1] & BIT7)
                                    1- 1609     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1610     	MOVR	(_IP_DATA + 1),W
                                    1- 1611     	BANKSEL	r0x1029
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1612     	MOVAR	r0x1029
     0025 0Brr                      1- 1613     	BTRSS	r0x1029,7
                                    1- 1614     	MGOTO	_00007_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1615     	.line	1078, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1616     	BANKSEL	_vFlag_0
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 1Arr                      1- 1617     	BSR	_vFlag_0,4
     0029                           1- 1618     _00007_DS_:
                                    1- 1619     	.line	1080, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1620     	BANKSEL	_vFlag_1
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 1Brr                      1- 1621     	BSR	_vFlag_1,6
                                    1- 1622     	MGOTO	_02458_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 1623     _02456_DS_:
                                    1- 1624     	.line	1088, "main.c"; 	reg_ip53xs = (IP_DATA[1] & BIT3); // bit11
                                    1- 1625     	BANKSEL	_IP_DATA
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1626     	MOVR	(_IP_DATA + 1),W
                                    1- 1627     	BANKSEL	r0x1029
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1628     	MOVAR	r0x1029
     0030 09rr                      1- 1629     	BTRSS	r0x1029,3
                                    1- 1630     	MGOTO	_02453_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1631     	.line	1091, "main.c"; 	bFlag_chg_or_dischg = 1;
                                    1- 1632     	BANKSEL	_vFlag_1
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 1Brr                      1- 1633     	BSR	_vFlag_1,6
                                    1- 1634     	.line	1092, "main.c"; 	if (++counter > CNST_FILTER_COM) // 2次
                                    1- 1635     	BANKSEL	_is_chg_or_dischg_counter_65536_130
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 05rr                      1- 1636     	INCR	_is_chg_or_dischg_counter_65536_130,F
                                    1- 1637     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1638     ;;unsigned compare: left >= lit(0x3=3), size=1
     0036 2103                      1- 1639     	MOVIA	0x03
     0037 04rr                      1- 1640     	SUBAR	_is_chg_or_dischg_counter_65536_130,W
     0038 0803                      1- 1641     	BTRSS	STATUS,0
                                    1- 1642     	MGOTO	_02458_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1643     	.line	1094, "main.c"; 	counter = 0;
     003A 02rr                      1- 1644     	CLRR	_is_chg_or_dischg_counter_65536_130
                                    1- 1645     	.line	1095, "main.c"; 	bFlag_charger_on = 1; //! 充电
                                    1- 1646     	BANKSEL	_vFlag_1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 1Arr                      1- 1647     	BSR	_vFlag_1,5
                                    1- 1648     	.line	1096, "main.c"; 	enable_breathing_mode();
                                    1- 1649     	MCALL	_enable_breathing_mode
     003D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1650     	.line	1097, "main.c"; 	forceDispTimer = 10;
     003E 210A                      1- 1651     	MOVIA	0x0a
                                    1- 1652     	BANKSEL	_forceDispTimer
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 1653     	MOVAR	_forceDispTimer
                                    1- 1654     	MGOTO	_02458_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
     0042                           1- 1655     _02453_DS_:
                                    1- 1656     	.line	1102, "main.c"; 	counter = 0;
                                    1- 1657     	BANKSEL	_is_chg_or_dischg_counter_65536_130
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 02rr                      1- 1658     	CLRR	_is_chg_or_dischg_counter_65536_130
                                    1- 1659     	.line	1103, "main.c"; 	bFlag_chg_or_dischg = 0;
                                    1- 1660     	BANKSEL	_vFlag_1
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 1Frr                      1- 1661     	BCR	_vFlag_1,6
                                    1- 1662     	.line	1104, "main.c"; 	if (IP_DATA[3] & BIT3)
                                    1- 1663     	BANKSEL	_IP_DATA
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 1664     	MOVR	(_IP_DATA + 3),W
                                    1- 1665     	BANKSEL	r0x1029
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 00rr                      1- 1666     	MOVAR	r0x1029
     004A 09rr                      1- 1667     	BTRSS	r0x1029,3
                                    1- 1668     	MGOTO	_00008_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1669     	.line	1106, "main.c"; 	bFlag_qc_ok = 1;
                                    1- 1670     	BANKSEL	_vFlag_0
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 1Arr                      1- 1671     	BSR	_vFlag_0,4
     004E                           1- 1672     _00008_DS_:
                                    1- 1673     	.line	1109, "main.c"; 	if ((IP_DATA[2] & BIT3)) // bit19
                                    1- 1674     	BANKSEL	_IP_DATA
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1- 1675     	MOVR	(_IP_DATA + 2),W
                                    1- 1676     	BANKSEL	r0x1029
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 00rr                      1- 1677     	MOVAR	r0x1029
     0052 09rr                      1- 1678     	BTRSS	r0x1029,3
                                    1- 1679     	MGOTO	_02458_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1680     	.line	1111, "main.c"; 	displayTimer = CONST_TIMER_DISP_XSEC; //! 电量==0的时候 闪烁5秒后熄灭,反之一直显示
     0054 210A                      1- 1681     	MOVIA	0x0a
                                    1- 1682     	BANKSEL	_displayTimer
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 1683     	MOVAR	_displayTimer
     0057                           1- 1684     _02458_DS_:
                                    1- 1685     	.line	1123, "main.c"; 	}
                                    1- 1686     	RETURN	
     0057 0010                      3-   39 m1      ret
                                    1- 1687     ; exit point of _is_chg_or_dischg
                                    1- 1689     ;***
                                    1- 1690     ;  pBlock Stats: dbName = C
                                    1- 1691     ;***
                                    1- 1692     ;has an exit
                                    1- 1693     ;functions called:
                                    1- 1694     ;   _ip55xs_read4Bytes
                                    1- 1695     ;   _ip55xs_write4Bytes
                                    1- 1696     ;   _ip55xs_read4Bytes
                                    1- 1697     ;   _ip55xs_write4Bytes
                                    1- 1698     ;7 compiler assigned registers:
                                    1- 1699     ;   STK00
                                    1- 1700     ;   r0x102B
                                    1- 1701     ;   r0x102C
                                    1- 1702     ;   r0x102D
                                    1- 1703     ;   STK03
                                    1- 1704     ;   STK02
                                    1- 1705     ;   STK01
                                    1- 1706     ;; Starting pCode block
                                    1- 1707     .segment "code"; module=main, function=_get_p_ext_int_status
                                    1- 1709     ;local variable name mapping:
     0000                           1- 1711     _get_p_ext_int_status:
                                    1- 1712     ; 2 exit points
                                    1- 1713     	.line	982, "main.c"; 	if (bFlag_p_ext_int_is_high)
                                    1- 1714     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1- 1715     	BTRSS	_vFlag_1,3
                                    1- 1716     	MGOTO	_02432_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1717     	.line	984, "main.c"; 	if (!P_I2C_INT)
     0003 0Drr                      1- 1718     	BTRSC	_PORTAbits,2
                                    1- 1719     	MGOTO	_02424_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1720     	.line	986, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1721     	BANKSEL	_get_p_ext_int_status_counter_65536_120
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 05rr                      1- 1722     	INCR	_get_p_ext_int_status_counter_65536_120,F
                                    1- 1723     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1724     ;;unsigned compare: left >= lit(0x20=32), size=1
     0007 2120                      1- 1725     	MOVIA	0x20
     0008 04rr                      1- 1726     	SUBAR	_get_p_ext_int_status_counter_65536_120,W
     0009 0803                      1- 1727     	BTRSS	STATUS,0
                                    1- 1728     	MGOTO	_02434_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1729     	.line	988, "main.c"; 	counter = 0;
     000B 02rr                      1- 1730     	CLRR	_get_p_ext_int_status_counter_65536_120
                                    1- 1731     	.line	989, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1732     	BANKSEL	_vFlag_1
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Drr                      1- 1733     	BCR	_vFlag_1,3
                                    1- 1734     	.line	989, "main.c"; 	bFlag_p_ext_int_is_high = 0;
                                    1- 1735     	MGOTO	_02434_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
     000F                           1- 1736     _02424_DS_:
                                    1- 1737     	.line	1004, "main.c"; 	counter = 0;
                                    1- 1738     	BANKSEL	_get_p_ext_int_status_counter_65536_120
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 02rr                      1- 1739     	CLRR	_get_p_ext_int_status_counter_65536_120
                                    1- 1740     	MGOTO	_02434_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
     0012                           1- 1741     _02432_DS_:
                                    1- 1742     	.line	1009, "main.c"; 	if (P_I2C_INT)
     0012 09rr                      1- 1743     	BTRSS	_PORTAbits,2
                                    1- 1744     	MGOTO	_02429_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1745     	.line	1011, "main.c"; 	if (++counter > CONST_P_VIN_FILTER)
                                    1- 1746     	BANKSEL	_get_p_ext_int_status_counter_65536_120
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 05rr                      1- 1747     	INCR	_get_p_ext_int_status_counter_65536_120,F
                                    1- 1748     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1749     ;;unsigned compare: left >= lit(0x20=32), size=1
     0016 2120                      1- 1750     	MOVIA	0x20
     0017 04rr                      1- 1751     	SUBAR	_get_p_ext_int_status_counter_65536_120,W
     0018 0803                      1- 1752     	BTRSS	STATUS,0
                                    1- 1753     	MGOTO	_02434_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1754     	.line	1013, "main.c"; 	counter = 0;
     001A 02rr                      1- 1755     	CLRR	_get_p_ext_int_status_counter_65536_120
                                    1- 1756     	.line	1014, "main.c"; 	bFlag_p_ext_int_is_high = 1;
                                    1- 1757     	BANKSEL	_vFlag_1
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 19rr                      1- 1758     	BSR	_vFlag_1,3
                                    1- 1759     	.line	1016, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     001D 21C0                      1- 1760     	MOVIA	0xc0
     001E 00rr                      1- 1761     	MOVAR	STK00
     001F 2100                      1- 1762     	MOVIA	0x00
                                    1- 1763     	MCALL	_ip55xs_read4Bytes
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1764     	.line	1018, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1765     	BANKSEL	_IP_DATA
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1766     	MOVR	(_IP_DATA + 3),W
                                    1- 1767     	BANKSEL	r0x102B
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 00rr                      1- 1768     	MOVAR	r0x102B
     0025 1Drr                      1- 1769     	BCR	r0x102B,2
     0026 01rr                      1- 1770     	MOVR	r0x102B,W
                                    1- 1771     	BANKSEL	_IP_DATA
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1- 1772     	MOVAR	(_IP_DATA + 3)
                                    1- 1773     	.line	1019, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     0029 01rr                      1- 1774     	MOVR	(_IP_DATA + 3),W
                                    1- 1775     	BANKSEL	r0x102B
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1776     	MOVAR	r0x102B
     002C 1Crr                      1- 1777     	BCR	r0x102B,0
     002D 01rr                      1- 1778     	MOVR	r0x102B,W
                                    1- 1779     	BANKSEL	_IP_DATA
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1780     	MOVAR	(_IP_DATA + 3)
                                    1- 1781     	.line	1020, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0030 21rr                      1- 1782     	MOVIA	(_IP_DATA + 0)
                                    1- 1783     	BANKSEL	r0x102B
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1784     	MOVAR	r0x102B
     0033 00rr                      1- 1785     	MOVAR	STK03
     0034 2100                      1- 1786     	MOVIA	0x00
     0035 00rr                      1- 1787     	MOVAR	STK02
     0036 00rr                      1- 1788     	MOVAR	STK01
     0037 21C0                      1- 1789     	MOVIA	0xc0
     0038 00rr                      1- 1790     	MOVAR	STK00
     0039 2100                      1- 1791     	MOVIA	0x00
                                    1- 1792     	MCALL	_ip55xs_write4Bytes
     003A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1793     	.line	1021, "main.c"; 	delaySleepTimer = CNST_TIMER_DLY_SLP;
     003B 2178                      1- 1794     	MOVIA	0x78
                                    1- 1795     	BANKSEL	_delaySleepTimer
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 00rr                      1- 1796     	MOVAR	_delaySleepTimer
                                    1- 1797     	MGOTO	_02434_DS_
     003E 3rrr                      3-   62 m1      LGOTO rom_address
     003F                           1- 1798     _02429_DS_:
                                    1- 1799     	.line	1027, "main.c"; 	counter = 0;
                                    1- 1800     	BANKSEL	_get_p_ext_int_status_counter_65536_120
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 02rr                      1- 1801     	CLRR	_get_p_ext_int_status_counter_65536_120
     0041                           1- 1802     _02434_DS_:
                                    1- 1803     	.line	1030, "main.c"; 	}
                                    1- 1804     	RETURN	
     0041 0010                      3-   39 m1      ret
                                    1- 1805     ; exit point of _get_p_ext_int_status
                                    1- 1807     ;***
                                    1- 1808     ;  pBlock Stats: dbName = C
                                    1- 1809     ;***
                                    1- 1810     ;has an exit
                                    1- 1811     ;functions called:
                                    1- 1812     ;   _ip55xs_read4Bytes
                                    1- 1813     ;   _ip55xs_write4Bytes
                                    1- 1814     ;   _ip55xs_read4Bytes
                                    1- 1815     ;   _ip55xs_write4Bytes
                                    1- 1816     ;7 compiler assigned registers:
                                    1- 1817     ;   STK00
                                    1- 1818     ;   r0x102F
                                    1- 1819     ;   r0x1030
                                    1- 1820     ;   r0x1031
                                    1- 1821     ;   STK03
                                    1- 1822     ;   STK02
                                    1- 1823     ;   STK01
                                    1- 1824     ;; Starting pCode block
                                    1- 1825     .segment "code"; module=main, function=_init_ip53xs
     0000                           1- 1827     _init_ip53xs:
                                    1- 1828     ; 2 exit points
                                    1- 1829     	.line	970, "main.c"; 	ip55xs_read4Bytes(0X00C0);
     0000 21C0                      1- 1830     	MOVIA	0xc0
     0001 00rr                      1- 1831     	MOVAR	STK00
     0002 2100                      1- 1832     	MOVIA	0x00
                                    1- 1833     	MCALL	_ip55xs_read4Bytes
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1834     	.line	972, "main.c"; 	IP_DATA[3] &= ~(BIT2); // bit24,bit26
                                    1- 1835     	BANKSEL	_IP_DATA
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 01rr                      1- 1836     	MOVR	(_IP_DATA + 3),W
                                    1- 1837     	BANKSEL	r0x102F
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1838     	MOVAR	r0x102F
     0008 1Drr                      1- 1839     	BCR	r0x102F,2
     0009 01rr                      1- 1840     	MOVR	r0x102F,W
                                    1- 1841     	BANKSEL	_IP_DATA
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 00rr                      1- 1842     	MOVAR	(_IP_DATA + 3)
                                    1- 1843     	.line	973, "main.c"; 	IP_DATA[3] &= ~(BIT0);
     000C 01rr                      1- 1844     	MOVR	(_IP_DATA + 3),W
                                    1- 1845     	BANKSEL	r0x102F
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1846     	MOVAR	r0x102F
     000F 1Crr                      1- 1847     	BCR	r0x102F,0
     0010 01rr                      1- 1848     	MOVR	r0x102F,W
                                    1- 1849     	BANKSEL	_IP_DATA
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1850     	MOVAR	(_IP_DATA + 3)
                                    1- 1851     	.line	974, "main.c"; 	ip55xs_write4Bytes(0X00C0, IP_DATA);
     0013 21rr                      1- 1852     	MOVIA	(_IP_DATA + 0)
                                    1- 1853     	BANKSEL	r0x102F
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1854     	MOVAR	r0x102F
     0016 00rr                      1- 1855     	MOVAR	STK03
     0017 2100                      1- 1856     	MOVIA	0x00
     0018 00rr                      1- 1857     	MOVAR	STK02
     0019 00rr                      1- 1858     	MOVAR	STK01
     001A 21C0                      1- 1859     	MOVIA	0xc0
     001B 00rr                      1- 1860     	MOVAR	STK00
     001C 2100                      1- 1861     	MOVIA	0x00
                                    1- 1862     	MCALL	_ip55xs_write4Bytes
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1863     	.line	975, "main.c"; 	}
                                    1- 1864     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 1865     ; exit point of _init_ip53xs
                                    1- 1867     ;***
                                    1- 1868     ;  pBlock Stats: dbName = C
                                    1- 1869     ;***
                                    1- 1870     ;has an exit
                                    1- 1871     ;functions called:
                                    1- 1872     ;   _ip53xs_writeByte
                                    1- 1873     ;   _ip53xs_writeByte
                                    1- 1874     ;   _ip53xs_writeByte
                                    1- 1875     ;   _ip53xs_writeByte
                                    1- 1876     ;   _ip53xs_readByte
                                    1- 1877     ;   _ip53xs_readByte
                                    1- 1878     ;   _ip53xs_readByte
                                    1- 1879     ;   _ip53xs_readByte
                                    1- 1880     ;   _ip53xs_readByte
                                    1- 1881     ;   _ip53xs_writeByte
                                    1- 1882     ;   _ip53xs_writeByte
                                    1- 1883     ;   _ip53xs_writeByte
                                    1- 1884     ;   _ip53xs_writeByte
                                    1- 1885     ;   _ip53xs_writeByte
                                    1- 1886     ;   _ip53xs_writeByte
                                    1- 1887     ;   _ip53xs_writeByte
                                    1- 1888     ;   _ip53xs_writeByte
                                    1- 1889     ;   _ip53xs_readByte
                                    1- 1890     ;   _ip53xs_readByte
                                    1- 1891     ;   _ip53xs_readByte
                                    1- 1892     ;   _ip53xs_readByte
                                    1- 1893     ;   _ip53xs_readByte
                                    1- 1894     ;   _ip53xs_writeByte
                                    1- 1895     ;   _ip53xs_writeByte
                                    1- 1896     ;   _ip53xs_writeByte
                                    1- 1897     ;   _ip53xs_writeByte
                                    1- 1898     ;7 compiler assigned registers:
                                    1- 1899     ;   r0x1024
                                    1- 1900     ;   STK00
                                    1- 1901     ;   r0x1025
                                    1- 1902     ;   r0x1026
                                    1- 1903     ;   STK01
                                    1- 1904     ;   r0x1027
                                    1- 1905     ;   r0x1028
                                    1- 1906     ;; Starting pCode block
                                    1- 1907     .segment "code"; module=main, function=_ip55xs_read4Bytes
                                    1- 1909     ;local variable name mapping:
     0000                           1- 1913     _ip55xs_read4Bytes:
                                    1- 1914     ; 2 exit points
                                    1- 1915     	.line	923, "main.c"; 	BOOL ip55xs_read4Bytes(/*unsigned char deviceAddr,*/ unsigned int regAddr) //(unsigned char regAddr)
                                    1- 1916     	BANKSEL	r0x1024
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1917     	MOVAR	r0x1024
     0002 01rr                      1- 1918     	MOVR	STK00,W
                                    1- 1919     	BANKSEL	r0x1025
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1920     	MOVAR	r0x1025
                                    1- 1921     	.line	929, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 1922     	BANKSEL	r0x1026
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 1923     	MOVAR	r0x1026
     0007 00rr                      1- 1924     	MOVAR	STK01
     0008 2110                      1- 1925     	MOVIA	0x10
     0009 00rr                      1- 1926     	MOVAR	STK00
     000A 21EA                      1- 1927     	MOVIA	0xea
                                    1- 1928     	MCALL	_ip53xs_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1929     	.line	930, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 1930     	BANKSEL	r0x1024
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1931     	MOVR	r0x1024,W
                                    1- 1932     	BANKSEL	r0x1027
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 1933     	MOVAR	r0x1027
                                    1- 1934     	BANKSEL	r0x1025
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1- 1935     	MOVAR	r0x1025
     0012 00rr                      1- 1936     	MOVAR	STK01
     0013 2111                      1- 1937     	MOVIA	0x11
     0014 00rr                      1- 1938     	MOVAR	STK00
     0015 21EA                      1- 1939     	MOVIA	0xea
                                    1- 1940     	MCALL	_ip53xs_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1941     	.line	931, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x11);
     0017 2111                      1- 1942     	MOVIA	0x11
     0018 00rr                      1- 1943     	MOVAR	STK01
     0019 2112                      1- 1944     	MOVIA	0x12
     001A 00rr                      1- 1945     	MOVAR	STK00
     001B 21EA                      1- 1946     	MOVIA	0xea
                                    1- 1947     	MCALL	_ip53xs_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1948     	.line	932, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x11);
     001D 2111                      1- 1949     	MOVIA	0x11
     001E 00rr                      1- 1950     	MOVAR	STK01
     001F 2113                      1- 1951     	MOVIA	0x13
     0020 00rr                      1- 1952     	MOVAR	STK00
     0021 21EA                      1- 1953     	MOVIA	0xea
                                    1- 1954     	MCALL	_ip53xs_writeByte
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1955     	.line	936, "main.c"; 	do
     0023 2164                      1- 1956     	MOVIA	0x64
                                    1- 1957     	BANKSEL	r0x1024
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 1958     	MOVAR	r0x1024
     0026                           1- 1959     _02409_DS_:
                                    1- 1960     	.line	938, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0026 2100                      1- 1961     	MOVIA	0x00
     0027 00rr                      1- 1962     	MOVAR	STK00
     0028 21EA                      1- 1963     	MOVIA	0xea
                                    1- 1964     	MCALL	_ip53xs_readByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1965     	BANKSEL	r0x1027
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1966     	MOVAR	r0x1027
                                    1- 1967     	.line	939, "main.c"; 	if (0 == timer_out)
                                    1- 1968     	BANKSEL	r0x1024
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1969     	MOVR	r0x1024,W
     002E 0903                      1- 1970     	BTRSS	STATUS,2
                                    1- 1971     	MGOTO	_02407_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1972     	.line	941, "main.c"; 	return FALSE;
     0030 2100                      1- 1973     	MOVIA	0x00
                                    1- 1974     	MGOTO	_02412_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 1975     _02407_DS_:
                                    1- 1976     	.line	946, "main.c"; 	timer_out--;
                                    1- 1977     	BANKSEL	r0x1024
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 06rr                      1- 1978     	DECR	r0x1024,F
                                    1- 1979     	.line	948, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 1980     	BANKSEL	r0x1027
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 01rr                      1- 1981     	MOVR	r0x1027,W
     0036 24AA                      1- 1982     	XORIA	0xaa
     0037 0903                      1- 1983     	BTRSS	STATUS,2
                                    1- 1984     	MGOTO	_02409_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1985     	.line	949, "main.c"; 	IP_DATA[0] = ip53xs_readByte(0xEA, 0x0C);
     0039 210C                      1- 1986     	MOVIA	0x0c
     003A 00rr                      1- 1987     	MOVAR	STK00
     003B 21EA                      1- 1988     	MOVIA	0xea
                                    1- 1989     	MCALL	_ip53xs_readByte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1990     	BANKSEL	r0x1024
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 1991     	MOVAR	r0x1024
                                    1- 1992     	BANKSEL	_IP_DATA
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 1993     	MOVAR	(_IP_DATA + 0)
                                    1- 1994     	.line	950, "main.c"; 	IP_DATA[1] = ip53xs_readByte(0xEA, 0x0D);
     0041 210D                      1- 1995     	MOVIA	0x0d
     0042 00rr                      1- 1996     	MOVAR	STK00
     0043 21EA                      1- 1997     	MOVIA	0xea
                                    1- 1998     	MCALL	_ip53xs_readByte
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1999     	BANKSEL	r0x1024
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 2000     	MOVAR	r0x1024
                                    1- 2001     	BANKSEL	_IP_DATA
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2002     	MOVAR	(_IP_DATA + 1)
                                    1- 2003     	.line	951, "main.c"; 	IP_DATA[2] = ip53xs_readByte(0xEA, 0x0E);
     0049 210E                      1- 2004     	MOVIA	0x0e
     004A 00rr                      1- 2005     	MOVAR	STK00
     004B 21EA                      1- 2006     	MOVIA	0xea
                                    1- 2007     	MCALL	_ip53xs_readByte
     004C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2008     	BANKSEL	r0x1024
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 2009     	MOVAR	r0x1024
                                    1- 2010     	BANKSEL	_IP_DATA
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2011     	MOVAR	(_IP_DATA + 2)
                                    1- 2012     	.line	952, "main.c"; 	IP_DATA[3] = ip53xs_readByte(0xEA, 0x0F);
     0051 210F                      1- 2013     	MOVIA	0x0f
     0052 00rr                      1- 2014     	MOVAR	STK00
     0053 21EA                      1- 2015     	MOVIA	0xea
                                    1- 2016     	MCALL	_ip53xs_readByte
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2017     	BANKSEL	r0x1024
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 00rr                      1- 2018     	MOVAR	r0x1024
                                    1- 2019     	BANKSEL	_IP_DATA
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2020     	MOVAR	(_IP_DATA + 3)
                                    1- 2021     	.line	953, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2022     	BANKSEL	r0x1026
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 01rr                      1- 2023     	MOVR	r0x1026,W
     005B 00rr                      1- 2024     	MOVAR	STK01
     005C 2110                      1- 2025     	MOVIA	0x10
     005D 00rr                      1- 2026     	MOVAR	STK00
     005E 21EA                      1- 2027     	MOVIA	0xea
                                    1- 2028     	MCALL	_ip53xs_writeByte
     005F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2029     	.line	954, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2030     	BANKSEL	r0x1025
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2031     	MOVR	r0x1025,W
     0062 00rr                      1- 2032     	MOVAR	STK01
     0063 2111                      1- 2033     	MOVIA	0x11
     0064 00rr                      1- 2034     	MOVAR	STK00
     0065 21EA                      1- 2035     	MOVIA	0xea
                                    1- 2036     	MCALL	_ip53xs_writeByte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2037     	.line	955, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x22);
     0067 2122                      1- 2038     	MOVIA	0x22
     0068 00rr                      1- 2039     	MOVAR	STK01
     0069 2112                      1- 2040     	MOVIA	0x12
     006A 00rr                      1- 2041     	MOVAR	STK00
     006B 21EA                      1- 2042     	MOVIA	0xea
                                    1- 2043     	MCALL	_ip53xs_writeByte
     006C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2044     	.line	956, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x22);
     006D 2122                      1- 2045     	MOVIA	0x22
     006E 00rr                      1- 2046     	MOVAR	STK01
     006F 2113                      1- 2047     	MOVIA	0x13
     0070 00rr                      1- 2048     	MOVAR	STK00
     0071 21EA                      1- 2049     	MOVIA	0xea
                                    1- 2050     	MCALL	_ip53xs_writeByte
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2051     	.line	957, "main.c"; 	return TRUE;
     0073 2101                      1- 2052     	MOVIA	0x01
     0074                           1- 2053     _02412_DS_:
                                    1- 2054     	.line	958, "main.c"; 	}
                                    1- 2055     	RETURN	
     0074 0010                      3-   39 m1      ret
                                    1- 2056     ; exit point of _ip55xs_read4Bytes
                                    1- 2058     ;***
                                    1- 2059     ;  pBlock Stats: dbName = C
                                    1- 2060     ;***
                                    1- 2061     ;has an exit
                                    1- 2062     ;functions called:
                                    1- 2063     ;   _ip53xs_writeByte
                                    1- 2064     ;   _ip53xs_writeByte
                                    1- 2065     ;   _ip53xs_writeByte
                                    1- 2066     ;   _ip53xs_writeByte
                                    1- 2067     ;   _ip53xs_readByte
                                    1- 2068     ;   __gptrget1
                                    1- 2069     ;   _ip53xs_writeByte
                                    1- 2070     ;   __gptrget1
                                    1- 2071     ;   _ip53xs_writeByte
                                    1- 2072     ;   _ip53xs_writeByte
                                    1- 2073     ;   _ip53xs_writeByte
                                    1- 2074     ;   _ip53xs_readByte
                                    1- 2075     ;   __gptrget1
                                    1- 2076     ;   _ip53xs_writeByte
                                    1- 2077     ;   __gptrget1
                                    1- 2078     ;   _ip53xs_writeByte
                                    1- 2079     ;   _ip53xs_writeByte
                                    1- 2080     ;   _ip53xs_writeByte
                                    1- 2081     ;   _ip53xs_readByte
                                    1- 2082     ;   _ip53xs_writeByte
                                    1- 2083     ;   _ip53xs_writeByte
                                    1- 2084     ;   _ip53xs_writeByte
                                    1- 2085     ;   _ip53xs_writeByte
                                    1- 2086     ;   _ip53xs_readByte
                                    1- 2087     ;   __gptrget1
                                    1- 2088     ;   _ip53xs_writeByte
                                    1- 2089     ;   __gptrget1
                                    1- 2090     ;   _ip53xs_writeByte
                                    1- 2091     ;   _ip53xs_writeByte
                                    1- 2092     ;   _ip53xs_writeByte
                                    1- 2093     ;   _ip53xs_readByte
                                    1- 2094     ;   __gptrget1
                                    1- 2095     ;   _ip53xs_writeByte
                                    1- 2096     ;   __gptrget1
                                    1- 2097     ;   _ip53xs_writeByte
                                    1- 2098     ;   _ip53xs_writeByte
                                    1- 2099     ;   _ip53xs_writeByte
                                    1- 2100     ;   _ip53xs_readByte
                                    1- 2101     ;11 compiler assigned registers:
                                    1- 2102     ;   r0x1024
                                    1- 2103     ;   STK00
                                    1- 2104     ;   r0x1025
                                    1- 2105     ;   STK01
                                    1- 2106     ;   r0x1026
                                    1- 2107     ;   STK02
                                    1- 2108     ;   r0x1027
                                    1- 2109     ;   STK03
                                    1- 2110     ;   r0x1028
                                    1- 2111     ;   r0x1029
                                    1- 2112     ;   r0x102A
                                    1- 2113     ;; Starting pCode block
                                    1- 2114     .segment "code"; module=main, function=_ip55xs_write4Bytes
                                    1- 2116     ;local variable name mapping:
     0000                           1- 2121     _ip55xs_write4Bytes:
                                    1- 2122     ; 2 exit points
                                    1- 2123     	.line	854, "main.c"; 	BOOL ip55xs_write4Bytes(unsigned int regAddr, unsigned char *pdata)
                                    1- 2124     	BANKSEL	r0x1024
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2125     	MOVAR	r0x1024
     0002 01rr                      1- 2126     	MOVR	STK00,W
                                    1- 2127     	BANKSEL	r0x1025
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2128     	MOVAR	r0x1025
     0005 01rr                      1- 2129     	MOVR	STK01,W
                                    1- 2130     	BANKSEL	r0x1026
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2131     	MOVAR	r0x1026
     0008 01rr                      1- 2132     	MOVR	STK02,W
                                    1- 2133     	BANKSEL	r0x1027
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 2134     	MOVAR	r0x1027
     000B 01rr                      1- 2135     	MOVR	STK03,W
                                    1- 2136     	BANKSEL	r0x1028
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 2137     	MOVAR	r0x1028
                                    1- 2138     	.line	859, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, (unsigned char)regAddr);        // ADDR_L
                                    1- 2139     	BANKSEL	r0x1025
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 2140     	MOVR	r0x1025,W
                                    1- 2141     ;;100	MOVAR	r0x1029
     0010 00rr                      1- 2142     	MOVAR	STK01
     0011 2110                      1- 2143     	MOVIA	0x10
     0012 00rr                      1- 2144     	MOVAR	STK00
     0013 21EA                      1- 2145     	MOVIA	0xea
                                    1- 2146     	MCALL	_ip53xs_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2147     	.line	860, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, (unsigned char)(regAddr >> 8)); // ADDR_H
                                    1- 2148     	BANKSEL	r0x1024
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2149     	MOVR	r0x1024,W
                                    1- 2150     ;;99	MOVAR	r0x1029
                                    1- 2151     	BANKSEL	r0x1025
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 2152     	MOVAR	r0x1025
     0019 00rr                      1- 2153     	MOVAR	STK01
     001A 2111                      1- 2154     	MOVIA	0x11
     001B 00rr                      1- 2155     	MOVAR	STK00
     001C 21EA                      1- 2156     	MOVIA	0xea
                                    1- 2157     	MCALL	_ip53xs_writeByte
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2158     	.line	861, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, (unsigned char)0x55);
     001E 2155                      1- 2159     	MOVIA	0x55
     001F 00rr                      1- 2160     	MOVAR	STK01
     0020 2112                      1- 2161     	MOVIA	0x12
     0021 00rr                      1- 2162     	MOVAR	STK00
     0022 21EA                      1- 2163     	MOVIA	0xea
                                    1- 2164     	MCALL	_ip53xs_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2165     	.line	862, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, (unsigned char)0x55);
     0024 2155                      1- 2166     	MOVIA	0x55
     0025 00rr                      1- 2167     	MOVAR	STK01
     0026 2113                      1- 2168     	MOVIA	0x13
     0027 00rr                      1- 2169     	MOVAR	STK00
     0028 21EA                      1- 2170     	MOVIA	0xea
                                    1- 2171     	MCALL	_ip53xs_writeByte
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2172     	.line	864, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     002A 2100                      1- 2173     	MOVIA	0x00
     002B 00rr                      1- 2174     	MOVAR	STK00
     002C 21EA                      1- 2175     	MOVIA	0xea
                                    1- 2176     	MCALL	_ip53xs_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2177     	BANKSEL	r0x1025
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2178     	MOVAR	r0x1025
                                    1- 2179     	.line	866, "main.c"; 	do
     0030 2164                      1- 2180     	MOVIA	0x64
                                    1- 2181     	BANKSEL	r0x1024
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 2182     	MOVAR	r0x1024
     0033                           1- 2183     _02386_DS_:
                                    1- 2184     	.line	868, "main.c"; 	if (timer_out)
                                    1- 2185     	BANKSEL	r0x1024
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 2186     	MOVR	r0x1024,W
     0035 0D03                      1- 2187     	BTRSC	STATUS,2
                                    1- 2188     	MGOTO	_02384_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2189     	.line	870, "main.c"; 	timer_out--;
     0037 06rr                      1- 2190     	DECR	r0x1024,F
                                    1- 2191     	MGOTO	_02387_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
     0039                           1- 2192     _02384_DS_:
                                    1- 2193     	.line	874, "main.c"; 	return FALSE;
     0039 2100                      1- 2194     	MOVIA	0x00
                                    1- 2195     	MGOTO	_02401_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 2196     _02387_DS_:
                                    1- 2197     	.line	876, "main.c"; 	} while (0xAA != reg_ip55xs);
                                    1- 2198     	BANKSEL	r0x1025
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 2199     	MOVR	r0x1025,W
     003D 24AA                      1- 2200     	XORIA	0xaa
     003E 0903                      1- 2201     	BTRSS	STATUS,2
                                    1- 2202     	MGOTO	_02386_DS_
     003F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2203     	.line	877, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA0
                                    1- 2204     	BANKSEL	r0x1028
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 2205     	MOVR	r0x1028,W
     0042 00rr                      1- 2206     	MOVAR	STK01
                                    1- 2207     	BANKSEL	r0x1027
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 2208     	MOVR	r0x1027,W
     0045 00rr                      1- 2209     	MOVAR	STK00
                                    1- 2210     	BANKSEL	r0x1026
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 2211     	MOVR	r0x1026,W
                                    1- 2212     	MCALL	__gptrget1
     0048 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2213     	BANKSEL	r0x1025
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 2214     	MOVAR	r0x1025
     004B 00rr                      1- 2215     	MOVAR	STK01
     004C 2110                      1- 2216     	MOVIA	0x10
     004D 00rr                      1- 2217     	MOVAR	STK00
     004E 21EA                      1- 2218     	MOVIA	0xea
                                    1- 2219     	MCALL	_ip53xs_writeByte
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2220     	.line	878, "main.c"; 	pdata++;
                                    1- 2221     	BANKSEL	r0x1028
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 05rr                      1- 2222     	INCR	r0x1028,F
     0052 0903                      1- 2223     	BTRSS	STATUS,2
                                    1- 2224     	MGOTO	_00009_DS_
     0053 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2225     	BANKSEL	r0x1027
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 05rr                      1- 2226     	INCR	r0x1027,F
     0056                           1- 2227     _00009_DS_:
     0056 0903                      1- 2228     	BTRSS	STATUS,2
                                    1- 2229     	MGOTO	_00010_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2230     	BANKSEL	r0x1026
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 05rr                      1- 2231     	INCR	r0x1026,F
     005A                           1- 2232     _00010_DS_:
                                    1- 2233     	.line	879, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA1
                                    1- 2234     	BANKSEL	r0x1028
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 01rr                      1- 2235     	MOVR	r0x1028,W
     005C 00rr                      1- 2236     	MOVAR	STK01
                                    1- 2237     	BANKSEL	r0x1027
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 01rr                      1- 2238     	MOVR	r0x1027,W
     005F 00rr                      1- 2239     	MOVAR	STK00
                                    1- 2240     	BANKSEL	r0x1026
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 2241     	MOVR	r0x1026,W
                                    1- 2242     	MCALL	__gptrget1
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2243     	BANKSEL	r0x1025
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 00rr                      1- 2244     	MOVAR	r0x1025
     0065 00rr                      1- 2245     	MOVAR	STK01
     0066 2111                      1- 2246     	MOVIA	0x11
     0067 00rr                      1- 2247     	MOVAR	STK00
     0068 21EA                      1- 2248     	MOVIA	0xea
                                    1- 2249     	MCALL	_ip53xs_writeByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2250     	.line	881, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x66);
     006A 2166                      1- 2251     	MOVIA	0x66
     006B 00rr                      1- 2252     	MOVAR	STK01
     006C 2112                      1- 2253     	MOVIA	0x12
     006D 00rr                      1- 2254     	MOVAR	STK00
     006E 21EA                      1- 2255     	MOVIA	0xea
                                    1- 2256     	MCALL	_ip53xs_writeByte
     006F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2257     	.line	883, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x66);
     0070 2166                      1- 2258     	MOVIA	0x66
     0071 00rr                      1- 2259     	MOVAR	STK01
     0072 2113                      1- 2260     	MOVIA	0x13
     0073 00rr                      1- 2261     	MOVAR	STK00
     0074 21EA                      1- 2262     	MOVIA	0xea
                                    1- 2263     	MCALL	_ip53xs_writeByte
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2264     	.line	885, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     0076 2100                      1- 2265     	MOVIA	0x00
     0077 00rr                      1- 2266     	MOVAR	STK00
     0078 21EA                      1- 2267     	MOVIA	0xea
                                    1- 2268     	MCALL	_ip53xs_readByte
     0079 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2269     	BANKSEL	r0x1025
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 00rr                      1- 2270     	MOVAR	r0x1025
                                    1- 2271     	.line	887, "main.c"; 	do
     007C 2164                      1- 2272     	MOVIA	0x64
                                    1- 2273     	BANKSEL	r0x1024
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 2274     	MOVAR	r0x1024
     007F                           1- 2275     _02392_DS_:
                                    1- 2276     	.line	889, "main.c"; 	if (timer_out)
                                    1- 2277     	BANKSEL	r0x1024
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 01rr                      1- 2278     	MOVR	r0x1024,W
     0081 0D03                      1- 2279     	BTRSC	STATUS,2
                                    1- 2280     	MGOTO	_02390_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2281     	.line	891, "main.c"; 	timer_out--;
     0083 06rr                      1- 2282     	DECR	r0x1024,F
                                    1- 2283     	MGOTO	_02393_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2284     _02390_DS_:
                                    1- 2285     	.line	895, "main.c"; 	return FALSE;
     0085 2100                      1- 2286     	MOVIA	0x00
                                    1- 2287     	MGOTO	_02401_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 2288     _02393_DS_:
                                    1- 2289     	.line	897, "main.c"; 	} while (0x55 != reg_ip55xs);
                                    1- 2290     	BANKSEL	r0x1025
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 2291     	MOVR	r0x1025,W
     0089 2455                      1- 2292     	XORIA	0x55
     008A 0903                      1- 2293     	BTRSS	STATUS,2
                                    1- 2294     	MGOTO	_02392_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2295     	.line	899, "main.c"; 	pdata++;
                                    1- 2296     	BANKSEL	r0x1028
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 05rr                      1- 2297     	INCR	r0x1028,F
     008E 0903                      1- 2298     	BTRSS	STATUS,2
                                    1- 2299     	MGOTO	_00011_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2300     	BANKSEL	r0x1027
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 2301     	INCR	r0x1027,F
     0092                           1- 2302     _00011_DS_:
     0092 0903                      1- 2303     	BTRSS	STATUS,2
                                    1- 2304     	MGOTO	_00012_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2305     	BANKSEL	r0x1026
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 2306     	INCR	r0x1026,F
     0096                           1- 2307     _00012_DS_:
                                    1- 2308     	.line	900, "main.c"; 	ip53xs_writeByte(0xEA, 0x10, *pdata); // DATA2
                                    1- 2309     	BANKSEL	r0x1028
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 2310     	MOVR	r0x1028,W
     0098 00rr                      1- 2311     	MOVAR	STK01
                                    1- 2312     	BANKSEL	r0x1027
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 2313     	MOVR	r0x1027,W
     009B 00rr                      1- 2314     	MOVAR	STK00
                                    1- 2315     	BANKSEL	r0x1026
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 01rr                      1- 2316     	MOVR	r0x1026,W
                                    1- 2317     	MCALL	__gptrget1
     009E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2318     	BANKSEL	r0x1025
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1- 2319     	MOVAR	r0x1025
     00A1 00rr                      1- 2320     	MOVAR	STK01
     00A2 2110                      1- 2321     	MOVIA	0x10
     00A3 00rr                      1- 2322     	MOVAR	STK00
     00A4 21EA                      1- 2323     	MOVIA	0xea
                                    1- 2324     	MCALL	_ip53xs_writeByte
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2325     	.line	901, "main.c"; 	pdata++;
                                    1- 2326     	BANKSEL	r0x1028
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 05rr                      1- 2327     	INCR	r0x1028,F
     00A8 0903                      1- 2328     	BTRSS	STATUS,2
                                    1- 2329     	MGOTO	_00013_DS_
     00A9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2330     	BANKSEL	r0x1027
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 05rr                      1- 2331     	INCR	r0x1027,F
     00AC                           1- 2332     _00013_DS_:
     00AC 0903                      1- 2333     	BTRSS	STATUS,2
                                    1- 2334     	MGOTO	_00014_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2335     	BANKSEL	r0x1026
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 05rr                      1- 2336     	INCR	r0x1026,F
     00B0                           1- 2337     _00014_DS_:
                                    1- 2338     	.line	902, "main.c"; 	ip53xs_writeByte(0xEA, 0x11, *pdata); // DATA3
                                    1- 2339     	BANKSEL	r0x1028
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 01rr                      1- 2340     	MOVR	r0x1028,W
     00B2 00rr                      1- 2341     	MOVAR	STK01
                                    1- 2342     	BANKSEL	r0x1027
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 01rr                      1- 2343     	MOVR	r0x1027,W
     00B5 00rr                      1- 2344     	MOVAR	STK00
                                    1- 2345     	BANKSEL	r0x1026
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 01rr                      1- 2346     	MOVR	r0x1026,W
                                    1- 2347     	MCALL	__gptrget1
     00B8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2348     	BANKSEL	r0x1025
     00B9 rrrr                      3-  109 m1      .banksel ram_address
     00BA 00rr                      1- 2349     	MOVAR	r0x1025
     00BB 00rr                      1- 2350     	MOVAR	STK01
     00BC 2111                      1- 2351     	MOVIA	0x11
     00BD 00rr                      1- 2352     	MOVAR	STK00
     00BE 21EA                      1- 2353     	MOVIA	0xea
                                    1- 2354     	MCALL	_ip53xs_writeByte
     00BF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2355     	.line	903, "main.c"; 	ip53xs_writeByte(0xEA, 0x12, 0x77);
     00C0 2177                      1- 2356     	MOVIA	0x77
     00C1 00rr                      1- 2357     	MOVAR	STK01
     00C2 2112                      1- 2358     	MOVIA	0x12
     00C3 00rr                      1- 2359     	MOVAR	STK00
     00C4 21EA                      1- 2360     	MOVIA	0xea
                                    1- 2361     	MCALL	_ip53xs_writeByte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2362     	.line	905, "main.c"; 	ip53xs_writeByte(0xEA, 0x13, 0x77);
     00C6 2177                      1- 2363     	MOVIA	0x77
     00C7 00rr                      1- 2364     	MOVAR	STK01
     00C8 2113                      1- 2365     	MOVIA	0x13
     00C9 00rr                      1- 2366     	MOVAR	STK00
     00CA 21EA                      1- 2367     	MOVIA	0xea
                                    1- 2368     	MCALL	_ip53xs_writeByte
     00CB 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2369     	.line	907, "main.c"; 	reg_ip55xs = ip53xs_readByte(0xEA, 0x00);
     00CC 2100                      1- 2370     	MOVIA	0x00
     00CD 00rr                      1- 2371     	MOVAR	STK00
     00CE 21EA                      1- 2372     	MOVIA	0xea
                                    1- 2373     	MCALL	_ip53xs_readByte
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2374     	BANKSEL	r0x1025
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 00rr                      1- 2375     	MOVAR	r0x1025
                                    1- 2376     	.line	909, "main.c"; 	do
     00D2 2164                      1- 2377     	MOVIA	0x64
                                    1- 2378     	BANKSEL	r0x1024
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1- 2379     	MOVAR	r0x1024
     00D5                           1- 2380     _02398_DS_:
                                    1- 2381     	.line	911, "main.c"; 	if (timer_out)
                                    1- 2382     	BANKSEL	r0x1024
     00D5 rrrr                      3-  109 m1      .banksel ram_address
     00D6 01rr                      1- 2383     	MOVR	r0x1024,W
     00D7 0D03                      1- 2384     	BTRSC	STATUS,2
                                    1- 2385     	MGOTO	_02396_DS_
     00D8 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2386     	.line	913, "main.c"; 	timer_out--;
     00D9 06rr                      1- 2387     	DECR	r0x1024,F
                                    1- 2388     	MGOTO	_02399_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
     00DB                           1- 2389     _02396_DS_:
                                    1- 2390     	.line	917, "main.c"; 	return FALSE;
     00DB 2100                      1- 2391     	MOVIA	0x00
                                    1- 2392     	MGOTO	_02401_DS_
     00DC 3rrr                      3-   62 m1      LGOTO rom_address
     00DD                           1- 2393     _02399_DS_:
                                    1- 2394     	.line	919, "main.c"; 	} while (0xFF != reg_ip55xs);
                                    1- 2395     	BANKSEL	r0x1025
     00DD rrrr                      3-  109 m1      .banksel ram_address
     00DE 01rr                      1- 2396     	MOVR	r0x1025,W
     00DF 24FF                      1- 2397     	XORIA	0xff
     00E0 0903                      1- 2398     	BTRSS	STATUS,2
                                    1- 2399     	MGOTO	_02398_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2400     	.line	920, "main.c"; 	return TRUE;
     00E2 2101                      1- 2401     	MOVIA	0x01
     00E3                           1- 2402     _02401_DS_:
                                    1- 2403     	.line	921, "main.c"; 	}
                                    1- 2404     	RETURN	
     00E3 0010                      3-   39 m1      ret
                                    1- 2405     ; exit point of _ip55xs_write4Bytes
                                    1- 2407     ;***
                                    1- 2408     ;  pBlock Stats: dbName = C
                                    1- 2409     ;***
                                    1- 2410     ;has an exit
                                    1- 2411     ;functions called:
                                    1- 2412     ;   _i2c_start
                                    1- 2413     ;   _i2c_writeByte
                                    1- 2414     ;   _i2c_stop
                                    1- 2415     ;   _i2c_writeByte
                                    1- 2416     ;   _i2c_stop
                                    1- 2417     ;   _i2c_start
                                    1- 2418     ;   _i2c_writeByte
                                    1- 2419     ;   _i2c_stop
                                    1- 2420     ;   _i2c_readByte
                                    1- 2421     ;   _i2c_send_nack
                                    1- 2422     ;   _i2c_stop
                                    1- 2423     ;   _i2c_start
                                    1- 2424     ;   _i2c_writeByte
                                    1- 2425     ;   _i2c_stop
                                    1- 2426     ;   _i2c_writeByte
                                    1- 2427     ;   _i2c_stop
                                    1- 2428     ;   _i2c_start
                                    1- 2429     ;   _i2c_writeByte
                                    1- 2430     ;   _i2c_stop
                                    1- 2431     ;   _i2c_readByte
                                    1- 2432     ;   _i2c_send_nack
                                    1- 2433     ;   _i2c_stop
                                    1- 2434     ;5 compiler assigned registers:
                                    1- 2435     ;   r0x1020
                                    1- 2436     ;   STK00
                                    1- 2437     ;   r0x1021
                                    1- 2438     ;   r0x1022
                                    1- 2439     ;   r0x1023
                                    1- 2440     ;; Starting pCode block
                                    1- 2441     .segment "code"; module=main, function=_ip53xs_readByte
                                    1- 2443     ;local variable name mapping:
     0000                           1- 2447     _ip53xs_readByte:
                                    1- 2448     ; 2 exit points
                                    1- 2449     	.line	819, "main.c"; 	unsigned char ip53xs_readByte(unsigned char deviceAddr, unsigned char regAddr) //(unsigned char regAddr)
                                    1- 2450     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2451     	MOVAR	r0x1020
     0002 01rr                      1- 2452     	MOVR	STK00,W
                                    1- 2453     	BANKSEL	r0x1021
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2454     	MOVAR	r0x1021
                                    1- 2455     	.line	821, "main.c"; 	unsigned char readByte = 0;
                                    1- 2456     	BANKSEL	r0x1022
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 2457     	CLRR	r0x1022
                                    1- 2458     	.line	822, "main.c"; 	if (P_I2C_INT)
     0007 09rr                      1- 2459     	BTRSS	_PORTAbits,2
                                    1- 2460     	MGOTO	_02377_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2461     	.line	824, "main.c"; 	i2c_start();
                                    1- 2462     	MCALL	_i2c_start
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2463     	.line	826, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2464     	BANKSEL	r0x1020
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1- 2465     	MOVR	r0x1020,W
                                    1- 2466     	MCALL	_i2c_writeByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2467     	BANKSEL	r0x1023
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2468     	MOVAR	r0x1023
     000F 01rr                      1- 2469     	MOVR	r0x1023,W
     0010 0D03                      1- 2470     	BTRSC	STATUS,2
                                    1- 2471     	MGOTO	_02371_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2472     	.line	828, "main.c"; 	i2c_stop();
                                    1- 2473     	MCALL	_i2c_stop
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2474     	.line	829, "main.c"; 	return FALSE;
     0013 2100                      1- 2475     	MOVIA	0x00
                                    1- 2476     	MGOTO	_02378_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
     0015                           1- 2477     _02371_DS_:
                                    1- 2478     	.line	832, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2479     	BANKSEL	r0x1021
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 2480     	MOVR	r0x1021,W
                                    1- 2481     	MCALL	_i2c_writeByte
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2482     	BANKSEL	r0x1021
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2483     	MOVAR	r0x1021
     001A 01rr                      1- 2484     	MOVR	r0x1021,W
     001B 0D03                      1- 2485     	BTRSC	STATUS,2
                                    1- 2486     	MGOTO	_02373_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2487     	.line	834, "main.c"; 	i2c_stop();
                                    1- 2488     	MCALL	_i2c_stop
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2489     	.line	835, "main.c"; 	return FALSE;
     001E 2100                      1- 2490     	MOVIA	0x00
                                    1- 2491     	MGOTO	_02378_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2492     _02373_DS_:
                                    1- 2493     	.line	838, "main.c"; 	i2c_start();
                                    1- 2494     	MCALL	_i2c_start
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2495     	.line	840, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 2496     	BANKSEL	r0x1020
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 18rr                      1- 2497     	BSR	r0x1020,0
     0023 01rr                      1- 2498     	MOVR	r0x1020,W
                                    1- 2499     	MCALL	_i2c_writeByte
     0024 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2500     	BANKSEL	r0x1020
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 2501     	MOVAR	r0x1020
     0027 01rr                      1- 2502     	MOVR	r0x1020,W
     0028 0D03                      1- 2503     	BTRSC	STATUS,2
                                    1- 2504     	MGOTO	_02375_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2505     	.line	842, "main.c"; 	i2c_stop();
                                    1- 2506     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2507     	.line	843, "main.c"; 	return FALSE;
     002B 2100                      1- 2508     	MOVIA	0x00
                                    1- 2509     	MGOTO	_02378_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 2510     _02375_DS_:
                                    1- 2511     	.line	846, "main.c"; 	readByte = i2c_readByte();
                                    1- 2512     	MCALL	_i2c_readByte
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2513     	BANKSEL	r0x1022
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 2514     	MOVAR	r0x1022
                                    1- 2515     	.line	847, "main.c"; 	i2c_send_nack();
                                    1- 2516     	MCALL	_i2c_send_nack
     0030 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2517     	.line	848, "main.c"; 	i2c_stop();
                                    1- 2518     	MCALL	_i2c_stop
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1- 2519     _02377_DS_:
                                    1- 2520     	.line	851, "main.c"; 	return readByte;
                                    1- 2521     	BANKSEL	r0x1022
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 2522     	MOVR	r0x1022,W
     0034                           1- 2523     _02378_DS_:
                                    1- 2524     	.line	852, "main.c"; 	}
                                    1- 2525     	RETURN	
     0034 0010                      3-   39 m1      ret
                                    1- 2526     ; exit point of _ip53xs_readByte
                                    1- 2528     ;***
                                    1- 2529     ;  pBlock Stats: dbName = C
                                    1- 2530     ;***
                                    1- 2531     ;has an exit
                                    1- 2532     ;functions called:
                                    1- 2533     ;   _i2c_start
                                    1- 2534     ;   _i2c_writeByte
                                    1- 2535     ;   _i2c_stop
                                    1- 2536     ;   _i2c_writeByte
                                    1- 2537     ;   _i2c_stop
                                    1- 2538     ;   _i2c_writeByte
                                    1- 2539     ;   _i2c_stop
                                    1- 2540     ;   _i2c_stop
                                    1- 2541     ;   _i2c_start
                                    1- 2542     ;   _i2c_writeByte
                                    1- 2543     ;   _i2c_stop
                                    1- 2544     ;   _i2c_writeByte
                                    1- 2545     ;   _i2c_stop
                                    1- 2546     ;   _i2c_writeByte
                                    1- 2547     ;   _i2c_stop
                                    1- 2548     ;   _i2c_stop
                                    1- 2549     ;5 compiler assigned registers:
                                    1- 2550     ;   r0x1020
                                    1- 2551     ;   STK00
                                    1- 2552     ;   r0x1021
                                    1- 2553     ;   STK01
                                    1- 2554     ;   r0x1022
                                    1- 2555     ;; Starting pCode block
                                    1- 2556     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 2558     ;local variable name mapping:
     0000                           1- 2562     _ip53xs_writeByte:
                                    1- 2563     ; 2 exit points
                                    1- 2564     	.line	789, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 2565     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2566     	MOVAR	r0x1020
     0002 01rr                      1- 2567     	MOVR	STK00,W
                                    1- 2568     	BANKSEL	r0x1021
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2569     	MOVAR	r0x1021
     0005 01rr                      1- 2570     	MOVR	STK01,W
                                    1- 2571     	BANKSEL	r0x1022
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 2572     	MOVAR	r0x1022
                                    1- 2573     	.line	791, "main.c"; 	if (P_I2C_INT)
     0008 09rr                      1- 2574     	BTRSS	_PORTAbits,2
                                    1- 2575     	MGOTO	_02364_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2576     	.line	793, "main.c"; 	i2c_start();
                                    1- 2577     	MCALL	_i2c_start
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2578     	.line	795, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 2579     	BANKSEL	r0x1020
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2580     	MOVR	r0x1020,W
                                    1- 2581     	MCALL	_i2c_writeByte
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2582     	BANKSEL	r0x1020
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 2583     	MOVAR	r0x1020
     0010 01rr                      1- 2584     	MOVR	r0x1020,W
     0011 0D03                      1- 2585     	BTRSC	STATUS,2
                                    1- 2586     	MGOTO	_02358_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2587     	.line	797, "main.c"; 	i2c_stop();
                                    1- 2588     	MCALL	_i2c_stop
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2589     	.line	798, "main.c"; 	return FALSE;
     0014 2100                      1- 2590     	MOVIA	0x00
                                    1- 2591     	MGOTO	_02365_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2592     _02358_DS_:
                                    1- 2593     	.line	801, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 2594     	BANKSEL	r0x1021
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 2595     	MOVR	r0x1021,W
                                    1- 2596     	MCALL	_i2c_writeByte
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2597     	BANKSEL	r0x1020
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2598     	MOVAR	r0x1020
     001B 01rr                      1- 2599     	MOVR	r0x1020,W
     001C 0D03                      1- 2600     	BTRSC	STATUS,2
                                    1- 2601     	MGOTO	_02360_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2602     	.line	803, "main.c"; 	i2c_stop();
                                    1- 2603     	MCALL	_i2c_stop
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2604     	.line	804, "main.c"; 	return FALSE;
     001F 2100                      1- 2605     	MOVIA	0x00
                                    1- 2606     	MGOTO	_02365_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2607     _02360_DS_:
                                    1- 2608     	.line	807, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 2609     	BANKSEL	r0x1022
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 2610     	MOVR	r0x1022,W
                                    1- 2611     	MCALL	_i2c_writeByte
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2612     	BANKSEL	r0x1020
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2613     	MOVAR	r0x1020
     0026 01rr                      1- 2614     	MOVR	r0x1020,W
     0027 0D03                      1- 2615     	BTRSC	STATUS,2
                                    1- 2616     	MGOTO	_02362_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2617     	.line	809, "main.c"; 	i2c_stop();
                                    1- 2618     	MCALL	_i2c_stop
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2619     	.line	810, "main.c"; 	return FALSE;
     002A 2100                      1- 2620     	MOVIA	0x00
                                    1- 2621     	MGOTO	_02365_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
     002C                           1- 2622     _02362_DS_:
                                    1- 2623     	.line	813, "main.c"; 	i2c_stop();
                                    1- 2624     	MCALL	_i2c_stop
     002C 2rrr                      3-   65 m1      LCALL rom_address
     002D                           1- 2625     _02364_DS_:
                                    1- 2626     	.line	816, "main.c"; 	return TRUE;
     002D 2101                      1- 2627     	MOVIA	0x01
     002E                           1- 2628     _02365_DS_:
                                    1- 2629     	.line	817, "main.c"; 	}
                                    1- 2630     	RETURN	
     002E 0010                      3-   39 m1      ret
                                    1- 2631     ; exit point of _ip53xs_writeByte
                                    1- 2633     ;***
                                    1- 2634     ;  pBlock Stats: dbName = C
                                    1- 2635     ;***
                                    1- 2636     ;has an exit
                                    1- 2637     ;functions called:
                                    1- 2638     ;   __dly_us
                                    1- 2639     ;   __dly_us
                                    1- 2640     ;   __dly_us
                                    1- 2641     ;   __dly_us
                                    1- 2642     ;3 compiler assigned registers:
                                    1- 2643     ;   r0x101C
                                    1- 2644     ;   r0x101D
                                    1- 2645     ;   r0x101E
                                    1- 2646     ;; Starting pCode block
                                    1- 2647     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2649     ;local variable name mapping:
     0000                           1- 2652     _i2c_readByte:
                                    1- 2653     ; 2 exit points
                                    1- 2654     	.line	763, "main.c"; 	unsigned char readByte = 0;
                                    1- 2655     	BANKSEL	r0x101C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2656     	CLRR	r0x101C
                                    1- 2657     	.line	765, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Err                      1- 2658     	BCR	_PORTAbits,4
                                    1- 2659     	.line	766, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2660     	IOSTR	_IOSTA
                                    1- 2661     	BANKSEL	r0x101D
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2662     	MOVAR	r0x101D
     0006 19rr                      1- 2663     	BSR	r0x101D,3
     0007 01rr                      1- 2664     	MOVR	r0x101D,W
     0008 000r                      1- 2665     	IOST	_IOSTA
                                    1- 2666     	.line	768, "main.c"; 	while (i--)
     0009 2108                      1- 2667     	MOVIA	0x08
     000A 00rr                      1- 2668     	MOVAR	r0x101D
     000B                           1- 2669     _02350_DS_:
                                    1- 2670     	BANKSEL	r0x101D
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2671     	MOVR	r0x101D,W
                                    1- 2672     	BANKSEL	r0x101E
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2673     	MOVAR	r0x101E
                                    1- 2674     	BANKSEL	r0x101D
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2675     	DECR	r0x101D,F
                                    1- 2676     	BANKSEL	r0x101E
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2677     	MOVR	r0x101E,W
     0013 0D03                      1- 2678     	BTRSC	STATUS,2
                                    1- 2679     	MGOTO	_02352_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2680     	.line	771, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 1Arr                      1- 2681     	BSR	_PORTAbits,4
                                    1- 2682     	.line	772, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2683     	MOVIA	0x00
                                    1- 2684     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2685     	.line	773, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2686     	BCR	STATUS,0
                                    1- 2687     	BANKSEL	r0x101C
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2688     	RLR	r0x101C,F
                                    1- 2689     	.line	775, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2690     	BTRSC	_PORTAbits,3
                                    1- 2691     	.line	777, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2692     	BSR	r0x101C,0
                                    1- 2693     	.line	780, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Err                      1- 2694     	BCR	_PORTAbits,4
                                    1- 2695     	.line	781, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2696     	MOVIA	0x00
                                    1- 2697     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2698     	MGOTO	_02350_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2699     _02352_DS_:
                                    1- 2700     	.line	785, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2701     	IOSTR	_IOSTA
                                    1- 2702     	BANKSEL	r0x101D
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2703     	MOVAR	r0x101D
     0024 1Drr                      1- 2704     	BCR	r0x101D,3
     0025 01rr                      1- 2705     	MOVR	r0x101D,W
     0026 000r                      1- 2706     	IOST	_IOSTA
                                    1- 2707     	.line	786, "main.c"; 	return readByte;  // 返回数据
                                    1- 2708     	BANKSEL	r0x101C
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2709     	MOVR	r0x101C,W
                                    1- 2710     	.line	787, "main.c"; 	}
                                    1- 2711     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2712     ; exit point of _i2c_readByte
                                    1- 2714     ;***
                                    1- 2715     ;  pBlock Stats: dbName = C
                                    1- 2716     ;***
                                    1- 2717     ;has an exit
                                    1- 2718     ;functions called:
                                    1- 2719     ;   __dly_us
                                    1- 2720     ;   __dly_us
                                    1- 2721     ;   _i2c_chk_ack
                                    1- 2722     ;   __dly_us
                                    1- 2723     ;   __dly_us
                                    1- 2724     ;   _i2c_chk_ack
                                    1- 2725     ;3 compiler assigned registers:
                                    1- 2726     ;   r0x101D
                                    1- 2727     ;   r0x101E
                                    1- 2728     ;   r0x101F
                                    1- 2729     ;; Starting pCode block
                                    1- 2730     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2732     ;local variable name mapping:
     0000                           1- 2735     _i2c_writeByte:
                                    1- 2736     ; 2 exit points
                                    1- 2737     	.line	735, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2738     	BANKSEL	r0x101D
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2739     	MOVAR	r0x101D
                                    1- 2740     	.line	739, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2741     	MOVIA	0x08
                                    1- 2742     	BANKSEL	r0x101E
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2743     	MOVAR	r0x101E
     0005                           1- 2744     _02341_DS_:
                                    1- 2745     	BANKSEL	r0x101E
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2746     	MOVR	r0x101E,W
                                    1- 2747     	BANKSEL	r0x101F
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2748     	MOVAR	r0x101F
                                    1- 2749     	BANKSEL	r0x101E
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2750     	DECR	r0x101E,F
                                    1- 2751     	BANKSEL	r0x101F
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2752     	MOVR	r0x101F,W
     000D 0D03                      1- 2753     	BTRSC	STATUS,2
                                    1- 2754     	MGOTO	_02343_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2755     	.line	741, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Err                      1- 2756     	BCR	_PORTAbits,4
                                    1- 2757     	.line	742, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2758     	MOVIA	0x00
                                    1- 2759     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2760     	.line	743, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2761     	BANKSEL	r0x101D
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2762     	BTRSS	r0x101D,7
                                    1- 2763     	MGOTO	_02339_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2764     	.line	745, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2765     	BSR	_PORTAbits,3
                                    1- 2766     	MGOTO	_02340_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2767     _02339_DS_:
                                    1- 2768     	.line	749, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2769     	BCR	_PORTAbits,3
     0018                           1- 2770     _02340_DS_:
                                    1- 2771     	.line	751, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2772     	BCR	STATUS,0
                                    1- 2773     	BANKSEL	r0x101D
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2774     	RLR	r0x101D,F
                                    1- 2775     	.line	752, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 1Arr                      1- 2776     	BSR	_PORTAbits,4
                                    1- 2777     	.line	753, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2778     	MOVIA	0x00
                                    1- 2779     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2780     	.line	754, "main.c"; 	NOP();
     001E 0000                      1- 2781     	nop
                                    1- 2782     	MGOTO	_02341_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2783     _02343_DS_:
                                    1- 2784     	.line	757, "main.c"; 	return i2c_chk_ack();
                                    1- 2785     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2786     	BANKSEL	r0x101D
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2787     	MOVAR	r0x101D
                                    1- 2788     	.line	758, "main.c"; 	}
                                    1- 2789     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2790     ; exit point of _i2c_writeByte
                                    1- 2792     ;***
                                    1- 2793     ;  pBlock Stats: dbName = C
                                    1- 2794     ;***
                                    1- 2795     ;has an exit
                                    1- 2796     ;functions called:
                                    1- 2797     ;   __dly_us
                                    1- 2798     ;   __dly_us
                                    1- 2799     ;   __dly_us
                                    1- 2800     ;   __dly_us
                                    1- 2801     ;; Starting pCode block
                                    1- 2802     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2804     _i2c_send_nack:
                                    1- 2805     ; 2 exit points
                                    1- 2806     	.line	726, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2807     	BCR	_PORTAbits,4
                                    1- 2808     	.line	727, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2809     	BSR	_PORTAbits,3
                                    1- 2810     	.line	728, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2811     	MOVIA	0x0a
                                    1- 2812     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2813     	.line	729, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2814     	BSR	_PORTAbits,4
                                    1- 2815     	.line	730, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2816     	MOVIA	0x0a
                                    1- 2817     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2818     	.line	731, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2819     	BCR	_PORTAbits,4
                                    1- 2820     	.line	732, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2821     	BCR	_PORTAbits,3
                                    1- 2822     	.line	733, "main.c"; 	}
                                    1- 2823     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2824     ; exit point of _i2c_send_nack
                                    1- 2826     ;***
                                    1- 2827     ;  pBlock Stats: dbName = C
                                    1- 2828     ;***
                                    1- 2829     ;has an exit
                                    1- 2830     ;functions called:
                                    1- 2831     ;   __dly_us
                                    1- 2832     ;   __dly_us
                                    1- 2833     ;   __dly_us
                                    1- 2834     ;   __dly_us
                                    1- 2835     ;; Starting pCode block
                                    1- 2836     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2838     _i2c_send_ack:
                                    1- 2839     ; 2 exit points
                                    1- 2840     	.line	715, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2841     	BCR	_PORTAbits,4
                                    1- 2842     	.line	716, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2843     	BCR	_PORTAbits,3
                                    1- 2844     	.line	717, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2845     	MOVIA	0x0a
                                    1- 2846     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2847     	.line	718, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2848     	BSR	_PORTAbits,4
                                    1- 2849     	.line	719, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2850     	MOVIA	0x0a
                                    1- 2851     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2852     	.line	720, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Err                      1- 2853     	BCR	_PORTAbits,4
                                    1- 2854     	.line	721, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2855     	BCR	_PORTAbits,3
                                    1- 2856     	.line	722, "main.c"; 	}
                                    1- 2857     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2858     ; exit point of _i2c_send_ack
                                    1- 2860     ;***
                                    1- 2861     ;  pBlock Stats: dbName = C
                                    1- 2862     ;***
                                    1- 2863     ;has an exit
                                    1- 2864     ;functions called:
                                    1- 2865     ;   __dly_us
                                    1- 2866     ;   __dly_us
                                    1- 2867     ;   __dly_us
                                    1- 2868     ;   __dly_us
                                    1- 2869     ;1 compiler assigned register :
                                    1- 2870     ;   r0x101C
                                    1- 2871     ;; Starting pCode block
                                    1- 2872     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2874     ;local variable name mapping:
     0000                           1- 2876     _i2c_chk_ack:
                                    1- 2877     ; 2 exit points
                                    1- 2878     	.line	692, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Err                      1- 2879     	BCR	_PORTAbits,4
                                    1- 2880     	.line	693, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2881     	IOSTR	_IOSTA
                                    1- 2882     	BANKSEL	r0x101C
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2883     	MOVAR	r0x101C
     0004 19rr                      1- 2884     	BSR	r0x101C,3
     0005 01rr                      1- 2885     	MOVR	r0x101C,W
     0006 000r                      1- 2886     	IOST	_IOSTA
                                    1- 2887     	.line	695, "main.c"; 	_dly_us(0);
     0007 2100                      1- 2888     	MOVIA	0x00
                                    1- 2889     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2890     	.line	696, "main.c"; 	P_I2C_SCL_SET;
     0009 1Arr                      1- 2891     	BSR	_PORTAbits,4
                                    1- 2892     	.line	697, "main.c"; 	_dly_us(0);
     000A 2100                      1- 2893     	MOVIA	0x00
                                    1- 2894     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2895     	.line	698, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 2896     	MOVIA	0xfa
                                    1- 2897     	BANKSEL	r0x101C
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2898     	MOVAR	r0x101C
     000F                           1- 2899     _02322_DS_:
     000F 09rr                      1- 2900     	BTRSS	_PORTAbits,3
                                    1- 2901     	MGOTO	_02324_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2902     	.line	700, "main.c"; 	--getAckTime;
                                    1- 2903     	BANKSEL	r0x101C
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 2904     	DECRSZ	r0x101C,F
                                    1- 2905     	.line	702, "main.c"; 	if (0 == getAckTime)
                                    1- 2906     	MGOTO	_02322_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2907     	.line	704, "main.c"; 	return 1;
     0014 2101                      1- 2908     	MOVIA	0x01
                                    1- 2909     	MGOTO	_02325_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2910     _02324_DS_:
                                    1- 2911     	.line	708, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Err                      1- 2912     	BCR	_PORTAbits,4
                                    1- 2913     	.line	709, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 2914     	IOSTR	_IOSTA
                                    1- 2915     	BANKSEL	r0x101C
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2916     	MOVAR	r0x101C
     001A 1Drr                      1- 2917     	BCR	r0x101C,3
     001B 01rr                      1- 2918     	MOVR	r0x101C,W
     001C 000r                      1- 2919     	IOST	_IOSTA
                                    1- 2920     	.line	710, "main.c"; 	return 0;
     001D 2100                      1- 2921     	MOVIA	0x00
     001E                           1- 2922     _02325_DS_:
                                    1- 2923     	.line	711, "main.c"; 	}
                                    1- 2924     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 2925     ; exit point of _i2c_chk_ack
                                    1- 2927     ;***
                                    1- 2928     ;  pBlock Stats: dbName = C
                                    1- 2929     ;***
                                    1- 2930     ;has an exit
                                    1- 2931     ;functions called:
                                    1- 2932     ;   __dly_us
                                    1- 2933     ;   __dly_us
                                    1- 2934     ;   __dly_us
                                    1- 2935     ;   __dly_us
                                    1- 2936     ;; Starting pCode block
                                    1- 2937     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 2939     _i2c_stop:
                                    1- 2940     ; 2 exit points
                                    1- 2941     	.line	680, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Err                      1- 2942     	BCR	_PORTAbits,4
                                    1- 2943     	.line	681, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2944     	BCR	_PORTAbits,3
                                    1- 2945     	.line	682, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2946     	MOVIA	0x0a
                                    1- 2947     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2948     	.line	683, "main.c"; 	P_I2C_SCL_SET;
     0004 1Arr                      1- 2949     	BSR	_PORTAbits,4
                                    1- 2950     	.line	684, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2951     	MOVIA	0x0a
                                    1- 2952     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2953     	.line	685, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 2954     	BSR	_PORTAbits,3
                                    1- 2955     	.line	686, "main.c"; 	}
                                    1- 2956     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 2957     ; exit point of _i2c_stop
                                    1- 2959     ;***
                                    1- 2960     ;  pBlock Stats: dbName = C
                                    1- 2961     ;***
                                    1- 2962     ;has an exit
                                    1- 2963     ;functions called:
                                    1- 2964     ;   __dly_us
                                    1- 2965     ;   __dly_us
                                    1- 2966     ;   __dly_us
                                    1- 2967     ;   __dly_us
                                    1- 2968     ;1 compiler assigned register :
                                    1- 2969     ;   r0x101C
                                    1- 2970     ;; Starting pCode block
                                    1- 2971     .segment "code"; module=main, function=_i2c_start
     0000                           1- 2973     _i2c_start:
                                    1- 2974     ; 2 exit points
                                    1- 2975     	.line	667, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 2976     	BSR	_PORTAbits,3
                                    1- 2977     	.line	668, "main.c"; 	P_I2C_SCL_SET;
     0001 1Arr                      1- 2978     	BSR	_PORTAbits,4
                                    1- 2979     	.line	669, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 2980     	IOSTR	_IOSTA
                                    1- 2981     	BANKSEL	r0x101C
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2982     	MOVAR	r0x101C
     0005 1Drr                      1- 2983     	BCR	r0x101C,3
     0006 01rr                      1- 2984     	MOVR	r0x101C,W
     0007 000r                      1- 2985     	IOST	_IOSTA
                                    1- 2986     	.line	670, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 2987     	IOSTR	_IOSTA
     0009 00rr                      1- 2988     	MOVAR	r0x101C
     000A 1Err                      1- 2989     	BCR	r0x101C,4
     000B 01rr                      1- 2990     	MOVR	r0x101C,W
     000C 000r                      1- 2991     	IOST	_IOSTA
                                    1- 2992     	.line	671, "main.c"; 	_dly_us(10);
     000D 210A                      1- 2993     	MOVIA	0x0a
                                    1- 2994     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2995     	.line	672, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 2996     	BCR	_PORTAbits,3
                                    1- 2997     	.line	673, "main.c"; 	_dly_us(10);
     0010 210A                      1- 2998     	MOVIA	0x0a
                                    1- 2999     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3000     	.line	674, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Err                      1- 3001     	BCR	_PORTAbits,4
                                    1- 3002     	.line	675, "main.c"; 	}
                                    1- 3003     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 3004     ; exit point of _i2c_start
                                    1- 3006     ;***
                                    1- 3007     ;  pBlock Stats: dbName = C
                                    1- 3008     ;***
                                    1- 3009     ;has an exit
                                    1- 3010     ;1 compiler assigned register :
                                    1- 3011     ;   r0x101B
                                    1- 3012     ;; Starting pCode block
                                    1- 3013     .segment "code"; module=main, function=_gpioKeyScan
     0000                           1- 3015     _gpioKeyScan:
                                    1- 3016     ; 2 exit points
                                    1- 3017     	.line	543, "main.c"; 	P_KEY_INPUT;
     0000 001r                      1- 3018     	IOSTR	_IOSTB
                                    1- 3019     	BANKSEL	r0x101B
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3020     	MOVAR	r0x101B
     0003 18rr                      1- 3021     	BSR	r0x101B,0
     0004 01rr                      1- 3022     	MOVR	r0x101B,W
     0005 000r                      1- 3023     	IOST	_IOSTB
                                    1- 3024     	.line	544, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 3025     	BANKSEL	_gpioKeyWaitTimer
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1- 3026     	MOVR	_gpioKeyWaitTimer,W
     0008 0D03                      1- 3027     	BTRSC	STATUS,2
                                    1- 3028     	MGOTO	_02231_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3029     	.line	546, "main.c"; 	gpioKeyWaitTimer--;
     000A 01rr                      1- 3030     	MOVR	_gpioKeyWaitTimer,W
                                    1- 3031     	BANKSEL	r0x101B
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1- 3032     	MOVAR	r0x101B
     000D 06rr                      1- 3033     	DECR	r0x101B,W
                                    1- 3034     	BANKSEL	_gpioKeyWaitTimer
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1- 3035     	MOVAR	_gpioKeyWaitTimer
     0010                           1- 3036     _02231_DS_:
                                    1- 3037     	.line	549, "main.c"; 	indexKey = 0;
                                    1- 3038     	BANKSEL	_vFlag_1
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 1Drr                      1- 3039     	BCR	_vFlag_1,2
                                    1- 3040     	.line	551, "main.c"; 	if (P_KEY)
     0012 08rr                      1- 3041     	BTRSS	_PORTBbits,0
                                    1- 3042     	MGOTO	_02233_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3043     	.line	553, "main.c"; 	indexKey = 1;
     0014 19rr                      1- 3044     	BSR	_vFlag_1,2
                                    1- 3045     	.line	554, "main.c"; 	P_KEY_IPS_SET;
     0015 18rr                      1- 3046     	BSR	_PORTBbits,1
                                    1- 3047     	.line	555, "main.c"; 	P_KEY_IPS_INPUT;
     0016 001r                      1- 3048     	IOSTR	_IOSTB
                                    1- 3049     	BANKSEL	r0x101B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 3050     	MOVAR	r0x101B
     0019 18rr                      1- 3051     	BSR	r0x101B,1
     001A 01rr                      1- 3052     	MOVR	r0x101B,W
     001B 000r                      1- 3053     	IOST	_IOSTB
     001C                           1- 3054     _02233_DS_:
                                    1- 3055     	.line	558, "main.c"; 	switch (gpioKeyState)
                                    1- 3056     	BANKSEL	_gpioKeyState
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1- 3057     	MOVR	_gpioKeyState,W
     001E 0D03                      1- 3058     	BTRSC	STATUS,2
                                    1- 3059     	MGOTO	_02234_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020 01rr                      1- 3060     	MOVR	_gpioKeyState,W
     0021 2401                      1- 3061     	XORIA	0x01
     0022 0D03                      1- 3062     	BTRSC	STATUS,2
                                    1- 3063     	MGOTO	_02237_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
     0024 01rr                      1- 3064     	MOVR	_gpioKeyState,W
     0025 2402                      1- 3065     	XORIA	0x02
     0026 0D03                      1- 3066     	BTRSC	STATUS,2
                                    1- 3067     	MGOTO	_02243_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
     0028 01rr                      1- 3068     	MOVR	_gpioKeyState,W
     0029 2403                      1- 3069     	XORIA	0x03
     002A 0D03                      1- 3070     	BTRSC	STATUS,2
                                    1- 3071     	MGOTO	_02249_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3072     	MGOTO	_02252_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 3073     _02234_DS_:
                                    1- 3074     	.line	561, "main.c"; 	if (indexKey)
                                    1- 3075     	BANKSEL	_vFlag_1
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 09rr                      1- 3076     	BTRSS	_vFlag_1,2
                                    1- 3077     	MGOTO	_02236_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3078     	.line	564, "main.c"; 	return MSG_NONE;
     0030 2100                      1- 3079     	MOVIA	0x00
                                    1- 3080     	MGOTO	_02254_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032                           1- 3081     _02236_DS_:
                                    1- 3082     	.line	569, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME; // gSysTick_current;
     0032 2103                      1- 3083     	MOVIA	0x03
                                    1- 3084     	BANKSEL	_gpioKeyWaitTimer
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 3085     	MOVAR	_gpioKeyWaitTimer
                                    1- 3086     	.line	571, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0035 2101                      1- 3087     	MOVIA	0x01
                                    1- 3088     	BANKSEL	_gpioKeyState
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 00rr                      1- 3089     	MOVAR	_gpioKeyState
     0038                           1- 3090     _02237_DS_:
                                    1- 3091     	.line	574, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3092     	BANKSEL	_vFlag_1
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 09rr                      1- 3093     	BTRSS	_vFlag_1,2
                                    1- 3094     	MGOTO	_02241_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3095     	.line	577, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3096     	BANKSEL	_gpioKeyState
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 02rr                      1- 3097     	CLRR	_gpioKeyState
                                    1- 3098     	MGOTO	_02253_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
     003E                           1- 3099     _02241_DS_:
                                    1- 3100     	.line	580, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_JTTER_TIME)
                                    1- 3101     	BANKSEL	_gpioKeyWaitTimer
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1- 3102     	MOVR	_gpioKeyWaitTimer,W
     0040 0903                      1- 3103     	BTRSS	STATUS,2
                                    1- 3104     	MGOTO	_02253_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3105     	.line	586, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME; // gSysTick_current;
     0042 2196                      1- 3106     	MOVIA	0x96
     0043 00rr                      1- 3107     	MOVAR	_gpioKeyWaitTimer
                                    1- 3108     	.line	587, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     0044 2102                      1- 3109     	MOVIA	0x02
                                    1- 3110     	BANKSEL	_gpioKeyState
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 00rr                      1- 3111     	MOVAR	_gpioKeyState
                                    1- 3112     	.line	588, "main.c"; 	P_KEY_IPS_CLR;
     0047 1Crr                      1- 3113     	BCR	_PORTBbits,1
                                    1- 3114     	.line	589, "main.c"; 	P_KEY_IPS_OUTPUT;
     0048 001r                      1- 3115     	IOSTR	_IOSTB
                                    1- 3116     	BANKSEL	r0x101B
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 3117     	MOVAR	r0x101B
     004B 1Crr                      1- 3118     	BCR	r0x101B,1
     004C 01rr                      1- 3119     	MOVR	r0x101B,W
     004D 000r                      1- 3120     	IOST	_IOSTB
                                    1- 3121     	.line	593, "main.c"; 	break;
                                    1- 3122     	MGOTO	_02253_DS_
     004E 3rrr                      3-   62 m1      LGOTO rom_address
     004F                           1- 3123     _02243_DS_:
                                    1- 3124     	.line	596, "main.c"; 	if (indexKey)               // if(PreKeyIndex != indexKey)
                                    1- 3125     	BANKSEL	_vFlag_1
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 09rr                      1- 3126     	BTRSS	_vFlag_1,2
                                    1- 3127     	MGOTO	_02247_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3128     	.line	600, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3129     	BANKSEL	_gpioKeyState
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 02rr                      1- 3130     	CLRR	_gpioKeyState
                                    1- 3131     	.line	602, "main.c"; 	return MSG_MODE; // GpioKeyEvent[PreKeyIndex][1]; //SPR
     0054 2121                      1- 3132     	MOVIA	0x21
                                    1- 3133     	MGOTO	_02254_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
     0056                           1- 3134     _02247_DS_:
                                    1- 3135     	.line	605, "main.c"; 	else if (!gpioKeyWaitTimer) // if(gSysTick_current - gpioKeyWaitTimer > GPIO_KEY_CP_TIME)
                                    1- 3136     	BANKSEL	_gpioKeyWaitTimer
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 01rr                      1- 3137     	MOVR	_gpioKeyWaitTimer,W
     0058 0903                      1- 3138     	BTRSS	STATUS,2
                                    1- 3139     	MGOTO	_02253_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3140     	.line	613, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     005A 2103                      1- 3141     	MOVIA	0x03
                                    1- 3142     	BANKSEL	_gpioKeyState
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 00rr                      1- 3143     	MOVAR	_gpioKeyState
                                    1- 3144     	.line	628, "main.c"; 	return MSG_POWER_ON; // GpioKeyEvent[PreKeyIndex][2];  //CPS
     005D 2141                      1- 3145     	MOVIA	0x41
                                    1- 3146     	MGOTO	_02254_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
     005F                           1- 3147     _02249_DS_:
                                    1- 3148     	.line	634, "main.c"; 	if (indexKey) // if(PreKeyIndex != indexKey)
                                    1- 3149     	BANKSEL	_vFlag_1
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 09rr                      1- 3150     	BTRSS	_vFlag_1,2
                                    1- 3151     	MGOTO	_02253_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3152     	.line	639, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3153     	BANKSEL	_gpioKeyState
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 02rr                      1- 3154     	CLRR	_gpioKeyState
                                    1- 3155     	.line	653, "main.c"; 	break;
                                    1- 3156     	MGOTO	_02253_DS_
     0064 3rrr                      3-   62 m1      LGOTO rom_address
     0065                           1- 3157     _02252_DS_:
                                    1- 3158     	.line	656, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3159     	BANKSEL	_gpioKeyState
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 02rr                      1- 3160     	CLRR	_gpioKeyState
     0067                           1- 3161     _02253_DS_:
                                    1- 3162     	.line	660, "main.c"; 	return MSG_NONE;
     0067 2100                      1- 3163     	MOVIA	0x00
     0068                           1- 3164     _02254_DS_:
                                    1- 3165     	.line	661, "main.c"; 	}
                                    1- 3166     	RETURN	
     0068 0010                      3-   39 m1      ret
                                    1- 3167     ; exit point of _gpioKeyScan
                                    1- 3169     ;***
                                    1- 3170     ;  pBlock Stats: dbName = C
                                    1- 3171     ;***
                                    1- 3172     ;1 compiler assigned register :
                                    1- 3173     ;   r0x1032
                                    1- 3174     ;; Starting pCode block
                                    1- 3175     .segment "code"; module=main, function=_io_led_scan
                                    1- 3177     ;local variable name mapping:
     0000                           1- 3179     _io_led_scan:
                                    1- 3180     ; 0 exit points
                                    1- 3181     	.line	300, "main.c"; 	P_LED_SEG1_INPUT;
     0000 001r                      1- 3182     	IOSTR	_IOSTB
                                    1- 3183     	BANKSEL	r0x1032
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3184     	MOVAR	r0x1032
     0003 1Arr                      1- 3185     	BSR	r0x1032,5
     0004 01rr                      1- 3186     	MOVR	r0x1032,W
     0005 000r                      1- 3187     	IOST	_IOSTB
                                    1- 3188     	.line	301, "main.c"; 	P_LED_SEG2_INPUT;
     0006 001r                      1- 3189     	IOSTR	_IOSTA
     0007 00rr                      1- 3190     	MOVAR	r0x1032
     0008 18rr                      1- 3191     	BSR	r0x1032,0
     0009 01rr                      1- 3192     	MOVR	r0x1032,W
     000A 000r                      1- 3193     	IOST	_IOSTA
                                    1- 3194     	.line	302, "main.c"; 	P_LED_SEG3_INPUT;
     000B 001r                      1- 3195     	IOSTR	_IOSTA
     000C 00rr                      1- 3196     	MOVAR	r0x1032
     000D 18rr                      1- 3197     	BSR	r0x1032,1
     000E 01rr                      1- 3198     	MOVR	r0x1032,W
     000F 000r                      1- 3199     	IOST	_IOSTA
                                    1- 3200     	.line	303, "main.c"; 	P_LED_SEG4_INPUT;
     0010 001r                      1- 3201     	IOSTR	_IOSTA
     0011 00rr                      1- 3202     	MOVAR	r0x1032
     0012 1Brr                      1- 3203     	BSR	r0x1032,7
     0013 01rr                      1- 3204     	MOVR	r0x1032,W
     0014 000r                      1- 3205     	IOST	_IOSTA
                                    1- 3206     	.line	304, "main.c"; 	P_LED_SEG5_INPUT;
     0015 001r                      1- 3207     	IOSTR	_IOSTA
     0016 00rr                      1- 3208     	MOVAR	r0x1032
     0017 1Brr                      1- 3209     	BSR	r0x1032,6
     0018 01rr                      1- 3210     	MOVR	r0x1032,W
     0019 000r                      1- 3211     	IOST	_IOSTA
                                    1- 3212     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3213     ;;unsigned compare: left >= lit(0x12=18), size=1
                                    1- 3214     	.line	306, "main.c"; 	switch (indexScan)
     001A 2112                      1- 3215     	MOVIA	0x12
                                    1- 3216     	BANKSEL	_io_led_scan_indexScan_65536_29
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 04rr                      1- 3217     	SUBAR	_io_led_scan_indexScan_65536_29,W
     001D 0C03                      1- 3218     	BTRSC	STATUS,0
                                    1- 3219     	MGOTO	_02109_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F 21rr                      1- 3220     	MOVIA	((_02225_DS_ >> 8) & 0xff)
     0020 008A                      1- 3221     	MOVAR	PCHBUF
     0021 01rr                      1- 3222     	MOVR	_io_led_scan_indexScan_65536_29,W
     0022 25rr                      1- 3223     	ADDIA	_02225_DS_
     0023 0C03                      1- 3224     	BTRSC	STATUS,0
     0024 058A                      1- 3225     	INCR	PCHBUF,F
     0025 0082                      1- 3226     	MOVAR	PCL
     0026                           1- 3227     _02225_DS_:
                                    1- 3228     	MGOTO	_02054_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3229     	MGOTO	_02057_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3230     	MGOTO	_02060_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3231     	MGOTO	_02063_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3232     	MGOTO	_02066_DS_
     002A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3233     	MGOTO	_02069_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3234     	MGOTO	_02072_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3235     	MGOTO	_02075_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3236     	MGOTO	_02078_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3237     	MGOTO	_02081_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3238     	MGOTO	_02084_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3239     	MGOTO	_02087_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3240     	MGOTO	_02090_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3241     	MGOTO	_02093_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3242     	MGOTO	_02096_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3243     	MGOTO	_02099_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3244     	MGOTO	_02102_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3245     	MGOTO	_02105_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 3246     _02054_DS_:
                                    1- 3247     	.line	309, "main.c"; 	if (displayDecade & SEG_A) // 2A
                                    1- 3248     	BANKSEL	_displayDecade
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 08rr                      1- 3249     	BTRSS	_displayDecade,0
                                    1- 3250     	MGOTO	_02109_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3251     	.line	311, "main.c"; 	P_LED_SEG2_SET;
     003B 18rr                      1- 3252     	BSR	_PORTAbits,0
                                    1- 3253     	.line	312, "main.c"; 	P_LED_SEG2_OUTPUT;
     003C 001r                      1- 3254     	IOSTR	_IOSTA
                                    1- 3255     	BANKSEL	r0x1032
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3256     	MOVAR	r0x1032
     003F 1Crr                      1- 3257     	BCR	r0x1032,0
     0040 01rr                      1- 3258     	MOVR	r0x1032,W
     0041 000r                      1- 3259     	IOST	_IOSTA
                                    1- 3260     	.line	313, "main.c"; 	P_LED_SEG3_CLR;
     0042 1Crr                      1- 3261     	BCR	_PORTAbits,1
                                    1- 3262     	.line	314, "main.c"; 	P_LED_SEG3_OUTPUT;
     0043 001r                      1- 3263     	IOSTR	_IOSTA
     0044 00rr                      1- 3264     	MOVAR	r0x1032
     0045 1Crr                      1- 3265     	BCR	r0x1032,1
     0046 01rr                      1- 3266     	MOVR	r0x1032,W
     0047 000r                      1- 3267     	IOST	_IOSTA
                                    1- 3268     	.line	316, "main.c"; 	break;
                                    1- 3269     	MGOTO	_02109_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 3270     _02057_DS_:
                                    1- 3271     	.line	319, "main.c"; 	if (displayDecade & SEG_B) // 2B
                                    1- 3272     	BANKSEL	_displayDecade
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 08rr                      1- 3273     	BTRSS	_displayDecade,1
                                    1- 3274     	MGOTO	_02109_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3275     	.line	321, "main.c"; 	P_LED_SEG3_SET;
     004C 18rr                      1- 3276     	BSR	_PORTAbits,1
                                    1- 3277     	.line	322, "main.c"; 	P_LED_SEG3_OUTPUT;
     004D 001r                      1- 3278     	IOSTR	_IOSTA
                                    1- 3279     	BANKSEL	r0x1032
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 00rr                      1- 3280     	MOVAR	r0x1032
     0050 1Crr                      1- 3281     	BCR	r0x1032,1
     0051 01rr                      1- 3282     	MOVR	r0x1032,W
     0052 000r                      1- 3283     	IOST	_IOSTA
                                    1- 3284     	.line	323, "main.c"; 	P_LED_SEG2_CLR;
     0053 1Crr                      1- 3285     	BCR	_PORTAbits,0
                                    1- 3286     	.line	324, "main.c"; 	P_LED_SEG2_OUTPUT;
     0054 001r                      1- 3287     	IOSTR	_IOSTA
     0055 00rr                      1- 3288     	MOVAR	r0x1032
     0056 1Crr                      1- 3289     	BCR	r0x1032,0
     0057 01rr                      1- 3290     	MOVR	r0x1032,W
     0058 000r                      1- 3291     	IOST	_IOSTA
                                    1- 3292     	.line	326, "main.c"; 	break;
                                    1- 3293     	MGOTO	_02109_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 3294     _02060_DS_:
                                    1- 3295     	.line	329, "main.c"; 	if (displayDecade & SEG_C) // 2C
                                    1- 3296     	BANKSEL	_displayDecade
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 09rr                      1- 3297     	BTRSS	_displayDecade,2
                                    1- 3298     	MGOTO	_02109_DS_
     005C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3299     	.line	331, "main.c"; 	P_LED_SEG4_SET;
     005D 1Brr                      1- 3300     	BSR	_PORTAbits,7
                                    1- 3301     	.line	332, "main.c"; 	P_LED_SEG4_OUTPUT;
     005E 001r                      1- 3302     	IOSTR	_IOSTA
                                    1- 3303     	BANKSEL	r0x1032
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3304     	MOVAR	r0x1032
     0061 1Frr                      1- 3305     	BCR	r0x1032,7
     0062 01rr                      1- 3306     	MOVR	r0x1032,W
     0063 000r                      1- 3307     	IOST	_IOSTA
                                    1- 3308     	.line	333, "main.c"; 	P_LED_SEG3_CLR;
     0064 1Crr                      1- 3309     	BCR	_PORTAbits,1
                                    1- 3310     	.line	334, "main.c"; 	P_LED_SEG3_OUTPUT;
     0065 001r                      1- 3311     	IOSTR	_IOSTA
     0066 00rr                      1- 3312     	MOVAR	r0x1032
     0067 1Crr                      1- 3313     	BCR	r0x1032,1
     0068 01rr                      1- 3314     	MOVR	r0x1032,W
     0069 000r                      1- 3315     	IOST	_IOSTA
                                    1- 3316     	.line	336, "main.c"; 	break;
                                    1- 3317     	MGOTO	_02109_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 3318     _02063_DS_:
                                    1- 3319     	.line	339, "main.c"; 	if (displayDecade & SEG_D) // 2D
                                    1- 3320     	BANKSEL	_displayDecade
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 09rr                      1- 3321     	BTRSS	_displayDecade,3
                                    1- 3322     	MGOTO	_02109_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3323     	.line	341, "main.c"; 	P_LED_SEG4_SET;
     006E 1Brr                      1- 3324     	BSR	_PORTAbits,7
                                    1- 3325     	.line	342, "main.c"; 	P_LED_SEG4_OUTPUT;
     006F 001r                      1- 3326     	IOSTR	_IOSTA
                                    1- 3327     	BANKSEL	r0x1032
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 00rr                      1- 3328     	MOVAR	r0x1032
     0072 1Frr                      1- 3329     	BCR	r0x1032,7
     0073 01rr                      1- 3330     	MOVR	r0x1032,W
     0074 000r                      1- 3331     	IOST	_IOSTA
                                    1- 3332     	.line	343, "main.c"; 	P_LED_SEG2_CLR;
     0075 1Crr                      1- 3333     	BCR	_PORTAbits,0
                                    1- 3334     	.line	344, "main.c"; 	P_LED_SEG2_OUTPUT;
     0076 001r                      1- 3335     	IOSTR	_IOSTA
     0077 00rr                      1- 3336     	MOVAR	r0x1032
     0078 1Crr                      1- 3337     	BCR	r0x1032,0
     0079 01rr                      1- 3338     	MOVR	r0x1032,W
     007A 000r                      1- 3339     	IOST	_IOSTA
                                    1- 3340     	.line	346, "main.c"; 	break;
                                    1- 3341     	MGOTO	_02109_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C                           1- 3342     _02066_DS_:
                                    1- 3343     	.line	349, "main.c"; 	if (displayDecade & SEG_E) // 2E
                                    1- 3344     	BANKSEL	_displayDecade
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 0Arr                      1- 3345     	BTRSS	_displayDecade,4
                                    1- 3346     	MGOTO	_02109_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3347     	.line	351, "main.c"; 	P_LED_SEG5_SET;
     007F 1Brr                      1- 3348     	BSR	_PORTAbits,6
                                    1- 3349     	.line	352, "main.c"; 	P_LED_SEG5_OUTPUT;
     0080 001r                      1- 3350     	IOSTR	_IOSTA
                                    1- 3351     	BANKSEL	r0x1032
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 3352     	MOVAR	r0x1032
     0083 1Frr                      1- 3353     	BCR	r0x1032,6
     0084 01rr                      1- 3354     	MOVR	r0x1032,W
     0085 000r                      1- 3355     	IOST	_IOSTA
                                    1- 3356     	.line	353, "main.c"; 	P_LED_SEG2_CLR;
     0086 1Crr                      1- 3357     	BCR	_PORTAbits,0
                                    1- 3358     	.line	354, "main.c"; 	P_LED_SEG2_OUTPUT;
     0087 001r                      1- 3359     	IOSTR	_IOSTA
     0088 00rr                      1- 3360     	MOVAR	r0x1032
     0089 1Crr                      1- 3361     	BCR	r0x1032,0
     008A 01rr                      1- 3362     	MOVR	r0x1032,W
     008B 000r                      1- 3363     	IOST	_IOSTA
                                    1- 3364     	.line	356, "main.c"; 	break;
                                    1- 3365     	MGOTO	_02109_DS_
     008C 3rrr                      3-   62 m1      LGOTO rom_address
     008D                           1- 3366     _02069_DS_:
                                    1- 3367     	.line	359, "main.c"; 	if (displayDecade & SEG_F) // 2F
                                    1- 3368     	BANKSEL	_displayDecade
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 0Arr                      1- 3369     	BTRSS	_displayDecade,5
                                    1- 3370     	MGOTO	_02109_DS_
     008F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3371     	.line	361, "main.c"; 	P_LED_SEG5_SET;
     0090 1Brr                      1- 3372     	BSR	_PORTAbits,6
                                    1- 3373     	.line	362, "main.c"; 	P_LED_SEG5_OUTPUT;
     0091 001r                      1- 3374     	IOSTR	_IOSTA
                                    1- 3375     	BANKSEL	r0x1032
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 00rr                      1- 3376     	MOVAR	r0x1032
     0094 1Frr                      1- 3377     	BCR	r0x1032,6
     0095 01rr                      1- 3378     	MOVR	r0x1032,W
     0096 000r                      1- 3379     	IOST	_IOSTA
                                    1- 3380     	.line	363, "main.c"; 	P_LED_SEG3_CLR;
     0097 1Crr                      1- 3381     	BCR	_PORTAbits,1
                                    1- 3382     	.line	364, "main.c"; 	P_LED_SEG3_OUTPUT;
     0098 001r                      1- 3383     	IOSTR	_IOSTA
     0099 00rr                      1- 3384     	MOVAR	r0x1032
     009A 1Crr                      1- 3385     	BCR	r0x1032,1
     009B 01rr                      1- 3386     	MOVR	r0x1032,W
     009C 000r                      1- 3387     	IOST	_IOSTA
                                    1- 3388     	.line	366, "main.c"; 	break;
                                    1- 3389     	MGOTO	_02109_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
     009E                           1- 3390     _02072_DS_:
                                    1- 3391     	.line	369, "main.c"; 	if (displayDecade & SEG_G) // 2G
                                    1- 3392     	BANKSEL	_displayDecade
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 0Brr                      1- 3393     	BTRSS	_displayDecade,6
                                    1- 3394     	MGOTO	_02109_DS_
     00A0 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3395     	.line	371, "main.c"; 	P_LED_SEG5_SET;
     00A1 1Brr                      1- 3396     	BSR	_PORTAbits,6
                                    1- 3397     	.line	372, "main.c"; 	P_LED_SEG5_OUTPUT;
     00A2 001r                      1- 3398     	IOSTR	_IOSTA
                                    1- 3399     	BANKSEL	r0x1032
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 00rr                      1- 3400     	MOVAR	r0x1032
     00A5 1Frr                      1- 3401     	BCR	r0x1032,6
     00A6 01rr                      1- 3402     	MOVR	r0x1032,W
     00A7 000r                      1- 3403     	IOST	_IOSTA
                                    1- 3404     	.line	373, "main.c"; 	P_LED_SEG4_CLR;
     00A8 1Frr                      1- 3405     	BCR	_PORTAbits,7
                                    1- 3406     	.line	374, "main.c"; 	P_LED_SEG4_OUTPUT;
     00A9 001r                      1- 3407     	IOSTR	_IOSTA
     00AA 00rr                      1- 3408     	MOVAR	r0x1032
     00AB 1Frr                      1- 3409     	BCR	r0x1032,7
     00AC 01rr                      1- 3410     	MOVR	r0x1032,W
     00AD 000r                      1- 3411     	IOST	_IOSTA
                                    1- 3412     	.line	376, "main.c"; 	break;
                                    1- 3413     	MGOTO	_02109_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF                           1- 3414     _02075_DS_:
                                    1- 3415     	.line	379, "main.c"; 	if (displayDigit & SEG_A) // 3A
                                    1- 3416     	BANKSEL	_displayDigit
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 08rr                      1- 3417     	BTRSS	_displayDigit,0
                                    1- 3418     	MGOTO	_02109_DS_
     00B1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3419     	.line	381, "main.c"; 	P_LED_SEG1_SET;
     00B2 1Arr                      1- 3420     	BSR	_PORTBbits,5
                                    1- 3421     	.line	382, "main.c"; 	P_LED_SEG1_OUTPUT;
     00B3 001r                      1- 3422     	IOSTR	_IOSTB
                                    1- 3423     	BANKSEL	r0x1032
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3424     	MOVAR	r0x1032
     00B6 1Err                      1- 3425     	BCR	r0x1032,5
     00B7 01rr                      1- 3426     	MOVR	r0x1032,W
     00B8 000r                      1- 3427     	IOST	_IOSTB
                                    1- 3428     	.line	383, "main.c"; 	P_LED_SEG2_CLR;
     00B9 1Crr                      1- 3429     	BCR	_PORTAbits,0
                                    1- 3430     	.line	384, "main.c"; 	P_LED_SEG2_OUTPUT;
     00BA 001r                      1- 3431     	IOSTR	_IOSTA
     00BB 00rr                      1- 3432     	MOVAR	r0x1032
     00BC 1Crr                      1- 3433     	BCR	r0x1032,0
     00BD 01rr                      1- 3434     	MOVR	r0x1032,W
     00BE 000r                      1- 3435     	IOST	_IOSTA
                                    1- 3436     	.line	386, "main.c"; 	break;
                                    1- 3437     	MGOTO	_02109_DS_
     00BF 3rrr                      3-   62 m1      LGOTO rom_address
     00C0                           1- 3438     _02078_DS_:
                                    1- 3439     	.line	389, "main.c"; 	if (displayDigit & SEG_B) // 3B
                                    1- 3440     	BANKSEL	_displayDigit
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 08rr                      1- 3441     	BTRSS	_displayDigit,1
                                    1- 3442     	MGOTO	_02109_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3443     	.line	391, "main.c"; 	P_LED_SEG2_SET;
     00C3 18rr                      1- 3444     	BSR	_PORTAbits,0
                                    1- 3445     	.line	392, "main.c"; 	P_LED_SEG2_OUTPUT;
     00C4 001r                      1- 3446     	IOSTR	_IOSTA
                                    1- 3447     	BANKSEL	r0x1032
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 00rr                      1- 3448     	MOVAR	r0x1032
     00C7 1Crr                      1- 3449     	BCR	r0x1032,0
     00C8 01rr                      1- 3450     	MOVR	r0x1032,W
     00C9 000r                      1- 3451     	IOST	_IOSTA
                                    1- 3452     	.line	393, "main.c"; 	P_LED_SEG1_CLR;
     00CA 1Err                      1- 3453     	BCR	_PORTBbits,5
                                    1- 3454     	.line	394, "main.c"; 	P_LED_SEG1_OUTPUT;
     00CB 001r                      1- 3455     	IOSTR	_IOSTB
     00CC 00rr                      1- 3456     	MOVAR	r0x1032
     00CD 1Err                      1- 3457     	BCR	r0x1032,5
     00CE 01rr                      1- 3458     	MOVR	r0x1032,W
     00CF 000r                      1- 3459     	IOST	_IOSTB
                                    1- 3460     	.line	396, "main.c"; 	break;
                                    1- 3461     	MGOTO	_02109_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 3462     _02081_DS_:
                                    1- 3463     	.line	399, "main.c"; 	if (displayDigit & SEG_C) // 3C
                                    1- 3464     	BANKSEL	_displayDigit
     00D1 rrrr                      3-  109 m1      .banksel ram_address
     00D2 09rr                      1- 3465     	BTRSS	_displayDigit,2
                                    1- 3466     	MGOTO	_02109_DS_
     00D3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3467     	.line	401, "main.c"; 	P_LED_SEG1_SET;
     00D4 1Arr                      1- 3468     	BSR	_PORTBbits,5
                                    1- 3469     	.line	402, "main.c"; 	P_LED_SEG1_OUTPUT;
     00D5 001r                      1- 3470     	IOSTR	_IOSTB
                                    1- 3471     	BANKSEL	r0x1032
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 00rr                      1- 3472     	MOVAR	r0x1032
     00D8 1Err                      1- 3473     	BCR	r0x1032,5
     00D9 01rr                      1- 3474     	MOVR	r0x1032,W
     00DA 000r                      1- 3475     	IOST	_IOSTB
                                    1- 3476     	.line	403, "main.c"; 	P_LED_SEG3_CLR;
     00DB 1Crr                      1- 3477     	BCR	_PORTAbits,1
                                    1- 3478     	.line	404, "main.c"; 	P_LED_SEG3_OUTPUT;
     00DC 001r                      1- 3479     	IOSTR	_IOSTA
     00DD 00rr                      1- 3480     	MOVAR	r0x1032
     00DE 1Crr                      1- 3481     	BCR	r0x1032,1
     00DF 01rr                      1- 3482     	MOVR	r0x1032,W
     00E0 000r                      1- 3483     	IOST	_IOSTA
                                    1- 3484     	.line	406, "main.c"; 	break;
                                    1- 3485     	MGOTO	_02109_DS_
     00E1 3rrr                      3-   62 m1      LGOTO rom_address
     00E2                           1- 3486     _02084_DS_:
                                    1- 3487     	.line	409, "main.c"; 	if (displayDigit & SEG_D) // 3D
                                    1- 3488     	BANKSEL	_displayDigit
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 09rr                      1- 3489     	BTRSS	_displayDigit,3
                                    1- 3490     	MGOTO	_02109_DS_
     00E4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3491     	.line	411, "main.c"; 	P_LED_SEG3_SET;
     00E5 18rr                      1- 3492     	BSR	_PORTAbits,1
                                    1- 3493     	.line	412, "main.c"; 	P_LED_SEG3_OUTPUT;
     00E6 001r                      1- 3494     	IOSTR	_IOSTA
                                    1- 3495     	BANKSEL	r0x1032
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 3496     	MOVAR	r0x1032
     00E9 1Crr                      1- 3497     	BCR	r0x1032,1
     00EA 01rr                      1- 3498     	MOVR	r0x1032,W
     00EB 000r                      1- 3499     	IOST	_IOSTA
                                    1- 3500     	.line	413, "main.c"; 	P_LED_SEG1_CLR;
     00EC 1Err                      1- 3501     	BCR	_PORTBbits,5
                                    1- 3502     	.line	414, "main.c"; 	P_LED_SEG1_OUTPUT;
     00ED 001r                      1- 3503     	IOSTR	_IOSTB
     00EE 00rr                      1- 3504     	MOVAR	r0x1032
     00EF 1Err                      1- 3505     	BCR	r0x1032,5
     00F0 01rr                      1- 3506     	MOVR	r0x1032,W
     00F1 000r                      1- 3507     	IOST	_IOSTB
                                    1- 3508     	.line	416, "main.c"; 	break;
                                    1- 3509     	MGOTO	_02109_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
     00F3                           1- 3510     _02087_DS_:
                                    1- 3511     	.line	419, "main.c"; 	if (displayDigit & SEG_E) // 3E
                                    1- 3512     	BANKSEL	_displayDigit
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 0Arr                      1- 3513     	BTRSS	_displayDigit,4
                                    1- 3514     	MGOTO	_02109_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3515     	.line	421, "main.c"; 	P_LED_SEG1_SET;
     00F6 1Arr                      1- 3516     	BSR	_PORTBbits,5
                                    1- 3517     	.line	422, "main.c"; 	P_LED_SEG1_OUTPUT;
     00F7 001r                      1- 3518     	IOSTR	_IOSTB
                                    1- 3519     	BANKSEL	r0x1032
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3520     	MOVAR	r0x1032
     00FA 1Err                      1- 3521     	BCR	r0x1032,5
     00FB 01rr                      1- 3522     	MOVR	r0x1032,W
     00FC 000r                      1- 3523     	IOST	_IOSTB
                                    1- 3524     	.line	423, "main.c"; 	P_LED_SEG4_CLR;
     00FD 1Frr                      1- 3525     	BCR	_PORTAbits,7
                                    1- 3526     	.line	424, "main.c"; 	P_LED_SEG4_OUTPUT;
     00FE 001r                      1- 3527     	IOSTR	_IOSTA
     00FF 00rr                      1- 3528     	MOVAR	r0x1032
     0100 1Frr                      1- 3529     	BCR	r0x1032,7
     0101 01rr                      1- 3530     	MOVR	r0x1032,W
     0102 000r                      1- 3531     	IOST	_IOSTA
                                    1- 3532     	.line	426, "main.c"; 	break;
                                    1- 3533     	MGOTO	_02109_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 3534     _02090_DS_:
                                    1- 3535     	.line	429, "main.c"; 	if (displayDigit & SEG_F) // 3F
                                    1- 3536     	BANKSEL	_displayDigit
     0104 rrrr                      3-  109 m1      .banksel ram_address
     0105 0Arr                      1- 3537     	BTRSS	_displayDigit,5
                                    1- 3538     	MGOTO	_02109_DS_
     0106 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3539     	.line	431, "main.c"; 	P_LED_SEG4_SET;
     0107 1Brr                      1- 3540     	BSR	_PORTAbits,7
                                    1- 3541     	.line	432, "main.c"; 	P_LED_SEG4_OUTPUT;
     0108 001r                      1- 3542     	IOSTR	_IOSTA
                                    1- 3543     	BANKSEL	r0x1032
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 00rr                      1- 3544     	MOVAR	r0x1032
     010B 1Frr                      1- 3545     	BCR	r0x1032,7
     010C 01rr                      1- 3546     	MOVR	r0x1032,W
     010D 000r                      1- 3547     	IOST	_IOSTA
                                    1- 3548     	.line	433, "main.c"; 	P_LED_SEG1_CLR;
     010E 1Err                      1- 3549     	BCR	_PORTBbits,5
                                    1- 3550     	.line	434, "main.c"; 	P_LED_SEG1_OUTPUT;
     010F 001r                      1- 3551     	IOSTR	_IOSTB
     0110 00rr                      1- 3552     	MOVAR	r0x1032
     0111 1Err                      1- 3553     	BCR	r0x1032,5
     0112 01rr                      1- 3554     	MOVR	r0x1032,W
     0113 000r                      1- 3555     	IOST	_IOSTB
                                    1- 3556     	.line	436, "main.c"; 	break;
                                    1- 3557     	MGOTO	_02109_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
     0115                           1- 3558     _02093_DS_:
                                    1- 3559     	.line	439, "main.c"; 	if (displayDigit & SEG_G) // 3G OK
                                    1- 3560     	BANKSEL	_displayDigit
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 0Brr                      1- 3561     	BTRSS	_displayDigit,6
                                    1- 3562     	MGOTO	_02109_DS_
     0117 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3563     	.line	441, "main.c"; 	P_LED_SEG5_SET;
     0118 1Brr                      1- 3564     	BSR	_PORTAbits,6
                                    1- 3565     	.line	442, "main.c"; 	P_LED_SEG5_OUTPUT;
     0119 001r                      1- 3566     	IOSTR	_IOSTA
                                    1- 3567     	BANKSEL	r0x1032
     011A rrrr                      3-  109 m1      .banksel ram_address
     011B 00rr                      1- 3568     	MOVAR	r0x1032
     011C 1Frr                      1- 3569     	BCR	r0x1032,6
     011D 01rr                      1- 3570     	MOVR	r0x1032,W
     011E 000r                      1- 3571     	IOST	_IOSTA
                                    1- 3572     	.line	443, "main.c"; 	P_LED_SEG1_CLR;
     011F 1Err                      1- 3573     	BCR	_PORTBbits,5
                                    1- 3574     	.line	444, "main.c"; 	P_LED_SEG1_OUTPUT;
     0120 001r                      1- 3575     	IOSTR	_IOSTB
     0121 00rr                      1- 3576     	MOVAR	r0x1032
     0122 1Err                      1- 3577     	BCR	r0x1032,5
     0123 01rr                      1- 3578     	MOVR	r0x1032,W
     0124 000r                      1- 3579     	IOST	_IOSTB
                                    1- 3580     	.line	446, "main.c"; 	break;
                                    1- 3581     	MGOTO	_02109_DS_
     0125 3rrr                      3-   62 m1      LGOTO rom_address
     0126                           1- 3582     _02096_DS_:
                                    1- 3583     	.line	449, "main.c"; 	if (displayHundred & SEG_B) // 1B OK
                                    1- 3584     	BANKSEL	_displayHundred
     0126 rrrr                      3-  109 m1      .banksel ram_address
     0127 08rr                      1- 3585     	BTRSS	_displayHundred,1
                                    1- 3586     	MGOTO	_02109_DS_
     0128 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3587     	.line	451, "main.c"; 	P_LED_SEG3_SET;
     0129 18rr                      1- 3588     	BSR	_PORTAbits,1
                                    1- 3589     	.line	452, "main.c"; 	P_LED_SEG3_OUTPUT;
     012A 001r                      1- 3590     	IOSTR	_IOSTA
                                    1- 3591     	BANKSEL	r0x1032
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 3592     	MOVAR	r0x1032
     012D 1Crr                      1- 3593     	BCR	r0x1032,1
     012E 01rr                      1- 3594     	MOVR	r0x1032,W
     012F 000r                      1- 3595     	IOST	_IOSTA
                                    1- 3596     	.line	453, "main.c"; 	P_LED_SEG4_CLR;
     0130 1Frr                      1- 3597     	BCR	_PORTAbits,7
                                    1- 3598     	.line	454, "main.c"; 	P_LED_SEG4_OUTPUT;
     0131 001r                      1- 3599     	IOSTR	_IOSTA
     0132 00rr                      1- 3600     	MOVAR	r0x1032
     0133 1Frr                      1- 3601     	BCR	r0x1032,7
     0134 01rr                      1- 3602     	MOVR	r0x1032,W
     0135 000r                      1- 3603     	IOST	_IOSTA
                                    1- 3604     	.line	456, "main.c"; 	break;
                                    1- 3605     	MGOTO	_02109_DS_
     0136 3rrr                      3-   62 m1      LGOTO rom_address
     0137                           1- 3606     _02099_DS_:
                                    1- 3607     	.line	459, "main.c"; 	if (displayHundred & SEG_C) // 1C OK
                                    1- 3608     	BANKSEL	_displayHundred
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 09rr                      1- 3609     	BTRSS	_displayHundred,2
                                    1- 3610     	MGOTO	_02109_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3611     	.line	461, "main.c"; 	P_LED_SEG2_SET;
     013A 18rr                      1- 3612     	BSR	_PORTAbits,0
                                    1- 3613     	.line	462, "main.c"; 	P_LED_SEG2_OUTPUT;
     013B 001r                      1- 3614     	IOSTR	_IOSTA
                                    1- 3615     	BANKSEL	r0x1032
     013C rrrr                      3-  109 m1      .banksel ram_address
     013D 00rr                      1- 3616     	MOVAR	r0x1032
     013E 1Crr                      1- 3617     	BCR	r0x1032,0
     013F 01rr                      1- 3618     	MOVR	r0x1032,W
     0140 000r                      1- 3619     	IOST	_IOSTA
                                    1- 3620     	.line	463, "main.c"; 	P_LED_SEG4_CLR;
     0141 1Frr                      1- 3621     	BCR	_PORTAbits,7
                                    1- 3622     	.line	464, "main.c"; 	P_LED_SEG4_OUTPUT;
     0142 001r                      1- 3623     	IOSTR	_IOSTA
     0143 00rr                      1- 3624     	MOVAR	r0x1032
     0144 1Frr                      1- 3625     	BCR	r0x1032,7
     0145 01rr                      1- 3626     	MOVR	r0x1032,W
     0146 000r                      1- 3627     	IOST	_IOSTA
                                    1- 3628     	.line	467, "main.c"; 	break;
                                    1- 3629     	MGOTO	_02109_DS_
     0147 3rrr                      3-   62 m1      LGOTO rom_address
     0148                           1- 3630     _02102_DS_:
                                    1- 3631     	.line	482, "main.c"; 	if (displayHundred & SEG_D) // 1D quick
                                    1- 3632     	BANKSEL	_displayHundred
     0148 rrrr                      3-  109 m1      .banksel ram_address
     0149 09rr                      1- 3633     	BTRSS	_displayHundred,3
                                    1- 3634     	MGOTO	_02109_DS_
     014A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3635     	.line	484, "main.c"; 	P_LED_SEG3_SET;
     014B 18rr                      1- 3636     	BSR	_PORTAbits,1
                                    1- 3637     	.line	485, "main.c"; 	P_LED_SEG3_OUTPUT;
     014C 001r                      1- 3638     	IOSTR	_IOSTA
                                    1- 3639     	BANKSEL	r0x1032
     014D rrrr                      3-  109 m1      .banksel ram_address
     014E 00rr                      1- 3640     	MOVAR	r0x1032
     014F 1Crr                      1- 3641     	BCR	r0x1032,1
     0150 01rr                      1- 3642     	MOVR	r0x1032,W
     0151 000r                      1- 3643     	IOST	_IOSTA
                                    1- 3644     	.line	486, "main.c"; 	P_LED_SEG5_CLR;
     0152 1Frr                      1- 3645     	BCR	_PORTAbits,6
                                    1- 3646     	.line	487, "main.c"; 	P_LED_SEG5_OUTPUT;
     0153 001r                      1- 3647     	IOSTR	_IOSTA
     0154 00rr                      1- 3648     	MOVAR	r0x1032
     0155 1Frr                      1- 3649     	BCR	r0x1032,6
     0156 01rr                      1- 3650     	MOVR	r0x1032,W
     0157 000r                      1- 3651     	IOST	_IOSTA
                                    1- 3652     	.line	489, "main.c"; 	break;
                                    1- 3653     	MGOTO	_02109_DS_
     0158 3rrr                      3-   62 m1      LGOTO rom_address
     0159                           1- 3654     _02105_DS_:
                                    1- 3655     	.line	492, "main.c"; 	if (displayHundred & SEG_E) // 1E wireless
                                    1- 3656     	BANKSEL	_displayHundred
     0159 rrrr                      3-  109 m1      .banksel ram_address
     015A 0Arr                      1- 3657     	BTRSS	_displayHundred,4
                                    1- 3658     	MGOTO	_02109_DS_
     015B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3659     	.line	494, "main.c"; 	P_LED_SEG2_SET;
     015C 18rr                      1- 3660     	BSR	_PORTAbits,0
                                    1- 3661     	.line	495, "main.c"; 	P_LED_SEG2_OUTPUT;
     015D 001r                      1- 3662     	IOSTR	_IOSTA
                                    1- 3663     	BANKSEL	r0x1032
     015E rrrr                      3-  109 m1      .banksel ram_address
     015F 00rr                      1- 3664     	MOVAR	r0x1032
     0160 1Crr                      1- 3665     	BCR	r0x1032,0
     0161 01rr                      1- 3666     	MOVR	r0x1032,W
     0162 000r                      1- 3667     	IOST	_IOSTA
                                    1- 3668     	.line	496, "main.c"; 	P_LED_SEG5_CLR;
     0163 1Frr                      1- 3669     	BCR	_PORTAbits,6
                                    1- 3670     	.line	497, "main.c"; 	P_LED_SEG5_OUTPUT;
     0164 001r                      1- 3671     	IOSTR	_IOSTA
     0165 00rr                      1- 3672     	MOVAR	r0x1032
     0166 1Frr                      1- 3673     	BCR	r0x1032,6
     0167 01rr                      1- 3674     	MOVR	r0x1032,W
     0168 000r                      1- 3675     	IOST	_IOSTA
     0169                           1- 3676     _02109_DS_:
                                    1- 3677     	.line	505, "main.c"; 	indexScan++; //! 1ms 调用一次
                                    1- 3678     	BANKSEL	_io_led_scan_indexScan_65536_29
     0169 rrrr                      3-  109 m1      .banksel ram_address
     016A 05rr                      1- 3679     	INCR	_io_led_scan_indexScan_65536_29,F
                                    1- 3680     	.line	506, "main.c"; 	if (0 == forceDispTimer)
                                    1- 3681     	BANKSEL	_forceDispTimer
     016B rrrr                      3-  109 m1      .banksel ram_address
     016C 01rr                      1- 3682     	MOVR	_forceDispTimer,W
     016D 0903                      1- 3683     	BTRSS	STATUS,2
                                    1- 3684     	MGOTO	_02120_DS_
     016E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3685     	.line	508, "main.c"; 	if (displayHundred & SEG_B) // 100
                                    1- 3686     	BANKSEL	_displayHundred
     016F rrrr                      3-  109 m1      .banksel ram_address
     0170 08rr                      1- 3687     	BTRSS	_displayHundred,1
                                    1- 3688     	MGOTO	_02117_DS_
     0171 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3689     	.line	510, "main.c"; 	if (indexScan == 6) // 3G
                                    1- 3690     	BANKSEL	_io_led_scan_indexScan_65536_29
     0172 rrrr                      3-  109 m1      .banksel ram_address
     0173 01rr                      1- 3691     	MOVR	_io_led_scan_indexScan_65536_29,W
     0174 2406                      1- 3692     	XORIA	0x06
     0175 0D03                      1- 3693     	BTRSC	STATUS,2
                                    1- 3694     	.line	512, "main.c"; 	indexScan++;
     0176 05rr                      1- 3695     	INCR	_io_led_scan_indexScan_65536_29,F
                                    1- 3696     	.line	515, "main.c"; 	if (indexScan == 13) // 2G
     0177 01rr                      1- 3697     	MOVR	_io_led_scan_indexScan_65536_29,W
     0178 240D                      1- 3698     	XORIA	0x0d
     0179 0903                      1- 3699     	BTRSS	STATUS,2
                                    1- 3700     	MGOTO	_02120_DS_
     017A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3701     	.line	517, "main.c"; 	indexScan++;
     017B 05rr                      1- 3702     	INCR	_io_led_scan_indexScan_65536_29,F
                                    1- 3703     	MGOTO	_02120_DS_
     017C 3rrr                      3-   62 m1      LGOTO rom_address
     017D                           1- 3704     _02117_DS_:
                                    1- 3705     	.line	522, "main.c"; 	if (indexScan == 14) // 1B
                                    1- 3706     	BANKSEL	_io_led_scan_indexScan_65536_29
     017D rrrr                      3-  109 m1      .banksel ram_address
     017E 01rr                      1- 3707     	MOVR	_io_led_scan_indexScan_65536_29,W
     017F 240E                      1- 3708     	XORIA	0x0e
     0180 0903                      1- 3709     	BTRSS	STATUS,2
                                    1- 3710     	MGOTO	_02120_DS_
     0181 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3711     	.line	524, "main.c"; 	indexScan++;
     0182 05rr                      1- 3712     	INCR	_io_led_scan_indexScan_65536_29,F
                                    1- 3713     	.line	525, "main.c"; 	indexScan++; // 1C
     0183 05rr                      1- 3714     	INCR	_io_led_scan_indexScan_65536_29,F
                                    1- 3715     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3716     ;;unsigned compare: left >= lit(0x12=18), size=1
     0184                           1- 3717     _02120_DS_:
                                    1- 3718     	.line	534, "main.c"; 	if (indexScan > 17) //
     0184 2112                      1- 3719     	MOVIA	0x12
                                    1- 3720     	BANKSEL	_io_led_scan_indexScan_65536_29
     0185 rrrr                      3-  109 m1      .banksel ram_address
     0186 04rr                      1- 3721     	SUBAR	_io_led_scan_indexScan_65536_29,W
     0187 0C03                      1- 3722     	BTRSC	STATUS,0
                                    1- 3723     	.line	536, "main.c"; 	indexScan = 0;
     0188 02rr                      1- 3724     	CLRR	_io_led_scan_indexScan_65536_29
                                    1- 3725     	.line	538, "main.c"; 	}
                                    1- 3726     	RETURN	
     0189 0010                      3-   39 m1      ret
                                    1- 3728     ;***
                                    1- 3729     ;  pBlock Stats: dbName = C
                                    1- 3730     ;***
                                    1- 3731     ;has an exit
                                    1- 3732     ;1 compiler assigned register :
                                    1- 3733     ;   r0x101B
                                    1- 3734     ;; Starting pCode block
                                    1- 3735     .segment "code"; module=main, function=__dly_us
     0000                           1- 3737     __dly_us:
                                    1- 3738     ; 2 exit points
                                    1- 3739     	.line	288, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3740     	BANKSEL	r0x101B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3741     	MOVAR	r0x101B
     0002                           1- 3742     _02046_DS_:
                                    1- 3743     	.line	290, "main.c"; 	while (cnt)
                                    1- 3744     	BANKSEL	r0x101B
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3745     	MOVR	r0x101B,W
     0004 0D03                      1- 3746     	BTRSC	STATUS,2
                                    1- 3747     	MGOTO	_02049_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3748     	.line	292, "main.c"; 	cnt--;
     0006 06rr                      1- 3749     	DECR	r0x101B,F
                                    1- 3750     	MGOTO	_02046_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3751     _02049_DS_:
                                    1- 3752     	.line	294, "main.c"; 	}
                                    1- 3753     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3754     ; exit point of __dly_us
                                    1- 3756     ;***
                                    1- 3757     ;  pBlock Stats: dbName = C
                                    1- 3758     ;***
                                    1- 3759     ;has an exit
                                    1- 3760     ;; Starting pCode block
                                    1- 3761     .segment "code"; module=main, function=_disable_breathing_mode
     0000                           1- 3763     _disable_breathing_mode:
                                    1- 3764     ; 2 exit points
                                    1- 3765     	.line	280, "main.c"; 	bFlag_is_breathing_mode = 0;
                                    1- 3766     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 1Crr                      1- 3767     	BCR	_vFlag_1,0
                                    1- 3768     	.line	281, "main.c"; 	indicator_light_mode = 0;
                                    1- 3769     	BANKSEL	_indicator_light_mode
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 3770     	CLRR	_indicator_light_mode
                                    1- 3771     	.line	282, "main.c"; 	P_LED_R_CLR;
     0004 1Err                      1- 3772     	BCR	_PORTBbits,4
                                    1- 3773     	.line	283, "main.c"; 	P_LED_G_CLR;
     0005 1Drr                      1- 3774     	BCR	_PORTBbits,3
                                    1- 3775     	.line	284, "main.c"; 	P_LED_B_CLR;
     0006 1Drr                      1- 3776     	BCR	_PORTBbits,2
                                    1- 3777     	.line	285, "main.c"; 	}
                                    1- 3778     	RETURN	
     0007 0010                      3-   39 m1      ret
                                    1- 3779     ; exit point of _disable_breathing_mode
                                    1- 3781     ;***
                                    1- 3782     ;  pBlock Stats: dbName = C
                                    1- 3783     ;***
                                    1- 3784     ;has an exit
                                    1- 3785     ;; Starting pCode block
                                    1- 3786     .segment "code"; module=main, function=_enable_breathing_mode
     0000                           1- 3788     _enable_breathing_mode:
                                    1- 3789     ; 2 exit points
                                    1- 3790     	.line	273, "main.c"; 	bFlag_is_breathing_mode = 1;
                                    1- 3791     	BANKSEL	_vFlag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 18rr                      1- 3792     	BSR	_vFlag_1,0
                                    1- 3793     	.line	274, "main.c"; 	bFlag_inc_or_dec = 0;
     0002 1Crr                      1- 3794     	BCR	_vFlag_1,1
                                    1- 3795     	.line	275, "main.c"; 	indicator_light_mode = 0;
                                    1- 3796     	BANKSEL	_indicator_light_mode
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 3797     	CLRR	_indicator_light_mode
                                    1- 3798     	.line	276, "main.c"; 	}
                                    1- 3799     	RETURN	
     0005 0010                      3-   39 m1      ret
                                    1- 3800     ; exit point of _enable_breathing_mode
                                    1- 3803     ;	code size estimation:
                                    1- 3804     ;	 1571+  384 =  1955 instructions ( 4678 byte)
                                    1- 3806     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
